





<!DOCTYPE html>
<html
  lang="en"
  
  data-color-mode="auto" data-light-theme="light" data-dark-theme="dark"
  data-a11y-animated-images="system" data-a11y-link-underlines="true"
  
  >



  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">
  <link rel="preconnect" href="https://github.githubassets.com" crossorigin>
  <link rel="preconnect" href="https://avatars.githubusercontent.com">

  


  <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/light-0cfd1fd8509e.css" /><link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/dark-d782f59290e2.css" /><link data-color-theme="dark_dimmed" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_dimmed-f9fbc4b99a77.css" /><link data-color-theme="dark_high_contrast" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_high_contrast-cff1c9b27b1a.css" /><link data-color-theme="dark_colorblind" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_colorblind-70097f75aec1.css" /><link data-color-theme="light_colorblind" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_colorblind-c2f0d49bdcd9.css" /><link data-color-theme="light_high_contrast" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_high_contrast-4747d7bc0bc4.css" /><link data-color-theme="light_tritanopia" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_tritanopia-d3f6a61c91c8.css" /><link data-color-theme="dark_tritanopia" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_tritanopia-a188d53f44bb.css" />

    <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-primitives-52ea80b74554.css" />
    <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-c2a395868004.css" />
    <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/global-2f00718c6733.css" />
    <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/github-ee2a200f1d82.css" />
  <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/repository-d031bcc14e1b.css" />
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/code-9e1913b328be.css" />

  


  <script type="application/json" id="client-env">{"locale":"en","featureFlags":["copilot_new_references_ui","copilot_beta_features_opt_in","copilot_conversational_ux_history_refs","copilot_implicit_context","copilot_smell_icebreaker_ux","experimentation_azure_variant_endpoint","failbot_handle_non_errors","geojson_azure_maps","ghost_pilot_confidence_truncation_25","ghost_pilot_confidence_truncation_40","hovercard_accessibility","issues_react_new_timeline","issues_react_avatar_refactor","issues_react_remove_placeholders","issues_react_blur_item_picker_on_close","marketing_pages_search_explore_provider","react_keyboard_shortcuts_dialog","remove_child_patch","sample_network_conn_type","site_metered_billing_update","lifecycle_label_name_updates"]}</script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/wp-runtime-38486bb93913.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_oddbird_popover-polyfill_dist_popover_js-9da652f58479.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_arianotify-polyfill_ariaNotify-polyfill_js-node_modules_github_mi-3abb8f-d7e6bc799724.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_failbot_failbot_ts-09435cd1cf6d.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/environment-7b93e0f0c8ff.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_primer_behaviors_dist_esm_index_mjs-ea2a5d75d580.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_selector-observer_dist_index_esm_js-f690fd9ae3d5.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_relative-time-element_dist_index_js-f6da4b3fa34c.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_combobox-nav_dist_index_js-node_modules_github_g-emoji-element_di-6ce195-8dc38c1f27cc.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_auto-complete-element_dist_index_js-node_modules_github_catalyst_-8e9f78-a74b4e0a8a6b.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_text-expander-element_dist_index_js-78748950cb0c.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_filter-input-element_dist_index_js-node_modules_github_remote-inp-b5f1d7-a1760ffda83d.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_file-attachment-element_dist_index_js-node_modules_primer_view-co-381a4f-dbe893247b8c.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/github-elements-902713b269e2.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/element-registry-20404031d2d6.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_braintree_browser-detection_dist_browser-detection_js-node_modules_githu-bb80ec-1b4f4deecd3a.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_lit-html_lit-html_js-be8cb88f481b.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_morphdom_dist_morphdom-e-7c534c-a4a1922eb55f.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_turbo_dist_turbo_es2017-esm_js-e3cbe28f1638.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_delegated-events_dist_inde-893f9f-6cf3320416b8.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_color-convert_index_js-e3180fe3bcb3.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_quote-selection_dist_index_js-node_modules_github_session-resume_-69cfcc-833249ee3034.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_updatable-content_updatable-content_ts-c9fd14b8e4f0.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_behaviors_task-list_ts-app_assets_modules_github_sso_ts-ui_packages-900dde-917d4bda1f1a.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_sticky-scroll-into-view_ts-7cbef09a422c.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_behaviors_ajax-error_ts-app_assets_modules_github_behaviors_include-d0d0a6-b41aeef03499.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_behaviors_commenting_edit_ts-app_assets_modules_github_behaviors_ht-83c235-fb43816ab83c.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/behaviors-cdd8c224affb.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_delegated-events_dist_index_js-node_modules_github_catalyst_lib_index_js-f6223d90c7ba.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/notifications-global-cfcd9f4f0f23.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_github_catalyst_lib_inde-dbbea9-26cce2010167.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/code-menu-a6586c32bc2f.js"></script>
  
  <script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/primer-react-c8dd4a584007.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/react-core-5eb582e1c3df.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/react-lib-2131e17288a8.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/octicons-react-45c3a19dd792.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_tanstack_query-core_build_modern_queryClient_js-e6f07a7e80b7.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_emotion_is-prop-valid_dist_emotion-is-prop-valid_esm_js-node_modules_emo-37e3d5-92730c05e718.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_stacktrace-parser_dist_s-e7dcdd-f7cc96ebae76.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_oddbird_popover-polyfill_dist_popover-fn_js-55fea94174bf.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_dompurify_dist_purify_js-b89b98661809.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_lodash-es__Stack_js-node_modules_lodash-es__Uint8Array_js-node_modules_l-4faaa6-10d8eea337ce.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_lodash-es__baseIsEqual_js-8929eb9718d5.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_react-reverse-portal_dist_web_index_js-node_modules_primer_live-region-e-18c5ad-0b67a5a18b33.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_aria-live_aria-live_ts-ui_packages_promise-with-resolvers-polyfill_promise-with-r-014121-a7926fdcecf7.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_paths_index_ts-f12c66ceb89d.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_ref-selector_RefSelector_tsx-19a0220cffbe.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_code-view-shared_utilities_web-worker_ts-ui_packages_code-view-shared_worker-jobs-cdcae1-765f565f9fae.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_code-view-shared_hooks_use-canonical-object_ts-ui_packages_code-view-shared_hooks-503c34-6a50f4f15111.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_document-metadata_document-metadata_ts-ui_packages_repos-file-tree-view_repos-fil-5db355-540f13f82399.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_blob-anchor_ts-ui_packages_code-nav_code-nav_ts-ui_packages_filter--8253c1-f38cdfca9137.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/react-code-view-1ba0eee07cdc.js"></script>
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-react.62690248c131a6fc074d.module.css" />
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/react-code-view.6b587a69b593e23c3657.module.css" />

  <script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/primer-react-c8dd4a584007.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/react-core-5eb582e1c3df.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/react-lib-2131e17288a8.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/octicons-react-45c3a19dd792.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_tanstack_query-core_build_modern_queryClient_js-e6f07a7e80b7.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_emotion_is-prop-valid_dist_emotion-is-prop-valid_esm_js-node_modules_emo-37e3d5-92730c05e718.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_stacktrace-parser_dist_s-e7dcdd-f7cc96ebae76.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_oddbird_popover-polyfill_dist_popover-fn_js-55fea94174bf.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/notifications-subscriptions-menu-d05c8cc2fd47.js"></script>
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-react.62690248c131a6fc074d.module.css" />
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/notifications-subscriptions-menu.1bcff9205c241e99cff2.module.css" />


  <title>calico/manifests/tigera-operator.yaml at release-v3.26 · projectcalico/calico · GitHub</title>



  <meta name="route-pattern" content="/:user_id/:repository/blob/*name(/*path)" data-turbo-transient>
  <meta name="route-controller" content="blob" data-turbo-transient>
  <meta name="route-action" content="show" data-turbo-transient>

    
  <meta name="current-catalog-service-hash" content="f3abb0cc802f3d7b95fc8762b94bdcb13bf39634c40c357301c4aa1d67a256fb">


  <meta name="request-id" content="C6BC:37524D:24A1B1F:258D32F:6758F4DF" data-pjax-transient="true"/><meta name="html-safe-nonce" content="0957addad201f277557d83ad2f915bbbe7ed911cde8421b3656247263cf2ee22" data-pjax-transient="true"/><meta name="visitor-payload" content="eyJyZWZlcnJlciI6IiIsInJlcXVlc3RfaWQiOiJDNkJDOjM3NTI0RDoyNEExQjFGOjI1OEQzMkY6Njc1OEY0REYiLCJ2aXNpdG9yX2lkIjoiNzY3OTUxNjM2MTUyMjQ3NjI1NSIsInJlZ2lvbl9lZGdlIjoiZnJhIiwicmVnaW9uX3JlbmRlciI6ImZyYSJ9" data-pjax-transient="true"/><meta name="visitor-hmac" content="616bb7c20eb32522f19bf06e7809fe0dcec34f009bb7a915235714fbebb9f5b6" data-pjax-transient="true"/>


    <meta name="hovercard-subject-tag" content="repository:63882194" data-turbo-transient>


  <meta name="github-keyboard-shortcuts" content="repository,source-code,file-tree,copilot" data-turbo-transient="true" />
  

  <meta name="selected-link" value="repo_source" data-turbo-transient>
  <link rel="assets" href="https://github.githubassets.com/">

    <meta name="google-site-verification" content="Apib7-x98H0j5cPqHWwSMm6dNU4GmODRoqxLiDzdx9I">

<meta name="octolytics-url" content="https://collector.github.com/github/collect" />

  <meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-turbo-transient="true" />

  




    <meta name="user-login" content="">

  

    <meta name="viewport" content="width=device-width">

    

      <meta name="description" content="Cloud native networking and network security. Contribute to projectcalico/calico development by creating an account on GitHub.">

      <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">

    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <meta property="fb:app_id" content="1401488693436528">
    <meta name="apple-itunes-app" content="app-id=1477376905, app-argument=https://github.com/projectcalico/calico/blob/release-v3.26/manifests/tigera-operator.yaml" />

      <meta name="twitter:image" content="https://opengraph.githubassets.com/37a8b56fc7b2ebf49dd700e246e46b9abc189e01a542a23eb5ba0153dff966ad/projectcalico/calico" /><meta name="twitter:site" content="@github" /><meta name="twitter:card" content="summary_large_image" /><meta name="twitter:title" content="calico/manifests/tigera-operator.yaml at release-v3.26 · projectcalico/calico" /><meta name="twitter:description" content="Cloud native networking and network security. Contribute to projectcalico/calico development by creating an account on GitHub." />
  <meta property="og:image" content="https://opengraph.githubassets.com/37a8b56fc7b2ebf49dd700e246e46b9abc189e01a542a23eb5ba0153dff966ad/projectcalico/calico" /><meta property="og:image:alt" content="Cloud native networking and network security. Contribute to projectcalico/calico development by creating an account on GitHub." /><meta property="og:image:width" content="1200" /><meta property="og:image:height" content="600" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="calico/manifests/tigera-operator.yaml at release-v3.26 · projectcalico/calico" /><meta property="og:url" content="https://github.com/projectcalico/calico/blob/release-v3.26/manifests/tigera-operator.yaml" /><meta property="og:description" content="Cloud native networking and network security. Contribute to projectcalico/calico development by creating an account on GitHub." />
  




      <meta name="hostname" content="github.com">



        <meta name="expected-hostname" content="github.com">


  <meta http-equiv="x-pjax-version" content="91599c6a3578cc22e2d6200a61f15ba0789e249a1297ce91872788fa1d1df583" data-turbo-track="reload">
  <meta http-equiv="x-pjax-csp-version" content="ace39c3b6632770952207593607e6e0be0db363435a8b877b1f96abe6430f345" data-turbo-track="reload">
  <meta http-equiv="x-pjax-css-version" content="e3270fe255e2bf44e21cc5e1640102abc71a2de76b6977649bbc8fca605bdf02" data-turbo-track="reload">
  <meta http-equiv="x-pjax-js-version" content="f22422497ce8d7435668a3f67a553a2d498286a92da636b5cb8c4bd28720ccae" data-turbo-track="reload">

  <meta name="turbo-cache-control" content="no-preview" data-turbo-transient="">

      <meta name="turbo-cache-control" content="no-cache" data-turbo-transient>

    <meta data-hydrostats="publish">

  <meta name="go-import" content="github.com/projectcalico/calico git https://github.com/projectcalico/calico.git">

  <meta name="octolytics-dimension-user_id" content="12304728" /><meta name="octolytics-dimension-user_login" content="projectcalico" /><meta name="octolytics-dimension-repository_id" content="63882194" /><meta name="octolytics-dimension-repository_nwo" content="projectcalico/calico" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="63882194" /><meta name="octolytics-dimension-repository_network_root_nwo" content="projectcalico/calico" />



    

    <meta name="turbo-body-classes" content="logged-out env-production page-responsive">


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://github.githubassets.com/assets/pinned-octocat-093da3e6fa40.svg" color="#000000">
  <link rel="alternate icon" class="js-site-favicon" type="image/png" href="https://github.githubassets.com/favicons/favicon.png">
  <link rel="icon" class="js-site-favicon" type="image/svg+xml" href="https://github.githubassets.com/favicons/favicon.svg" data-base-href="https://github.githubassets.com/favicons/favicon">

<meta name="theme-color" content="#1e2327">
<meta name="color-scheme" content="light dark" />


  <link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-out env-production page-responsive" style="word-wrap: break-word;">
    <div data-turbo-body class="logged-out env-production page-responsive" style="word-wrap: break-word;">
      


    <div class="position-relative header-wrapper js-header-wrapper ">
      <a href="#start-of-content" data-skip-target-assigned="false" class="px-2 py-4 color-bg-accent-emphasis color-fg-on-emphasis show-on-focus js-skip-to-content">Skip to content</a>

      <span data-view-component="true" class="progress-pjax-loader Progress position-fixed width-full">
    <span style="width: 0%;" data-view-component="true" class="Progress-item progress-pjax-loader-bar left-0 top-0 color-bg-accent-emphasis"></span>
</span>      
      
      <script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_ui-commands_ui-commands_ts-47397385aa96.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/keyboard-shortcuts-dialog-e77176e7ced8.js"></script>
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-react.62690248c131a6fc074d.module.css" />

<react-partial
  partial-name="keyboard-shortcuts-dialog"
  data-ssr="false"
  data-attempted-ssr="false"
>
  
  <script type="application/json" data-target="react-partial.embeddedData">{"props":{"docsUrl":"https://docs.github.com/get-started/accessibility/keyboard-shortcuts"}}</script>
  <div data-target="react-partial.reactRoot"></div>
</react-partial>




      

          

              
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_delegated-events_dist_inde-94fd67-73b675cf164a.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/sessions-5d6426bbf16a.js"></script>
<header class="HeaderMktg header-logged-out js-details-container js-header Details f4 py-3" role="banner" data-is-top="true" data-color-mode=light data-light-theme=light data-dark-theme=dark>
  <h2 class="sr-only">Navigation Menu</h2>

  <button type="button" class="HeaderMktg-backdrop d-lg-none border-0 position-fixed top-0 left-0 width-full height-full js-details-target" aria-label="Toggle navigation">
    <span class="d-none">Toggle navigation</span>
  </button>

  <div class="d-flex flex-column flex-lg-row flex-items-center px-3 px-md-4 px-lg-5 height-full position-relative z-1">
    <div class="d-flex flex-justify-between flex-items-center width-full width-lg-auto">
      <div class="flex-1">
        <button aria-label="Toggle navigation" aria-expanded="false" type="button" data-view-component="true" class="js-details-target js-nav-padding-recalculate js-header-menu-toggle Button--link Button--medium Button d-lg-none color-fg-inherit p-1">  <span class="Button-content">
    <span class="Button-label"><div class="HeaderMenu-toggle-bar rounded my-1"></div>
            <div class="HeaderMenu-toggle-bar rounded my-1"></div>
            <div class="HeaderMenu-toggle-bar rounded my-1"></div></span>
  </span>
</button>
      </div>

      <a class="mr-lg-3 color-fg-inherit flex-order-2 js-prevent-focus-on-mobile-nav"
        href="/"
        aria-label="Homepage"
        data-analytics-event="{&quot;category&quot;:&quot;Marketing nav&quot;,&quot;action&quot;:&quot;click to go to homepage&quot;,&quot;label&quot;:&quot;ref_page:Marketing;ref_cta:Logomark;ref_loc:Header&quot;}">
        <svg height="32" aria-hidden="true" viewBox="0 0 24 24" version="1.1" width="32" data-view-component="true" class="octicon octicon-mark-github">
    <path d="M12.5.75C6.146.75 1 5.896 1 12.25c0 5.089 3.292 9.387 7.863 10.91.575.101.79-.244.79-.546 0-.273-.014-1.178-.014-2.142-2.889.532-3.636-.704-3.866-1.35-.13-.331-.69-1.352-1.18-1.625-.402-.216-.977-.748-.014-.762.906-.014 1.553.834 1.769 1.179 1.035 1.74 2.688 1.25 3.349.948.1-.747.402-1.25.733-1.538-2.559-.287-5.232-1.279-5.232-5.678 0-1.25.445-2.285 1.178-3.09-.115-.288-.517-1.467.115-3.048 0 0 .963-.302 3.163 1.179.92-.259 1.897-.388 2.875-.388.977 0 1.955.13 2.875.388 2.2-1.495 3.162-1.179 3.162-1.179.633 1.581.23 2.76.115 3.048.733.805 1.179 1.825 1.179 3.09 0 4.413-2.688 5.39-5.247 5.678.417.36.776 1.05.776 2.128 0 1.538-.014 2.774-.014 3.162 0 .302.216.662.79.547C20.709 21.637 24 17.324 24 12.25 24 5.896 18.854.75 12.5.75Z"></path>
</svg>
      </a>

      <div class="flex-1 flex-order-2 text-right">
          <a
            href="/login?return_to=https%3A%2F%2Fgithub.com%2Fprojectcalico%2Fcalico%2Fblob%2Frelease-v3.26%2Fmanifests%2Ftigera-operator.yaml"
            class="HeaderMenu-link HeaderMenu-button d-inline-flex d-lg-none flex-order-1 f5 no-underline border color-border-default rounded-2 px-2 py-1 color-fg-inherit js-prevent-focus-on-mobile-nav"
            data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/projectcalico/calico/blob/release-v3.26/manifests/tigera-operator.yaml&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="e6e0ed2e0d86a2aa980921f3969370f9054192155c62a8b85e1e18e479cbc117"
            data-analytics-event="{&quot;category&quot;:&quot;Marketing nav&quot;,&quot;action&quot;:&quot;click to Sign in&quot;,&quot;label&quot;:&quot;ref_page:Marketing;ref_cta:Sign in;ref_loc:Header&quot;}"
          >
            Sign in
          </a>
      </div>
    </div>


    <div class="HeaderMenu js-header-menu height-fit position-lg-relative d-lg-flex flex-column flex-auto top-0">
      <div class="HeaderMenu-wrapper d-flex flex-column flex-self-start flex-lg-row flex-auto rounded rounded-lg-0">
          <nav class="HeaderMenu-nav" aria-label="Global">
            <ul class="d-lg-flex list-style-none">
                <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
      <button type="button" class="HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target" aria-expanded="false">
        Product
        <svg opacity="0.5" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-down HeaderMenu-icon ml-1">
    <path d="M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z"></path>
</svg>
      </button>
      <div class="HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 pt-2 pt-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 pb-2 pb-lg-4 d-lg-flex flex-wrap dropdown-menu-wide">
          <div class="HeaderMenu-column px-lg-4 border-lg-right mb-4 mb-lg-0 pr-lg-7">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0">
                <ul class="list-style-none f5" >
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_copilot&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_copilot_link_product_navbar&quot;}" href="https://github.com/features/copilot">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-copilot color-fg-subtle mr-3">
    <path d="M23.922 16.992c-.861 1.495-5.859 5.023-11.922 5.023-6.063 0-11.061-3.528-11.922-5.023A.641.641 0 0 1 0 16.736v-2.869a.841.841 0 0 1 .053-.22c.372-.935 1.347-2.292 2.605-2.656.167-.429.414-1.055.644-1.517a10.195 10.195 0 0 1-.052-1.086c0-1.331.282-2.499 1.132-3.368.397-.406.89-.717 1.474-.952 1.399-1.136 3.392-2.093 6.122-2.093 2.731 0 4.767.957 6.166 2.093.584.235 1.077.546 1.474.952.85.869 1.132 2.037 1.132 3.368 0 .368-.014.733-.052 1.086.23.462.477 1.088.644 1.517 1.258.364 2.233 1.721 2.605 2.656a.832.832 0 0 1 .053.22v2.869a.641.641 0 0 1-.078.256ZM12.172 11h-.344a4.323 4.323 0 0 1-.355.508C10.703 12.455 9.555 13 7.965 13c-1.725 0-2.989-.359-3.782-1.259a2.005 2.005 0 0 1-.085-.104L4 11.741v6.585c1.435.779 4.514 2.179 8 2.179 3.486 0 6.565-1.4 8-2.179v-6.585l-.098-.104s-.033.045-.085.104c-.793.9-2.057 1.259-3.782 1.259-1.59 0-2.738-.545-3.508-1.492a4.323 4.323 0 0 1-.355-.508h-.016.016Zm.641-2.935c.136 1.057.403 1.913.878 2.497.442.544 1.134.938 2.344.938 1.573 0 2.292-.337 2.657-.751.384-.435.558-1.15.558-2.361 0-1.14-.243-1.847-.705-2.319-.477-.488-1.319-.862-2.824-1.025-1.487-.161-2.192.138-2.533.529-.269.307-.437.808-.438 1.578v.021c0 .265.021.562.063.893Zm-1.626 0c.042-.331.063-.628.063-.894v-.02c-.001-.77-.169-1.271-.438-1.578-.341-.391-1.046-.69-2.533-.529-1.505.163-2.347.537-2.824 1.025-.462.472-.705 1.179-.705 2.319 0 1.211.175 1.926.558 2.361.365.414 1.084.751 2.657.751 1.21 0 1.902-.394 2.344-.938.475-.584.742-1.44.878-2.497Z"></path><path d="M14.5 14.25a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Zm-5 0a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">GitHub Copilot</div>
        Write better code with AI
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;security&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;security_link_product_navbar&quot;}" href="https://github.com/features/security">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-shield-check color-fg-subtle mr-3">
    <path d="M16.53 9.78a.75.75 0 0 0-1.06-1.06L11 13.19l-1.97-1.97a.75.75 0 0 0-1.06 1.06l2.5 2.5a.75.75 0 0 0 1.06 0l5-5Z"></path><path d="m12.54.637 8.25 2.675A1.75 1.75 0 0 1 22 4.976V10c0 6.19-3.771 10.704-9.401 12.83a1.704 1.704 0 0 1-1.198 0C5.77 20.705 2 16.19 2 10V4.976c0-.758.489-1.43 1.21-1.664L11.46.637a1.748 1.748 0 0 1 1.08 0Zm-.617 1.426-8.25 2.676a.249.249 0 0 0-.173.237V10c0 5.46 3.28 9.483 8.43 11.426a.199.199 0 0 0 .14 0C17.22 19.483 20.5 15.461 20.5 10V4.976a.25.25 0 0 0-.173-.237l-8.25-2.676a.253.253 0 0 0-.154 0Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">Security</div>
        Find and fix vulnerabilities
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;actions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;actions_link_product_navbar&quot;}" href="https://github.com/features/actions">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-workflow color-fg-subtle mr-3">
    <path d="M1 3a2 2 0 0 1 2-2h6.5a2 2 0 0 1 2 2v6.5a2 2 0 0 1-2 2H7v4.063C7 16.355 7.644 17 8.438 17H12.5v-2.5a2 2 0 0 1 2-2H21a2 2 0 0 1 2 2V21a2 2 0 0 1-2 2h-6.5a2 2 0 0 1-2-2v-2.5H8.437A2.939 2.939 0 0 1 5.5 15.562V11.5H3a2 2 0 0 1-2-2Zm2-.5a.5.5 0 0 0-.5.5v6.5a.5.5 0 0 0 .5.5h6.5a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5ZM14.5 14a.5.5 0 0 0-.5.5V21a.5.5 0 0 0 .5.5H21a.5.5 0 0 0 .5-.5v-6.5a.5.5 0 0 0-.5-.5Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">Actions</div>
        Automate any workflow
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;codespaces&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;codespaces_link_product_navbar&quot;}" href="https://github.com/features/codespaces">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-codespaces color-fg-subtle mr-3">
    <path d="M3.5 3.75C3.5 2.784 4.284 2 5.25 2h13.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 18.75 13H5.25a1.75 1.75 0 0 1-1.75-1.75Zm-2 12c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v4a1.75 1.75 0 0 1-1.75 1.75H3.25a1.75 1.75 0 0 1-1.75-1.75ZM5.25 3.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h13.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Zm-2 12a.25.25 0 0 0-.25.25v4c0 .138.112.25.25.25h17.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25Z"></path><path d="M10 17.75a.75.75 0 0 1 .75-.75h6.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1-.75-.75Zm-4 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">Codespaces</div>
        Instant dev environments
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;issues&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;issues_link_product_navbar&quot;}" href="https://github.com/features/issues">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-issue-opened color-fg-subtle mr-3">
    <path d="M12 1c6.075 0 11 4.925 11 11s-4.925 11-11 11S1 18.075 1 12 5.925 1 12 1ZM2.5 12a9.5 9.5 0 0 0 9.5 9.5 9.5 9.5 0 0 0 9.5-9.5A9.5 9.5 0 0 0 12 2.5 9.5 9.5 0 0 0 2.5 12Zm9.5 2a2 2 0 1 1-.001-3.999A2 2 0 0 1 12 14Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">Issues</div>
        Plan and track work
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_review&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_review_link_product_navbar&quot;}" href="https://github.com/features/code-review">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-code-review color-fg-subtle mr-3">
    <path d="M10.3 6.74a.75.75 0 0 1-.04 1.06l-2.908 2.7 2.908 2.7a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 0 1 1.06.04Zm3.44 1.06a.75.75 0 1 1 1.02-1.1l3.5 3.25a.75.75 0 0 1 0 1.1l-3.5 3.25a.75.75 0 1 1-1.02-1.1l2.908-2.7-2.908-2.7Z"></path><path d="M1.5 4.25c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v12.5a1.75 1.75 0 0 1-1.75 1.75h-9.69l-3.573 3.573A1.458 1.458 0 0 1 5 21.043V18.5H3.25a1.75 1.75 0 0 1-1.75-1.75ZM3.25 4a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h2.5a.75.75 0 0 1 .75.75v3.19l3.72-3.72a.749.749 0 0 1 .53-.22h10a.25.25 0 0 0 .25-.25V4.25a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">Code Review</div>
        Manage code changes
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;discussions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;discussions_link_product_navbar&quot;}" href="https://github.com/features/discussions">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-comment-discussion color-fg-subtle mr-3">
    <path d="M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 14.25 14H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 15.543V14H1.75A1.75 1.75 0 0 1 0 12.25v-9.5C0 1.784.784 1 1.75 1ZM1.5 2.75v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Z"></path><path d="M22.5 8.75a.25.25 0 0 0-.25-.25h-3.5a.75.75 0 0 1 0-1.5h3.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 22.25 20H21v1.543a1.457 1.457 0 0 1-2.487 1.03L15.939 20H10.75A1.75 1.75 0 0 1 9 18.25v-1.465a.75.75 0 0 1 1.5 0v1.465c0 .138.112.25.25.25h5.5a.75.75 0 0 1 .53.22l2.72 2.72v-2.19a.75.75 0 0 1 .75-.75h2a.25.25 0 0 0 .25-.25v-9.5Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">Discussions</div>
        Collaborate outside of code
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_search&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_search_link_product_navbar&quot;}" href="https://github.com/features/code-search">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-code-square color-fg-subtle mr-3">
    <path d="M10.3 8.24a.75.75 0 0 1-.04 1.06L7.352 12l2.908 2.7a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 0 1 1.06.04Zm3.44 1.06a.75.75 0 1 1 1.02-1.1l3.5 3.25a.75.75 0 0 1 0 1.1l-3.5 3.25a.75.75 0 1 1-1.02-1.1l2.908-2.7-2.908-2.7Z"></path><path d="M2 3.75C2 2.784 2.784 2 3.75 2h16.5c.966 0 1.75.784 1.75 1.75v16.5A1.75 1.75 0 0 1 20.25 22H3.75A1.75 1.75 0 0 1 2 20.25Zm1.75-.25a.25.25 0 0 0-.25.25v16.5c0 .138.112.25.25.25h16.5a.25.25 0 0 0 .25-.25V3.75a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">Code Search</div>
        Find more, search less
      </div>

    
</a></li>

                </ul>
              </div>
          </div>
          <div class="HeaderMenu-column px-lg-4">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0 border-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="product-explore-heading">Explore</span>
                <ul class="list-style-none f5" aria-labelledby="product-explore-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;all_features&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;all_features_link_product_navbar&quot;}" href="https://github.com/features">
      All features

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;documentation&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;documentation_link_product_navbar&quot;}" href="https://docs.github.com">
      Documentation

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_skills&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_skills_link_product_navbar&quot;}" href="https://skills.github.com">
      GitHub Skills

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;blog&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;blog_link_product_navbar&quot;}" href="https://github.blog">
      Blog

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                </ul>
              </div>
          </div>
      </div>
</li>

                  <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
      <button type="button" class="HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target" aria-expanded="false">
        Solutions
        <svg opacity="0.5" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-down HeaderMenu-icon ml-1">
    <path d="M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z"></path>
</svg>
      </button>
      <div class="HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 pt-2 pt-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 d-lg-flex flex-wrap dropdown-menu-wide">
          <div class="HeaderMenu-column px-lg-4 border-lg-right mb-4 mb-lg-0 pr-lg-7">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0 pb-lg-3 mb-3 mb-lg-0">
                    <span class="d-block h4 color-fg-default my-1" id="solutions-by-company-size-heading">By company size</span>
                <ul class="list-style-none f5" aria-labelledby="solutions-by-company-size-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprises&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprises_link_solutions_navbar&quot;}" href="https://github.com/enterprise">
      Enterprises

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;small_and_medium_teams&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;small_and_medium_teams_link_solutions_navbar&quot;}" href="https://github.com/team">
      Small and medium teams

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;startups&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;startups_link_solutions_navbar&quot;}" href="https://github.com/enterprise/startups">
      Startups

    
</a></li>

                </ul>
              </div>
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="solutions-by-use-case-heading">By use case</span>
                <ul class="list-style-none f5" aria-labelledby="solutions-by-use-case-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;devsecops&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;devsecops_link_solutions_navbar&quot;}" href="/solutions/use-case/devsecops">
      DevSecOps

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;devops&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;devops_link_solutions_navbar&quot;}" href="/solutions/use-case/devops">
      DevOps

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;ci_cd&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;ci_cd_link_solutions_navbar&quot;}" href="/solutions/use-case/ci-cd">
      CI/CD

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;view_all_use_cases&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;view_all_use_cases_link_solutions_navbar&quot;}" href="/solutions/use-case">
      View all use cases

    
</a></li>

                </ul>
              </div>
          </div>
          <div class="HeaderMenu-column px-lg-4">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="solutions-by-industry-heading">By industry</span>
                <ul class="list-style-none f5" aria-labelledby="solutions-by-industry-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;healthcare&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;healthcare_link_solutions_navbar&quot;}" href="/solutions/industry/healthcare">
      Healthcare

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;financial_services&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;financial_services_link_solutions_navbar&quot;}" href="/solutions/industry/financial-services">
      Financial services

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;manufacturing&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;manufacturing_link_solutions_navbar&quot;}" href="/solutions/industry/manufacturing">
      Manufacturing

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;government&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;government_link_solutions_navbar&quot;}" href="/solutions/industry/government">
      Government

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;view_all_industries&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;view_all_industries_link_solutions_navbar&quot;}" href="/solutions/industry">
      View all industries

    
</a></li>

                </ul>
              </div>
          </div>
         <div class="HeaderMenu-trailing-link rounded-bottom-2 flex-shrink-0 mt-lg-4 px-lg-4 py-4 py-lg-3 f5 text-semibold">
            <a href="/solutions">
              View all solutions
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-right HeaderMenu-trailing-link-icon">
    <path d="M6.22 3.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L9.94 8 6.22 4.28a.75.75 0 0 1 0-1.06Z"></path>
</svg>
</a>         </div>
      </div>
</li>

                  <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
      <button type="button" class="HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target" aria-expanded="false">
        Resources
        <svg opacity="0.5" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-down HeaderMenu-icon ml-1">
    <path d="M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z"></path>
</svg>
      </button>
      <div class="HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 pt-2 pt-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 pb-2 pb-lg-4 d-lg-flex flex-wrap dropdown-menu-wide">
          <div class="HeaderMenu-column px-lg-4 border-lg-right mb-4 mb-lg-0 pr-lg-7">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="resources-topics-heading">Topics</span>
                <ul class="list-style-none f5" aria-labelledby="resources-topics-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;ai&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;ai_link_resources_navbar&quot;}" href="/resources/articles/ai">
      AI

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;devops&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;devops_link_resources_navbar&quot;}" href="/resources/articles/devops">
      DevOps

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;security&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;security_link_resources_navbar&quot;}" href="/resources/articles/security">
      Security

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;software_development&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;software_development_link_resources_navbar&quot;}" href="/resources/articles/software-development">
      Software Development

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;view_all&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;view_all_link_resources_navbar&quot;}" href="/resources/articles">
      View all

    
</a></li>

                </ul>
              </div>
          </div>
          <div class="HeaderMenu-column px-lg-4">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0 border-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="resources-explore-heading">Explore</span>
                <ul class="list-style-none f5" aria-labelledby="resources-explore-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;learning_pathways&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;learning_pathways_link_resources_navbar&quot;}" href="https://resources.github.com/learn/pathways">
      Learning Pathways

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;white_papers_ebooks_webinars&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;white_papers_ebooks_webinars_link_resources_navbar&quot;}" href="https://resources.github.com">
      White papers, Ebooks, Webinars

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;customer_stories&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;customer_stories_link_resources_navbar&quot;}" href="https://github.com/customer-stories">
      Customer Stories

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;partners&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;partners_link_resources_navbar&quot;}" href="https://partner.github.com">
      Partners

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;executive_insights&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;executive_insights_link_resources_navbar&quot;}" href="https://github.com/solutions/executive-insights">
      Executive Insights

    
</a></li>

                </ul>
              </div>
          </div>
      </div>
</li>


                <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
      <button type="button" class="HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target" aria-expanded="false">
        Open Source
        <svg opacity="0.5" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-down HeaderMenu-icon ml-1">
    <path d="M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z"></path>
</svg>
      </button>
      <div class="HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 pt-2 pt-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 pb-2 pb-lg-4 px-lg-4">
          <div class="HeaderMenu-column">
              <div class="border-bottom pb-3 pb-lg-0 pb-lg-3 mb-3 mb-lg-0 mb-lg-3">
                <ul class="list-style-none f5" >
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_sponsors&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_sponsors_link_open_source_navbar&quot;}" href="/sponsors">
      
      <div>
        <div class="color-fg-default h4">GitHub Sponsors</div>
        Fund open source developers
      </div>

    
</a></li>

                </ul>
              </div>
              <div class="border-bottom pb-3 pb-lg-0 pb-lg-3 mb-3 mb-lg-0 mb-lg-3">
                <ul class="list-style-none f5" >
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;the_readme_project&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;the_readme_project_link_open_source_navbar&quot;}" href="https://github.com/readme">
      
      <div>
        <div class="color-fg-default h4">The ReadME Project</div>
        GitHub community articles
      </div>

    
</a></li>

                </ul>
              </div>
              <div class="border-bottom pb-3 pb-lg-0 border-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="open-source-repositories-heading">Repositories</span>
                <ul class="list-style-none f5" aria-labelledby="open-source-repositories-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;topics&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;topics_link_open_source_navbar&quot;}" href="https://github.com/topics">
      Topics

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;trending&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;trending_link_open_source_navbar&quot;}" href="https://github.com/trending">
      Trending

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;collections&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;collections_link_open_source_navbar&quot;}" href="https://github.com/collections">
      Collections

    
</a></li>

                </ul>
              </div>
          </div>
      </div>
</li>


                <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
      <button type="button" class="HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target" aria-expanded="false">
        Enterprise
        <svg opacity="0.5" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-down HeaderMenu-icon ml-1">
    <path d="M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z"></path>
</svg>
      </button>
      <div class="HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 pt-2 pt-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 pb-2 pb-lg-4 px-lg-4">
          <div class="HeaderMenu-column">
              <div class="border-bottom pb-3 pb-lg-0 pb-lg-3 mb-3 mb-lg-0 mb-lg-3">
                <ul class="list-style-none f5" >
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprise_platform&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprise_platform_link_enterprise_navbar&quot;}" href="/enterprise">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-stack color-fg-subtle mr-3">
    <path d="M11.063 1.456a1.749 1.749 0 0 1 1.874 0l8.383 5.316a1.751 1.751 0 0 1 0 2.956l-8.383 5.316a1.749 1.749 0 0 1-1.874 0L2.68 9.728a1.751 1.751 0 0 1 0-2.956Zm1.071 1.267a.25.25 0 0 0-.268 0L3.483 8.039a.25.25 0 0 0 0 .422l8.383 5.316a.25.25 0 0 0 .268 0l8.383-5.316a.25.25 0 0 0 0-.422Z"></path><path d="M1.867 12.324a.75.75 0 0 1 1.035-.232l8.964 5.685a.25.25 0 0 0 .268 0l8.964-5.685a.75.75 0 0 1 .804 1.267l-8.965 5.685a1.749 1.749 0 0 1-1.874 0l-8.965-5.685a.75.75 0 0 1-.231-1.035Z"></path><path d="M1.867 16.324a.75.75 0 0 1 1.035-.232l8.964 5.685a.25.25 0 0 0 .268 0l8.964-5.685a.75.75 0 0 1 .804 1.267l-8.965 5.685a1.749 1.749 0 0 1-1.874 0l-8.965-5.685a.75.75 0 0 1-.231-1.035Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">Enterprise platform</div>
        AI-powered developer platform
      </div>

    
</a></li>

                </ul>
              </div>
              <div class="border-bottom pb-3 pb-lg-0 border-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="enterprise-available-add-ons-heading">Available add-ons</span>
                <ul class="list-style-none f5" aria-labelledby="enterprise-available-add-ons-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;advanced_security&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;advanced_security_link_enterprise_navbar&quot;}" href="https://github.com/enterprise/advanced-security">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-shield-check color-fg-subtle mr-3">
    <path d="M16.53 9.78a.75.75 0 0 0-1.06-1.06L11 13.19l-1.97-1.97a.75.75 0 0 0-1.06 1.06l2.5 2.5a.75.75 0 0 0 1.06 0l5-5Z"></path><path d="m12.54.637 8.25 2.675A1.75 1.75 0 0 1 22 4.976V10c0 6.19-3.771 10.704-9.401 12.83a1.704 1.704 0 0 1-1.198 0C5.77 20.705 2 16.19 2 10V4.976c0-.758.489-1.43 1.21-1.664L11.46.637a1.748 1.748 0 0 1 1.08 0Zm-.617 1.426-8.25 2.676a.249.249 0 0 0-.173.237V10c0 5.46 3.28 9.483 8.43 11.426a.199.199 0 0 0 .14 0C17.22 19.483 20.5 15.461 20.5 10V4.976a.25.25 0 0 0-.173-.237l-8.25-2.676a.253.253 0 0 0-.154 0Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">Advanced Security</div>
        Enterprise-grade security features
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_copilot&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_copilot_link_enterprise_navbar&quot;}" href="/features/copilot#enterprise">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-copilot color-fg-subtle mr-3">
    <path d="M23.922 16.992c-.861 1.495-5.859 5.023-11.922 5.023-6.063 0-11.061-3.528-11.922-5.023A.641.641 0 0 1 0 16.736v-2.869a.841.841 0 0 1 .053-.22c.372-.935 1.347-2.292 2.605-2.656.167-.429.414-1.055.644-1.517a10.195 10.195 0 0 1-.052-1.086c0-1.331.282-2.499 1.132-3.368.397-.406.89-.717 1.474-.952 1.399-1.136 3.392-2.093 6.122-2.093 2.731 0 4.767.957 6.166 2.093.584.235 1.077.546 1.474.952.85.869 1.132 2.037 1.132 3.368 0 .368-.014.733-.052 1.086.23.462.477 1.088.644 1.517 1.258.364 2.233 1.721 2.605 2.656a.832.832 0 0 1 .053.22v2.869a.641.641 0 0 1-.078.256ZM12.172 11h-.344a4.323 4.323 0 0 1-.355.508C10.703 12.455 9.555 13 7.965 13c-1.725 0-2.989-.359-3.782-1.259a2.005 2.005 0 0 1-.085-.104L4 11.741v6.585c1.435.779 4.514 2.179 8 2.179 3.486 0 6.565-1.4 8-2.179v-6.585l-.098-.104s-.033.045-.085.104c-.793.9-2.057 1.259-3.782 1.259-1.59 0-2.738-.545-3.508-1.492a4.323 4.323 0 0 1-.355-.508h-.016.016Zm.641-2.935c.136 1.057.403 1.913.878 2.497.442.544 1.134.938 2.344.938 1.573 0 2.292-.337 2.657-.751.384-.435.558-1.15.558-2.361 0-1.14-.243-1.847-.705-2.319-.477-.488-1.319-.862-2.824-1.025-1.487-.161-2.192.138-2.533.529-.269.307-.437.808-.438 1.578v.021c0 .265.021.562.063.893Zm-1.626 0c.042-.331.063-.628.063-.894v-.02c-.001-.77-.169-1.271-.438-1.578-.341-.391-1.046-.69-2.533-.529-1.505.163-2.347.537-2.824 1.025-.462.472-.705 1.179-.705 2.319 0 1.211.175 1.926.558 2.361.365.414 1.084.751 2.657.751 1.21 0 1.902-.394 2.344-.938.475-.584.742-1.44.878-2.497Z"></path><path d="M14.5 14.25a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Zm-5 0a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">GitHub Copilot</div>
        Enterprise-grade AI features
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;premium_support&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;premium_support_link_enterprise_navbar&quot;}" href="/premium-support">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-comment-discussion color-fg-subtle mr-3">
    <path d="M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 14.25 14H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 15.543V14H1.75A1.75 1.75 0 0 1 0 12.25v-9.5C0 1.784.784 1 1.75 1ZM1.5 2.75v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Z"></path><path d="M22.5 8.75a.25.25 0 0 0-.25-.25h-3.5a.75.75 0 0 1 0-1.5h3.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 22.25 20H21v1.543a1.457 1.457 0 0 1-2.487 1.03L15.939 20H10.75A1.75 1.75 0 0 1 9 18.25v-1.465a.75.75 0 0 1 1.5 0v1.465c0 .138.112.25.25.25h5.5a.75.75 0 0 1 .53.22l2.72 2.72v-2.19a.75.75 0 0 1 .75-.75h2a.25.25 0 0 0 .25-.25v-9.5Z"></path>
</svg>
      <div>
        <div class="color-fg-default h4">Premium Support</div>
        Enterprise-grade 24/7 support
      </div>

    
</a></li>

                </ul>
              </div>
          </div>
      </div>
</li>


                <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
    <a class="HeaderMenu-link no-underline px-0 px-lg-2 py-3 py-lg-2 d-block d-lg-inline-block" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;pricing&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;pricing_link_global_navbar&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div class="d-flex flex-column flex-lg-row width-full flex-justify-end flex-lg-items-center text-center mt-3 mt-lg-0 text-lg-left ml-lg-3">
                


<qbsearch-input class="search-input" data-scope="repo:projectcalico/calico" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="HJk0k9mnim1lJisC8SFgzclnL7EcjKOLkYlsmXQdsrYPEFit5t1tcZf0dV35L7afk7lukav2sGAx4N3BX1UXEQ" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="projectcalico/calico" data-current-org="projectcalico" data-current-owner="" data-logged-in="false" data-copilot-chat-enabled="false" data-nl-search-enabled="false" data-retain-scroll-position="true">
  <div
    class="search-input-container search-with-dialog position-relative d-flex flex-row flex-items-center mr-4 rounded"
    data-action="click:qbsearch-input#searchInputContainerClicked"
  >
      <button
        type="button"
        class="header-search-button placeholder  input-button form-control d-flex flex-1 flex-self-stretch flex-items-center no-wrap width-full py-0 pl-2 pr-0 text-left border-0 box-shadow-none"
        data-target="qbsearch-input.inputButton"
        aria-label="Search or jump to…"
        aria-haspopup="dialog"
        placeholder="Search or jump to..."
        data-hotkey=s,/
        autocapitalize="off"
        data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;searchbar&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;input&quot;,&quot;label&quot;:&quot;searchbar_input_global_navbar&quot;}"
        data-action="click:qbsearch-input#handleExpand"
      >
        <div class="mr-2 color-fg-muted">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search">
    <path d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"></path>
</svg>
        </div>
        <span class="flex-1" data-target="qbsearch-input.inputButtonText">Search or jump to...</span>
          <div class="d-flex" data-target="qbsearch-input.hotkeyIndicator">
            <svg xmlns="http://www.w3.org/2000/svg" width="22" height="20" aria-hidden="true" class="mr-1"><path fill="none" stroke="#979A9C" opacity=".4" d="M3.5.5h12c1.7 0 3 1.3 3 3v13c0 1.7-1.3 3-3 3h-12c-1.7 0-3-1.3-3-3v-13c0-1.7 1.3-3 3-3z"></path><path fill="#979A9C" d="M11.8 6L8 15.1h-.9L10.8 6h1z"></path></svg>

          </div>
      </button>

    <input type="hidden" name="type" class="js-site-search-type-field">

    
<div class="Overlay--hidden " data-modal-dialog-overlay>
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true" class="Overlay Overlay--width-large Overlay--height-auto">
      <h1 id="search-suggestions-dialog-header" class="sr-only">Search code, repositories, users, issues, pull requests...</h1>
    <div class="Overlay-body Overlay-body--paddingNone">
      
          <div data-view-component="true">        <div class="search-suggestions position-fixed width-full color-shadow-large border color-fg-default color-bg-default overflow-hidden d-flex flex-column query-builder-container"
          style="border-radius: 12px;"
          data-target="qbsearch-input.queryBuilderContainer"
          hidden
        >
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form id="query-builder-test-form" action="" accept-charset="UTF-8" method="get">
  <query-builder data-target="qbsearch-input.queryBuilder" id="query-builder-query-builder-test" data-filter-key=":" data-view-component="true" class="QueryBuilder search-query-builder">
    <div class="FormControl FormControl--fullWidth">
      <label id="query-builder-test-label" for="query-builder-test" class="FormControl-label sr-only">
        Search
      </label>
      <div
        class="QueryBuilder-StyledInput width-fit "
        data-target="query-builder.styledInput"
      >
          <span id="query-builder-test-leadingvisual-wrap" class="FormControl-input-leadingVisualWrap QueryBuilder-leadingVisualWrap">
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search FormControl-input-leadingVisual">
    <path d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"></path>
</svg>
          </span>
        <div data-target="query-builder.styledInputContainer" class="QueryBuilder-StyledInputContainer">
          <div
            aria-hidden="true"
            class="QueryBuilder-StyledInputContent"
            data-target="query-builder.styledInputContent"
          ></div>
          <div class="QueryBuilder-InputWrapper">
            <div aria-hidden="true" class="QueryBuilder-Sizer" data-target="query-builder.sizer"></div>
            <input id="query-builder-test" name="query-builder-test" value="" autocomplete="off" type="text" role="combobox" spellcheck="false" aria-expanded="false" aria-describedby="validation-b2ed9b67-d8c3-4c6e-8c0e-b7879f4e6865" data-target="query-builder.input" data-action="
          input:query-builder#inputChange
          blur:query-builder#inputBlur
          keydown:query-builder#inputKeydown
          focus:query-builder#inputFocus
        " data-view-component="true" class="FormControl-input QueryBuilder-Input FormControl-medium" />
          </div>
        </div>
          <span class="sr-only" id="query-builder-test-clear">Clear</span>
          <button role="button" id="query-builder-test-clear-button" aria-labelledby="query-builder-test-clear query-builder-test-label" data-target="query-builder.clearButton" data-action="
                click:query-builder#clear
                focus:query-builder#clearButtonFocus
                blur:query-builder#clearButtonBlur
              " variant="small" hidden="hidden" type="button" data-view-component="true" class="Button Button--iconOnly Button--invisible Button--medium mr-1 px-2 py-0 d-flex flex-items-center rounded-1 color-fg-muted">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x-circle-fill Button-visual">
    <path d="M2.343 13.657A8 8 0 1 1 13.658 2.343 8 8 0 0 1 2.343 13.657ZM6.03 4.97a.751.751 0 0 0-1.042.018.751.751 0 0 0-.018 1.042L6.94 8 4.97 9.97a.749.749 0 0 0 .326 1.275.749.749 0 0 0 .734-.215L8 9.06l1.97 1.97a.749.749 0 0 0 1.275-.326.749.749 0 0 0-.215-.734L9.06 8l1.97-1.97a.749.749 0 0 0-.326-1.275.749.749 0 0 0-.734.215L8 6.94Z"></path>
</svg>
</button>

      </div>
      <template id="search-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search">
    <path d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"></path>
</svg>
</template>

<template id="code-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code">
    <path d="m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z"></path>
</svg>
</template>

<template id="file-code-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-file-code">
    <path d="M4 1.75C4 .784 4.784 0 5.75 0h5.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v8.586A1.75 1.75 0 0 1 14.25 15h-9a.75.75 0 0 1 0-1.5h9a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 10 4.25V1.5H5.75a.25.25 0 0 0-.25.25v2.5a.75.75 0 0 1-1.5 0Zm1.72 4.97a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734l1.47-1.47-1.47-1.47a.75.75 0 0 1 0-1.06ZM3.28 7.78 1.81 9.25l1.47 1.47a.751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018l-2-2a.75.75 0 0 1 0-1.06l2-2a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Zm8.22-6.218V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z"></path>
</svg>
</template>

<template id="history-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-history">
    <path d="m.427 1.927 1.215 1.215a8.002 8.002 0 1 1-1.6 5.685.75.75 0 1 1 1.493-.154 6.5 6.5 0 1 0 1.18-4.458l1.358 1.358A.25.25 0 0 1 3.896 6H.25A.25.25 0 0 1 0 5.75V2.104a.25.25 0 0 1 .427-.177ZM7.75 4a.75.75 0 0 1 .75.75v2.992l2.028.812a.75.75 0 0 1-.557 1.392l-2.5-1A.751.751 0 0 1 7 8.25v-3.5A.75.75 0 0 1 7.75 4Z"></path>
</svg>
</template>

<template id="repo-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo">
    <path d="M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.495 2.495 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.486 2.486 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.249.249 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z"></path>
</svg>
</template>

<template id="bookmark-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-bookmark">
    <path d="M3 2.75C3 1.784 3.784 1 4.75 1h6.5c.966 0 1.75.784 1.75 1.75v11.5a.75.75 0 0 1-1.227.579L8 11.722l-3.773 3.107A.751.751 0 0 1 3 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.91l3.023-2.489a.75.75 0 0 1 .954 0l3.023 2.49V2.75a.25.25 0 0 0-.25-.25Z"></path>
</svg>
</template>

<template id="plus-circle-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-plus-circle">
    <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm7.25-3.25v2.5h2.5a.75.75 0 0 1 0 1.5h-2.5v2.5a.75.75 0 0 1-1.5 0v-2.5h-2.5a.75.75 0 0 1 0-1.5h2.5v-2.5a.75.75 0 0 1 1.5 0Z"></path>
</svg>
</template>

<template id="circle-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-dot-fill">
    <path d="M8 4a4 4 0 1 1 0 8 4 4 0 0 1 0-8Z"></path>
</svg>
</template>

<template id="trash-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-trash">
    <path d="M11 1.75V3h2.25a.75.75 0 0 1 0 1.5H2.75a.75.75 0 0 1 0-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75ZM4.496 6.675l.66 6.6a.25.25 0 0 0 .249.225h5.19a.25.25 0 0 0 .249-.225l.66-6.6a.75.75 0 0 1 1.492.149l-.66 6.6A1.748 1.748 0 0 1 10.595 15h-5.19a1.75 1.75 0 0 1-1.741-1.575l-.66-6.6a.75.75 0 1 1 1.492-.15ZM6.5 1.75V3h3V1.75a.25.25 0 0 0-.25-.25h-2.5a.25.25 0 0 0-.25.25Z"></path>
</svg>
</template>

<template id="team-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-people">
    <path d="M2 5.5a3.5 3.5 0 1 1 5.898 2.549 5.508 5.508 0 0 1 3.034 4.084.75.75 0 1 1-1.482.235 4 4 0 0 0-7.9 0 .75.75 0 0 1-1.482-.236A5.507 5.507 0 0 1 3.102 8.05 3.493 3.493 0 0 1 2 5.5ZM11 4a3.001 3.001 0 0 1 2.22 5.018 5.01 5.01 0 0 1 2.56 3.012.749.749 0 0 1-.885.954.752.752 0 0 1-.549-.514 3.507 3.507 0 0 0-2.522-2.372.75.75 0 0 1-.574-.73v-.352a.75.75 0 0 1 .416-.672A1.5 1.5 0 0 0 11 5.5.75.75 0 0 1 11 4Zm-5.5-.5a2 2 0 1 0-.001 3.999A2 2 0 0 0 5.5 3.5Z"></path>
</svg>
</template>

<template id="project-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project">
    <path d="M1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25V1.75C0 .784.784 0 1.75 0ZM1.5 1.75v12.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25ZM11.75 3a.75.75 0 0 1 .75.75v7.5a.75.75 0 0 1-1.5 0v-7.5a.75.75 0 0 1 .75-.75Zm-8.25.75a.75.75 0 0 1 1.5 0v5.5a.75.75 0 0 1-1.5 0ZM8 3a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5A.75.75 0 0 1 8 3Z"></path>
</svg>
</template>

<template id="pencil-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-pencil">
    <path d="M11.013 1.427a1.75 1.75 0 0 1 2.474 0l1.086 1.086a1.75 1.75 0 0 1 0 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 0 1-.927-.928l.929-3.25c.081-.286.235-.547.445-.758l8.61-8.61Zm.176 4.823L9.75 4.81l-6.286 6.287a.253.253 0 0 0-.064.108l-.558 1.953 1.953-.558a.253.253 0 0 0 .108-.064Zm1.238-3.763a.25.25 0 0 0-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 0 0 0-.354Z"></path>
</svg>
</template>

<template id="copilot-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copilot">
    <path d="M7.998 15.035c-4.562 0-7.873-2.914-7.998-3.749V9.338c.085-.628.677-1.686 1.588-2.065.013-.07.024-.143.036-.218.029-.183.06-.384.126-.612-.201-.508-.254-1.084-.254-1.656 0-.87.128-1.769.693-2.484.579-.733 1.494-1.124 2.724-1.261 1.206-.134 2.262.034 2.944.765.05.053.096.108.139.165.044-.057.094-.112.143-.165.682-.731 1.738-.899 2.944-.765 1.23.137 2.145.528 2.724 1.261.566.715.693 1.614.693 2.484 0 .572-.053 1.148-.254 1.656.066.228.098.429.126.612.012.076.024.148.037.218.924.385 1.522 1.471 1.591 2.095v1.872c0 .766-3.351 3.795-8.002 3.795Zm0-1.485c2.28 0 4.584-1.11 5.002-1.433V7.862l-.023-.116c-.49.21-1.075.291-1.727.291-1.146 0-2.059-.327-2.71-.991A3.222 3.222 0 0 1 8 6.303a3.24 3.24 0 0 1-.544.743c-.65.664-1.563.991-2.71.991-.652 0-1.236-.081-1.727-.291l-.023.116v4.255c.419.323 2.722 1.433 5.002 1.433ZM6.762 2.83c-.193-.206-.637-.413-1.682-.297-1.019.113-1.479.404-1.713.7-.247.312-.369.789-.369 1.554 0 .793.129 1.171.308 1.371.162.181.519.379 1.442.379.853 0 1.339-.235 1.638-.54.315-.322.527-.827.617-1.553.117-.935-.037-1.395-.241-1.614Zm4.155-.297c-1.044-.116-1.488.091-1.681.297-.204.219-.359.679-.242 1.614.091.726.303 1.231.618 1.553.299.305.784.54 1.638.54.922 0 1.28-.198 1.442-.379.179-.2.308-.578.308-1.371 0-.765-.123-1.242-.37-1.554-.233-.296-.693-.587-1.713-.7Z"></path><path d="M6.25 9.037a.75.75 0 0 1 .75.75v1.501a.75.75 0 0 1-1.5 0V9.787a.75.75 0 0 1 .75-.75Zm4.25.75v1.501a.75.75 0 0 1-1.5 0V9.787a.75.75 0 0 1 1.5 0Z"></path>
</svg>
</template>

<template id="copilot-error-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copilot-error">
    <path d="M16 11.24c0 .112-.072.274-.21.467L13 9.688V7.862l-.023-.116c-.49.21-1.075.291-1.727.291-.198 0-.388-.009-.571-.029L6.833 5.226a4.01 4.01 0 0 0 .17-.782c.117-.935-.037-1.395-.241-1.614-.193-.206-.637-.413-1.682-.297-.683.076-1.115.231-1.395.415l-1.257-.91c.579-.564 1.413-.877 2.485-.996 1.206-.134 2.262.034 2.944.765.05.053.096.108.139.165.044-.057.094-.112.143-.165.682-.731 1.738-.899 2.944-.765 1.23.137 2.145.528 2.724 1.261.566.715.693 1.614.693 2.484 0 .572-.053 1.148-.254 1.656.066.228.098.429.126.612.012.076.024.148.037.218.924.385 1.522 1.471 1.591 2.095Zm-5.083-8.707c-1.044-.116-1.488.091-1.681.297-.204.219-.359.679-.242 1.614.091.726.303 1.231.618 1.553.299.305.784.54 1.638.54.922 0 1.28-.198 1.442-.379.179-.2.308-.578.308-1.371 0-.765-.123-1.242-.37-1.554-.233-.296-.693-.587-1.713-.7Zm2.511 11.074c-1.393.776-3.272 1.428-5.43 1.428-4.562 0-7.873-2.914-7.998-3.749V9.338c.085-.628.677-1.686 1.588-2.065.013-.07.024-.143.036-.218.029-.183.06-.384.126-.612-.18-.455-.241-.963-.252-1.475L.31 4.107A.747.747 0 0 1 0 3.509V3.49a.748.748 0 0 1 .625-.73c.156-.026.306.047.435.139l14.667 10.578a.592.592 0 0 1 .227.264.752.752 0 0 1 .046.249v.022a.75.75 0 0 1-1.19.596Zm-1.367-.991L5.635 7.964a5.128 5.128 0 0 1-.889.073c-.652 0-1.236-.081-1.727-.291l-.023.116v4.255c.419.323 2.722 1.433 5.002 1.433 1.539 0 3.089-.505 4.063-.934Z"></path>
</svg>
</template>

<template id="workflow-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-workflow">
    <path d="M0 1.75C0 .784.784 0 1.75 0h3.5C6.216 0 7 .784 7 1.75v3.5A1.75 1.75 0 0 1 5.25 7H4v4a1 1 0 0 0 1 1h4v-1.25C9 9.784 9.784 9 10.75 9h3.5c.966 0 1.75.784 1.75 1.75v3.5A1.75 1.75 0 0 1 14.25 16h-3.5A1.75 1.75 0 0 1 9 14.25v-.75H5A2.5 2.5 0 0 1 2.5 11V7h-.75A1.75 1.75 0 0 1 0 5.25Zm1.75-.25a.25.25 0 0 0-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 0 0 .25-.25v-3.5a.25.25 0 0 0-.25-.25Zm9 9a.25.25 0 0 0-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 0 0 .25-.25v-3.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
</template>

<template id="book-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-book">
    <path d="M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z"></path>
</svg>
</template>

<template id="code-review-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code-review">
    <path d="M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 13H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25v-8.5C0 1.784.784 1 1.75 1ZM1.5 2.75v8.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-8.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Zm5.28 1.72a.75.75 0 0 1 0 1.06L5.31 7l1.47 1.47a.751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018l-2-2a.75.75 0 0 1 0-1.06l2-2a.75.75 0 0 1 1.06 0Zm2.44 0a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.69 7 9.22 5.53a.75.75 0 0 1 0-1.06Z"></path>
</svg>
</template>

<template id="codespaces-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-codespaces">
    <path d="M0 11.25c0-.966.784-1.75 1.75-1.75h12.5c.966 0 1.75.784 1.75 1.75v3A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25Zm2-9.5C2 .784 2.784 0 3.75 0h8.5C13.216 0 14 .784 14 1.75v5a1.75 1.75 0 0 1-1.75 1.75h-8.5A1.75 1.75 0 0 1 2 6.75Zm1.75-.25a.25.25 0 0 0-.25.25v5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-5a.25.25 0 0 0-.25-.25Zm-2 9.5a.25.25 0 0 0-.25.25v3c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-3a.25.25 0 0 0-.25-.25Z"></path><path d="M7 12.75a.75.75 0 0 1 .75-.75h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1-.75-.75Zm-4 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75Z"></path>
</svg>
</template>

<template id="comment-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-comment">
    <path d="M1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 13.25 12H9.06l-2.573 2.573A1.458 1.458 0 0 1 4 13.543V12H2.75A1.75 1.75 0 0 1 1 10.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h4.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
</template>

<template id="comment-discussion-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-comment-discussion">
    <path d="M1.75 1h8.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 10.25 10H7.061l-2.574 2.573A1.458 1.458 0 0 1 2 11.543V10h-.25A1.75 1.75 0 0 1 0 8.25v-5.5C0 1.784.784 1 1.75 1ZM1.5 2.75v5.5c0 .138.112.25.25.25h1a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h3.5a.25.25 0 0 0 .25-.25v-5.5a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25Zm13 2a.25.25 0 0 0-.25-.25h-.5a.75.75 0 0 1 0-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 14.25 12H14v1.543a1.458 1.458 0 0 1-2.487 1.03L9.22 12.28a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l2.22 2.22v-2.19a.75.75 0 0 1 .75-.75h1a.25.25 0 0 0 .25-.25Z"></path>
</svg>
</template>

<template id="organization-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-organization">
    <path d="M1.75 16A1.75 1.75 0 0 1 0 14.25V1.75C0 .784.784 0 1.75 0h8.5C11.216 0 12 .784 12 1.75v12.5c0 .085-.006.168-.018.25h2.268a.25.25 0 0 0 .25-.25V8.285a.25.25 0 0 0-.111-.208l-1.055-.703a.749.749 0 1 1 .832-1.248l1.055.703c.487.325.779.871.779 1.456v5.965A1.75 1.75 0 0 1 14.25 16h-3.5a.766.766 0 0 1-.197-.026c-.099.017-.2.026-.303.026h-3a.75.75 0 0 1-.75-.75V14h-1v1.25a.75.75 0 0 1-.75.75Zm-.25-1.75c0 .138.112.25.25.25H4v-1.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 .75.75v1.25h2.25a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25ZM3.75 6h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5ZM3 3.75A.75.75 0 0 1 3.75 3h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 3.75Zm4 3A.75.75 0 0 1 7.75 6h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 7 6.75ZM7.75 3h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5ZM3 9.75A.75.75 0 0 1 3.75 9h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 9.75ZM7.75 9h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5Z"></path>
</svg>
</template>

<template id="rocket-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-rocket">
    <path d="M14.064 0h.186C15.216 0 16 .784 16 1.75v.186a8.752 8.752 0 0 1-2.564 6.186l-.458.459c-.314.314-.641.616-.979.904v3.207c0 .608-.315 1.172-.833 1.49l-2.774 1.707a.749.749 0 0 1-1.11-.418l-.954-3.102a1.214 1.214 0 0 1-.145-.125L3.754 9.816a1.218 1.218 0 0 1-.124-.145L.528 8.717a.749.749 0 0 1-.418-1.11l1.71-2.774A1.748 1.748 0 0 1 3.31 4h3.204c.288-.338.59-.665.904-.979l.459-.458A8.749 8.749 0 0 1 14.064 0ZM8.938 3.623h-.002l-.458.458c-.76.76-1.437 1.598-2.02 2.5l-1.5 2.317 2.143 2.143 2.317-1.5c.902-.583 1.74-1.26 2.499-2.02l.459-.458a7.25 7.25 0 0 0 2.123-5.127V1.75a.25.25 0 0 0-.25-.25h-.186a7.249 7.249 0 0 0-5.125 2.123ZM3.56 14.56c-.732.732-2.334 1.045-3.005 1.148a.234.234 0 0 1-.201-.064.234.234 0 0 1-.064-.201c.103-.671.416-2.273 1.15-3.003a1.502 1.502 0 1 1 2.12 2.12Zm6.94-3.935c-.088.06-.177.118-.266.175l-2.35 1.521.548 1.783 1.949-1.2a.25.25 0 0 0 .119-.213ZM3.678 8.116 5.2 5.766c.058-.09.117-.178.176-.266H3.309a.25.25 0 0 0-.213.119l-1.2 1.95ZM12 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
</template>

<template id="shield-check-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-shield-check">
    <path d="m8.533.133 5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667l5.25-1.68a1.748 1.748 0 0 1 1.066 0Zm-.61 1.429.001.001-5.25 1.68a.251.251 0 0 0-.174.237V7c0 1.36.275 2.666 1.057 3.859.784 1.194 2.121 2.342 4.366 3.298a.196.196 0 0 0 .154 0c2.245-.957 3.582-2.103 4.366-3.297C13.225 9.666 13.5 8.358 13.5 7V3.48a.25.25 0 0 0-.174-.238l-5.25-1.68a.25.25 0 0 0-.153 0ZM11.28 6.28l-3.5 3.5a.75.75 0 0 1-1.06 0l-1.5-1.5a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l.97.97 2.97-2.97a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z"></path>
</svg>
</template>

<template id="heart-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-heart">
    <path d="m8 14.25.345.666a.75.75 0 0 1-.69 0l-.008-.004-.018-.01a7.152 7.152 0 0 1-.31-.17 22.055 22.055 0 0 1-3.434-2.414C2.045 10.731 0 8.35 0 5.5 0 2.836 2.086 1 4.25 1 5.797 1 7.153 1.802 8 3.02 8.847 1.802 10.203 1 11.75 1 13.914 1 16 2.836 16 5.5c0 2.85-2.045 5.231-3.885 6.818a22.066 22.066 0 0 1-3.744 2.584l-.018.01-.006.003h-.002ZM4.25 2.5c-1.336 0-2.75 1.164-2.75 3 0 2.15 1.58 4.144 3.365 5.682A20.58 20.58 0 0 0 8 13.393a20.58 20.58 0 0 0 3.135-2.211C12.92 9.644 14.5 7.65 14.5 5.5c0-1.836-1.414-3-2.75-3-1.373 0-2.609.986-3.029 2.456a.749.749 0 0 1-1.442 0C6.859 3.486 5.623 2.5 4.25 2.5Z"></path>
</svg>
</template>

<template id="server-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-server">
    <path d="M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v4c0 .372-.116.717-.314 1 .198.283.314.628.314 1v4a1.75 1.75 0 0 1-1.75 1.75H1.75A1.75 1.75 0 0 1 0 12.75v-4c0-.358.109-.707.314-1a1.739 1.739 0 0 1-.314-1v-4C0 1.784.784 1 1.75 1ZM1.5 2.75v4c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Zm.25 5.75a.25.25 0 0 0-.25.25v4c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25ZM7 4.75A.75.75 0 0 1 7.75 4h4.5a.75.75 0 0 1 0 1.5h-4.5A.75.75 0 0 1 7 4.75ZM7.75 10h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM3 4.75A.75.75 0 0 1 3.75 4h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 4.75ZM3.75 10h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5Z"></path>
</svg>
</template>

<template id="globe-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-globe">
    <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM5.78 8.75a9.64 9.64 0 0 0 1.363 4.177c.255.426.542.832.857 1.215.245-.296.551-.705.857-1.215A9.64 9.64 0 0 0 10.22 8.75Zm4.44-1.5a9.64 9.64 0 0 0-1.363-4.177c-.307-.51-.612-.919-.857-1.215a9.927 9.927 0 0 0-.857 1.215A9.64 9.64 0 0 0 5.78 7.25Zm-5.944 1.5H1.543a6.507 6.507 0 0 0 4.666 5.5c-.123-.181-.24-.365-.352-.552-.715-1.192-1.437-2.874-1.581-4.948Zm-2.733-1.5h2.733c.144-2.074.866-3.756 1.58-4.948.12-.197.237-.381.353-.552a6.507 6.507 0 0 0-4.666 5.5Zm10.181 1.5c-.144 2.074-.866 3.756-1.58 4.948-.12.197-.237.381-.353.552a6.507 6.507 0 0 0 4.666-5.5Zm2.733-1.5a6.507 6.507 0 0 0-4.666-5.5c.123.181.24.365.353.552.714 1.192 1.436 2.874 1.58 4.948Z"></path>
</svg>
</template>

<template id="issue-opened-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-issue-opened">
    <path d="M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z"></path><path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z"></path>
</svg>
</template>

<template id="device-mobile-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-device-mobile">
    <path d="M3.75 0h8.5C13.216 0 14 .784 14 1.75v12.5A1.75 1.75 0 0 1 12.25 16h-8.5A1.75 1.75 0 0 1 2 14.25V1.75C2 .784 2.784 0 3.75 0ZM3.5 1.75v12.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25ZM8 13a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path>
</svg>
</template>

<template id="package-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-package">
    <path d="m8.878.392 5.25 3.045c.54.314.872.89.872 1.514v6.098a1.75 1.75 0 0 1-.872 1.514l-5.25 3.045a1.75 1.75 0 0 1-1.756 0l-5.25-3.045A1.75 1.75 0 0 1 1 11.049V4.951c0-.624.332-1.201.872-1.514L7.122.392a1.75 1.75 0 0 1 1.756 0ZM7.875 1.69l-4.63 2.685L8 7.133l4.755-2.758-4.63-2.685a.248.248 0 0 0-.25 0ZM2.5 5.677v5.372c0 .09.047.171.125.216l4.625 2.683V8.432Zm6.25 8.271 4.625-2.683a.25.25 0 0 0 .125-.216V5.677L8.75 8.432Z"></path>
</svg>
</template>

<template id="credit-card-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-credit-card">
    <path d="M10.75 9a.75.75 0 0 0 0 1.5h1.5a.75.75 0 0 0 0-1.5h-1.5Z"></path><path d="M0 3.75C0 2.784.784 2 1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 14H1.75A1.75 1.75 0 0 1 0 12.25ZM14.5 6.5h-13v5.75c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25Zm0-2.75a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25V5h13Z"></path>
</svg>
</template>

<template id="play-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-play">
    <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z"></path>
</svg>
</template>

<template id="gift-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-gift">
    <path d="M2 2.75A2.75 2.75 0 0 1 4.75 0c.983 0 1.873.42 2.57 1.232.268.318.497.668.68 1.042.183-.375.411-.725.68-1.044C9.376.42 10.266 0 11.25 0a2.75 2.75 0 0 1 2.45 4h.55c.966 0 1.75.784 1.75 1.75v2c0 .698-.409 1.301-1 1.582v4.918A1.75 1.75 0 0 1 13.25 16H2.75A1.75 1.75 0 0 1 1 14.25V9.332C.409 9.05 0 8.448 0 7.75v-2C0 4.784.784 4 1.75 4h.55c-.192-.375-.3-.8-.3-1.25ZM7.25 9.5H2.5v4.75c0 .138.112.25.25.25h4.5Zm1.5 0v5h4.5a.25.25 0 0 0 .25-.25V9.5Zm0-4V8h5.5a.25.25 0 0 0 .25-.25v-2a.25.25 0 0 0-.25-.25Zm-7 0a.25.25 0 0 0-.25.25v2c0 .138.112.25.25.25h5.5V5.5h-5.5Zm3-4a1.25 1.25 0 0 0 0 2.5h2.309c-.233-.818-.542-1.401-.878-1.793-.43-.502-.915-.707-1.431-.707ZM8.941 4h2.309a1.25 1.25 0 0 0 0-2.5c-.516 0-1 .205-1.43.707-.337.392-.646.975-.879 1.793Z"></path>
</svg>
</template>

<template id="code-square-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code-square">
    <path d="M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25Zm7.47 3.97a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L10.69 8 9.22 6.53a.75.75 0 0 1 0-1.06ZM6.78 6.53 5.31 8l1.47 1.47a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215l-2-2a.75.75 0 0 1 0-1.06l2-2a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z"></path>
</svg>
</template>

<template id="device-desktop-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-device-desktop">
    <path d="M14.25 1c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 14.25 12h-3.727c.099 1.041.52 1.872 1.292 2.757A.752.752 0 0 1 11.25 16h-6.5a.75.75 0 0 1-.565-1.243c.772-.885 1.192-1.716 1.292-2.757H1.75A1.75 1.75 0 0 1 0 10.25v-7.5C0 1.784.784 1 1.75 1ZM1.75 2.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25ZM9.018 12H6.982a5.72 5.72 0 0 1-.765 2.5h3.566a5.72 5.72 0 0 1-.765-2.5Z"></path>
</svg>
</template>

        <div class="position-relative">
                <ul
                  role="listbox"
                  class="ActionListWrap QueryBuilder-ListWrap"
                  aria-label="Suggestions"
                  data-action="
                    combobox-commit:query-builder#comboboxCommit
                    mousedown:query-builder#resultsMousedown
                  "
                  data-target="query-builder.resultsList"
                  data-persist-list=false
                  id="query-builder-test-results"
                ></ul>
        </div>
      <div class="FormControl-inlineValidation" id="validation-b2ed9b67-d8c3-4c6e-8c0e-b7879f4e6865" hidden="hidden">
        <span class="FormControl-inlineValidation--visual">
          <svg aria-hidden="true" height="12" viewBox="0 0 12 12" version="1.1" width="12" data-view-component="true" class="octicon octicon-alert-fill">
    <path d="M4.855.708c.5-.896 1.79-.896 2.29 0l4.675 8.351a1.312 1.312 0 0 1-1.146 1.954H1.33A1.313 1.313 0 0 1 .183 9.058ZM7 7V3H5v4Zm-1 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"></path>
</svg>
        </span>
        <span></span>
</div>    </div>
    <div data-target="query-builder.screenReaderFeedback" aria-live="polite" aria-atomic="true" class="sr-only"></div>
</query-builder></form>
          <div class="d-flex flex-row color-fg-muted px-3 text-small color-bg-default search-feedback-prompt">
            <a target="_blank" href="https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax" data-view-component="true" class="Link color-fg-accent text-normal ml-2">Search syntax tips</a>            <div class="d-flex flex-1"></div>
          </div>
        </div>
</div>

    </div>
</modal-dialog></div>
  </div>
  <div data-action="click:qbsearch-input#retract" class="dark-backdrop position-fixed" hidden data-target="qbsearch-input.darkBackdrop"></div>
  <div class="color-fg-default">
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true" class="Overlay Overlay-whenNarrow Overlay--size-medium Overlay--motion-scaleFade Overlay--disableScroll">
    <div data-view-component="true" class="Overlay-header">
  <div class="Overlay-headerContentWrap">
    <div class="Overlay-titleWrap">
      <h1 class="Overlay-title " id="feedback-dialog-title">
        Provide feedback
      </h1>
        
    </div>
    <div class="Overlay-actionWrap">
      <button data-close-dialog-id="feedback-dialog" aria-label="Close" type="button" data-view-component="true" class="close-button Overlay-closeButton"><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg></button>
    </div>
  </div>
  
</div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        <div data-view-component="true" class="Overlay-body">        <!-- '"` --><!-- </textarea></xmp> --></option></form><form id="code-search-feedback-form" data-turbo="false" action="/search/feedback" accept-charset="UTF-8" method="post"><input type="hidden" data-csrf="true" name="authenticity_token" value="BNEsKGQOGA1hKOUs1q50A6DpWKDwsQ1JsgmHm2Sx1+hk2JNb/HtjjD9N4SYjoJ1bKVE1wiGwo03k54kbyCUHDQ==" />
          <p>We read every piece of feedback, and take your input very seriously.</p>
          <textarea name="feedback" class="form-control width-full mb-2" style="height: 120px" id="feedback"></textarea>
          <input name="include_email" id="include_email" aria-label="Include my email address so I can be contacted" class="form-control mr-2" type="checkbox">
          <label for="include_email" style="font-weight: normal">Include my email address so I can be contacted</label>
</form></div>
      </scrollable-region>
      <div data-view-component="true" class="Overlay-footer Overlay-footer--alignEnd">          <button data-close-dialog-id="feedback-dialog" type="button" data-view-component="true" class="btn">    Cancel
</button>
          <button form="code-search-feedback-form" data-action="click:qbsearch-input#submitFeedback" type="submit" data-view-component="true" class="btn-primary btn">    Submit feedback
</button>
</div>
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true" class="Overlay Overlay-whenNarrow Overlay--size-medium Overlay--motion-scaleFade Overlay--disableScroll">
    <div data-view-component="true" class="Overlay-header Overlay-header--divided">
  <div class="Overlay-headerContentWrap">
    <div class="Overlay-titleWrap">
      <h1 class="Overlay-title " id="custom-scopes-dialog-title">
        Saved searches
      </h1>
        <h2 id="custom-scopes-dialog-description" class="Overlay-description">Use saved searches to filter your results more quickly</h2>
    </div>
    <div class="Overlay-actionWrap">
      <button data-close-dialog-id="custom-scopes-dialog" aria-label="Close" type="button" data-view-component="true" class="close-button Overlay-closeButton"><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg></button>
    </div>
  </div>
  
</div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        <div data-view-component="true" class="Overlay-body">        <div data-target="custom-scopes.customScopesModalDialogFlash"></div>

        <div hidden class="create-custom-scope-form" data-target="custom-scopes.createCustomScopeForm">
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form id="custom-scopes-dialog-form" data-turbo="false" action="/search/custom_scopes" accept-charset="UTF-8" method="post"><input type="hidden" data-csrf="true" name="authenticity_token" value="npZU0vcbN2uRfwWAMz08b60Vgm0V1k+iZc0PMsIkN1njIG/lkkJ8PqoaCxblqpbgQ45qwq5HPY8ZlxMZqMU/5A==" />
          <div data-target="custom-scopes.customScopesModalDialogFlash"></div>

          <input type="hidden" id="custom_scope_id" name="custom_scope_id" data-target="custom-scopes.customScopesIdField">

          <div class="form-group">
            <label for="custom_scope_name">Name</label>
            <auto-check src="/search/custom_scopes/check_name" required>
              <input
                type="text"
                name="custom_scope_name"
                id="custom_scope_name"
                data-target="custom-scopes.customScopesNameField"
                class="form-control"
                autocomplete="off"
                placeholder="github-ruby"
                required
                maxlength="50">
              <input type="hidden" data-csrf="true" value="ix1uifq0uUFtZsEGKYhr7oEHA/rKOfF0F+/o93QYV2v79XDNoEyjxLG4cTXhANUKPJxlyMEz2BUWXY11wDkGug==" />
            </auto-check>
          </div>

          <div class="form-group">
            <label for="custom_scope_query">Query</label>
            <input
              type="text"
              name="custom_scope_query"
              id="custom_scope_query"
              data-target="custom-scopes.customScopesQueryField"
              class="form-control"
              autocomplete="off"
              placeholder="(repo:mona/a OR repo:mona/b) AND lang:python"
              required
              maxlength="500">
          </div>

          <p class="text-small color-fg-muted">
            To see all available qualifiers, see our <a class="Link--inTextBlock" href="https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax">documentation</a>.
          </p>
</form>        </div>

        <div data-target="custom-scopes.manageCustomScopesForm">
          <div data-target="custom-scopes.list"></div>
        </div>

</div>
      </scrollable-region>
      <div data-view-component="true" class="Overlay-footer Overlay-footer--alignEnd Overlay-footer--divided">          <button data-action="click:custom-scopes#customScopesCancel" type="button" data-view-component="true" class="btn">    Cancel
</button>
          <button form="custom-scopes-dialog-form" data-action="click:custom-scopes#customScopesSubmit" data-target="custom-scopes.customScopesSubmitButton" type="submit" data-view-component="true" class="btn-primary btn">    Create saved search
</button>
</div>
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>

            <div class="position-relative HeaderMenu-link-wrap d-lg-inline-block">
              <a
                href="/login?return_to=https%3A%2F%2Fgithub.com%2Fprojectcalico%2Fcalico%2Fblob%2Frelease-v3.26%2Fmanifests%2Ftigera-operator.yaml"
                class="HeaderMenu-link HeaderMenu-link--sign-in HeaderMenu-button flex-shrink-0 no-underline d-none d-lg-inline-flex border border-lg-0 rounded rounded-lg-0 px-2 py-1"
                style="margin-left: 12px;"
                data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/projectcalico/calico/blob/release-v3.26/manifests/tigera-operator.yaml&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="e6e0ed2e0d86a2aa980921f3969370f9054192155c62a8b85e1e18e479cbc117"
                data-analytics-event="{&quot;category&quot;:&quot;Marketing nav&quot;,&quot;action&quot;:&quot;click to go to homepage&quot;,&quot;label&quot;:&quot;ref_page:Marketing;ref_cta:Sign in;ref_loc:Header&quot;}"
              >
                Sign in
              </a>
            </div>

              <a href="/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo&amp;source_repo=projectcalico%2Fcalico"
                class="HeaderMenu-link HeaderMenu-link--sign-up HeaderMenu-button flex-shrink-0 d-flex d-lg-inline-flex no-underline border color-border-default rounded px-2 py-1"
                data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/projectcalico/calico/blob/release-v3.26/manifests/tigera-operator.yaml&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="e6e0ed2e0d86a2aa980921f3969370f9054192155c62a8b85e1e18e479cbc117"
                data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show;ref_cta:Sign up;ref_loc:header logged out&quot;}"
              >
                Sign up
              </a>
          <button type="button" class="sr-only js-header-menu-focus-trap d-block d-lg-none">Reseting focus</button>
        </div>
      </div>
    </div>
  </div>
</header>

      <div hidden="hidden" data-view-component="true" class="js-stale-session-flash stale-session-flash flash flash-warn flash-full">
  
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
        <span class="js-stale-session-flash-signed-in" hidden>You signed in with another tab or window. <a class="Link--inTextBlock" href="">Reload</a> to refresh your session.</span>
        <span class="js-stale-session-flash-signed-out" hidden>You signed out in another tab or window. <a class="Link--inTextBlock" href="">Reload</a> to refresh your session.</span>
        <span class="js-stale-session-flash-switched" hidden>You switched accounts on another tab or window. <a class="Link--inTextBlock" href="">Reload</a> to refresh your session.</span>

    <button id="icon-button-4bd49433-460e-4df1-9f1c-459a9b9cd0e2" aria-labelledby="tooltip-87bbea5f-da2b-45ca-9581-0a84f6fbff28" type="button" data-view-component="true" class="Button Button--iconOnly Button--invisible Button--medium flash-close js-flash-close">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x Button-visual">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
</button><tool-tip id="tooltip-87bbea5f-da2b-45ca-9581-0a84f6fbff28" for="icon-button-4bd49433-460e-4df1-9f1c-459a9b9cd0e2" popover="manual" data-direction="s" data-type="label" data-view-component="true" class="sr-only position-absolute">Dismiss alert</tool-tip>


  
</div>
    </div>

  <div id="start-of-content" class="show-on-focus"></div>








    <div id="js-flash-container" class="flash-container" data-turbo-replace>


      <include-fragment  src="/settings/two_factor_authentication/holiday_warning_banner"></include-fragment>


  <template class="js-flash-template">
    
<div class="flash flash-full   {{ className }}">
  <div >
    <button autofocus class="flash-close js-flash-close" type="button" aria-label="Dismiss this message">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
    </button>
    <div aria-atomic="true" role="alert" class="js-flash-alert">
      
      <div>{{ message }}</div>

    </div>
  </div>
</div>
  </template>
</div>


    






  <div
    class="application-main "
    data-commit-hovercards-enabled
    data-discussion-hovercards-enabled
    data-issue-and-pr-hovercards-enabled
    data-project-hovercards-enabled
  >
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <main id="js-repo-pjax-container" >
      
      
    

    






  
  <div id="repository-container-header"  class="pt-3 hide-full-screen" style="background-color: var(--page-header-bgColor, var(--color-page-header-bg));" data-turbo-replace>

      <div class="d-flex flex-nowrap flex-justify-end mb-3  px-3 px-lg-5" style="gap: 1rem;">

        <div class="flex-auto min-width-0 width-fit">
            
  <div class=" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo color-fg-muted mr-2">
    <path d="M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.495 2.495 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.486 2.486 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.249.249 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z"></path>
</svg>
    
    <span class="author flex-self-stretch" itemprop="author">
      <a class="url fn" rel="author" data-hovercard-type="organization" data-hovercard-url="/orgs/projectcalico/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/projectcalico">
        projectcalico
</a>    </span>
    <span class="mx-1 flex-self-stretch color-fg-muted">/</span>
    <strong itemprop="name" class="mr-2 flex-self-stretch">
      <a data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" href="/projectcalico/calico">calico</a>
    </strong>

    <span></span><span class="Label Label--secondary v-align-middle mr-1">Public</span>
  </div>


        </div>

        <div id="repository-details-container" class="flex-shrink-0" data-turbo-replace style="max-width: 70%;">
            <ul class="pagehead-actions flex-shrink-0 d-none d-md-inline" style="padding: 2px 0;">
    
      

  <li>
            <a href="/login?return_to=%2Fprojectcalico%2Fcalico" rel="nofollow" id="repository-details-watch-button" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/projectcalico/calico/blob/release-v3.26/manifests/tigera-operator.yaml&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="26292e906be6b5ce6f56a744108890cafffe14fcb28d2849f2a99180820b68db" aria-label="You must be signed in to change notification settings" data-view-component="true" class="btn-sm btn">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-bell mr-2">
    <path d="M8 16a2 2 0 0 0 1.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 0 0 8 16ZM3 5a5 5 0 0 1 10 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.519 1.519 0 0 1 13.482 13H2.518a1.516 1.516 0 0 1-1.263-2.36l1.703-2.554A.255.255 0 0 0 3 7.947Zm5-3.5A3.5 3.5 0 0 0 4.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.017.017 0 0 0-.003.01l.001.006c0 .002.002.004.004.006l.006.004.007.001h10.964l.007-.001.006-.004.004-.006.001-.007a.017.017 0 0 0-.003-.01l-1.703-2.554a1.745 1.745 0 0 1-.294-.97V5A3.5 3.5 0 0 0 8 1.5Z"></path>
</svg>Notifications
</a>    <tool-tip id="tooltip-b02d558f-1fcb-4eee-a736-07e8435a0bc4" for="repository-details-watch-button" popover="manual" data-direction="s" data-type="description" data-view-component="true" class="sr-only position-absolute">You must be signed in to change notification settings</tool-tip>

  </li>

  <li>
          <a icon="repo-forked" id="fork-button" href="/login?return_to=%2Fprojectcalico%2Fcalico" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;repo details fork button&quot;,&quot;repository_id&quot;:63882194,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/projectcalico/calico/blob/release-v3.26/manifests/tigera-operator.yaml&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="94d08751a82e2d272447687136c89bedad49922aa6b03d425a831adff70c58cf" data-view-component="true" class="btn-sm btn">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo-forked mr-2">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>Fork
    <span id="repo-network-counter" data-pjax-replace="true" data-turbo-replace="true" title="1,350" data-view-component="true" class="Counter">1.4k</span>
</a>
  </li>

  <li>
        <div data-view-component="true" class="BtnGroup d-flex">
        <a href="/login?return_to=%2Fprojectcalico%2Fcalico" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:63882194,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/projectcalico/calico/blob/release-v3.26/manifests/tigera-operator.yaml&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="b99444fa0c716091b2cd0293ae19f6d161280b5a9d2f7e49574ac6fb3f93b006" aria-label="You must be signed in to star a repository" data-view-component="true" class="tooltipped tooltipped-sw btn-sm btn">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-star v-align-text-bottom d-inline-block mr-2">
    <path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z"></path>
</svg><span data-view-component="true" class="d-inline">
          Star
</span>          <span id="repo-stars-counter-star" aria-label="6067 users starred this repository" data-singular-suffix="user starred this repository" data-plural-suffix="users starred this repository" data-turbo-replace="true" title="6,067" data-view-component="true" class="Counter js-social-count">6.1k</span>
</a></div>
  </li>

</ul>

        </div>
      </div>

        <div id="responsive-meta-container" data-turbo-replace>
</div>


          <nav data-pjax="#js-repo-pjax-container" aria-label="Repository" data-view-component="true" class="js-repo-nav js-sidenav-container-pjax js-responsive-underlinenav overflow-hidden UnderlineNav px-3 px-md-4 px-lg-5">

  <ul data-view-component="true" class="UnderlineNav-body list-style-none">
      <li data-view-component="true" class="d-inline-flex">
  <a id="code-tab" href="/projectcalico/calico/tree/release-v3.26" data-tab-item="i0code-tab" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments repo_attestations /projectcalico/calico/tree/release-v3.26" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g c" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Code&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" aria-current="page" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item selected">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code UnderlineNav-octicon d-none d-sm-inline">
    <path d="m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z"></path>
</svg>
        <span data-content="Code">Code</span>
          <span id="code-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="issues-tab" href="/projectcalico/calico/issues" data-tab-item="i1issues-tab" data-selected-links="repo_issues repo_labels repo_milestones /projectcalico/calico/issues" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g i" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Issues&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-issue-opened UnderlineNav-octicon d-none d-sm-inline">
    <path d="M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z"></path><path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z"></path>
</svg>
        <span data-content="Issues">Issues</span>
          <span id="issues-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="360" data-view-component="true" class="Counter">360</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="pull-requests-tab" href="/projectcalico/calico/pulls" data-tab-item="i2pull-requests-tab" data-selected-links="repo_pulls checks /projectcalico/calico/pulls" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g p" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Pull requests&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-git-pull-request UnderlineNav-octicon d-none d-sm-inline">
    <path d="M1.5 3.25a2.25 2.25 0 1 1 3 2.122v5.256a2.251 2.251 0 1 1-1.5 0V5.372A2.25 2.25 0 0 1 1.5 3.25Zm5.677-.177L9.573.677A.25.25 0 0 1 10 .854V2.5h1A2.5 2.5 0 0 1 13.5 5v5.628a2.251 2.251 0 1 1-1.5 0V5a1 1 0 0 0-1-1h-1v1.646a.25.25 0 0 1-.427.177L7.177 3.427a.25.25 0 0 1 0-.354ZM3.75 2.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm0 9.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm8.25.75a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Z"></path>
</svg>
        <span data-content="Pull requests">Pull requests</span>
          <span id="pull-requests-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="50" data-view-component="true" class="Counter">50</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="discussions-tab" href="/projectcalico/calico/discussions" data-tab-item="i3discussions-tab" data-selected-links="repo_discussions /projectcalico/calico/discussions" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g g" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Discussions&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-comment-discussion UnderlineNav-octicon d-none d-sm-inline">
    <path d="M1.75 1h8.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 10.25 10H7.061l-2.574 2.573A1.458 1.458 0 0 1 2 11.543V10h-.25A1.75 1.75 0 0 1 0 8.25v-5.5C0 1.784.784 1 1.75 1ZM1.5 2.75v5.5c0 .138.112.25.25.25h1a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h3.5a.25.25 0 0 0 .25-.25v-5.5a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25Zm13 2a.25.25 0 0 0-.25-.25h-.5a.75.75 0 0 1 0-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 14.25 12H14v1.543a1.458 1.458 0 0 1-2.487 1.03L9.22 12.28a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l2.22 2.22v-2.19a.75.75 0 0 1 .75-.75h1a.25.25 0 0 0 .25-.25Z"></path>
</svg>
        <span data-content="Discussions">Discussions</span>
          <span id="discussions-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="actions-tab" href="/projectcalico/calico/actions" data-tab-item="i4actions-tab" data-selected-links="repo_actions /projectcalico/calico/actions" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g a" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Actions&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-play UnderlineNav-octicon d-none d-sm-inline">
    <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z"></path>
</svg>
        <span data-content="Actions">Actions</span>
          <span id="actions-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="projects-tab" href="/projectcalico/calico/projects" data-tab-item="i5projects-tab" data-selected-links="repo_projects new_repo_project repo_project /projectcalico/calico/projects" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g b" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Projects&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-table UnderlineNav-octicon d-none d-sm-inline">
    <path d="M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25ZM6.5 6.5v8h7.75a.25.25 0 0 0 .25-.25V6.5Zm8-1.5V1.75a.25.25 0 0 0-.25-.25H6.5V5Zm-13 1.5v7.75c0 .138.112.25.25.25H5v-8ZM5 5V1.5H1.75a.25.25 0 0 0-.25.25V5Z"></path>
</svg>
        <span data-content="Projects">Projects</span>
          <span id="projects-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="0" hidden="hidden" data-view-component="true" class="Counter">0</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="security-tab" href="/projectcalico/calico/security" data-tab-item="i6security-tab" data-selected-links="security overview alerts policy token_scanning code_scanning /projectcalico/calico/security" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g s" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Security&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-shield UnderlineNav-octicon d-none d-sm-inline">
    <path d="M7.467.133a1.748 1.748 0 0 1 1.066 0l5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667Zm.61 1.429a.25.25 0 0 0-.153 0l-5.25 1.68a.25.25 0 0 0-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.196.196 0 0 0 .154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.251.251 0 0 0-.174-.237l-5.25-1.68ZM8.75 4.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 1.5 0ZM9 10.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
        <span data-content="Security">Security</span>
          <include-fragment src="/projectcalico/calico/security/overall-count" accept="text/fragment+html"></include-fragment>

    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="insights-tab" href="/projectcalico/calico/pulse" data-tab-item="i7insights-tab" data-selected-links="repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /projectcalico/calico/pulse" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Insights&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-graph UnderlineNav-octicon d-none d-sm-inline">
    <path d="M1.5 1.75V13.5h13.75a.75.75 0 0 1 0 1.5H.75a.75.75 0 0 1-.75-.75V1.75a.75.75 0 0 1 1.5 0Zm14.28 2.53-5.25 5.25a.75.75 0 0 1-1.06 0L7 7.06 4.28 9.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.25-3.25a.75.75 0 0 1 1.06 0L10 7.94l4.72-4.72a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z"></path>
</svg>
        <span data-content="Insights">Insights</span>
          <span id="insights-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
</ul>
    <div style="visibility:hidden;" data-view-component="true" class="UnderlineNav-actions js-responsive-underlinenav-overflow position-absolute pr-3 pr-md-4 pr-lg-5 right-0">      <action-menu data-select-variant="none" data-view-component="true">
  <focus-group direction="vertical" mnemonics retain>
    <button id="action-menu-73b162ab-9f5d-48c1-9a57-33de24030dd0-button" popovertarget="action-menu-73b162ab-9f5d-48c1-9a57-33de24030dd0-overlay" aria-controls="action-menu-73b162ab-9f5d-48c1-9a57-33de24030dd0-list" aria-haspopup="true" aria-labelledby="tooltip-665ebe82-2f10-4d1c-94a5-439a8e279709" type="button" data-view-component="true" class="Button Button--iconOnly Button--secondary Button--medium UnderlineNav-item">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal Button-visual">
    <path d="M8 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Zm13 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z"></path>
</svg>
</button><tool-tip id="tooltip-665ebe82-2f10-4d1c-94a5-439a8e279709" for="action-menu-73b162ab-9f5d-48c1-9a57-33de24030dd0-button" popover="manual" data-direction="s" data-type="label" data-view-component="true" class="sr-only position-absolute">Additional navigation options</tool-tip>


<anchored-position id="action-menu-73b162ab-9f5d-48c1-9a57-33de24030dd0-overlay" anchor="action-menu-73b162ab-9f5d-48c1-9a57-33de24030dd0-button" align="start" side="outside-bottom" anchor-offset="normal" popover="auto" data-view-component="true">
  <div data-view-component="true" class="Overlay Overlay--size-auto">
    
      <div data-view-component="true" class="Overlay-body Overlay-body--paddingNone">          <action-list>
  <div data-view-component="true">
    <ul aria-labelledby="action-menu-73b162ab-9f5d-48c1-9a57-33de24030dd0-button" id="action-menu-73b162ab-9f5d-48c1-9a57-33de24030dd0-list" role="menu" data-view-component="true" class="ActionListWrap--inset ActionListWrap">
        <li hidden="hidden" data-menu-item="i0code-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-4ff23807-a1eb-4ec9-a0fc-fcb7dee997d3" href="/projectcalico/calico/tree/release-v3.26" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code">
    <path d="m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Code
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i1issues-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-d0315bbf-e365-4053-b941-073cb8a8c0a0" href="/projectcalico/calico/issues" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-issue-opened">
    <path d="M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z"></path><path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Issues
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i2pull-requests-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-5ffb8ba2-dfef-435e-b18e-0030c5e74d78" href="/projectcalico/calico/pulls" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-git-pull-request">
    <path d="M1.5 3.25a2.25 2.25 0 1 1 3 2.122v5.256a2.251 2.251 0 1 1-1.5 0V5.372A2.25 2.25 0 0 1 1.5 3.25Zm5.677-.177L9.573.677A.25.25 0 0 1 10 .854V2.5h1A2.5 2.5 0 0 1 13.5 5v5.628a2.251 2.251 0 1 1-1.5 0V5a1 1 0 0 0-1-1h-1v1.646a.25.25 0 0 1-.427.177L7.177 3.427a.25.25 0 0 1 0-.354ZM3.75 2.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm0 9.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm8.25.75a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Pull requests
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i3discussions-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-95f17916-2a16-49a6-8dfb-b2dc79396856" href="/projectcalico/calico/discussions" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-comment-discussion">
    <path d="M1.75 1h8.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 10.25 10H7.061l-2.574 2.573A1.458 1.458 0 0 1 2 11.543V10h-.25A1.75 1.75 0 0 1 0 8.25v-5.5C0 1.784.784 1 1.75 1ZM1.5 2.75v5.5c0 .138.112.25.25.25h1a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h3.5a.25.25 0 0 0 .25-.25v-5.5a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25Zm13 2a.25.25 0 0 0-.25-.25h-.5a.75.75 0 0 1 0-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 14.25 12H14v1.543a1.458 1.458 0 0 1-2.487 1.03L9.22 12.28a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l2.22 2.22v-2.19a.75.75 0 0 1 .75-.75h1a.25.25 0 0 0 .25-.25Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Discussions
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i4actions-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-97d9a191-f61b-4caf-9517-1e268faae5a9" href="/projectcalico/calico/actions" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-play">
    <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Actions
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i5projects-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-3b7f9af0-60db-4af7-b8c0-7ca0b1bc7637" href="/projectcalico/calico/projects" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-table">
    <path d="M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25ZM6.5 6.5v8h7.75a.25.25 0 0 0 .25-.25V6.5Zm8-1.5V1.75a.25.25 0 0 0-.25-.25H6.5V5Zm-13 1.5v7.75c0 .138.112.25.25.25H5v-8ZM5 5V1.5H1.75a.25.25 0 0 0-.25.25V5Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Projects
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i6security-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-efe9b570-29d3-45e0-a308-314e06ec4320" href="/projectcalico/calico/security" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-shield">
    <path d="M7.467.133a1.748 1.748 0 0 1 1.066 0l5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667Zm.61 1.429a.25.25 0 0 0-.153 0l-5.25 1.68a.25.25 0 0 0-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.196.196 0 0 0 .154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.251.251 0 0 0-.174-.237l-5.25-1.68ZM8.75 4.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 1.5 0ZM9 10.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Security
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i7insights-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-9fedea3f-5884-4986-b659-39282e6a5815" href="/projectcalico/calico/pulse" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-graph">
    <path d="M1.5 1.75V13.5h13.75a.75.75 0 0 1 0 1.5H.75a.75.75 0 0 1-.75-.75V1.75a.75.75 0 0 1 1.5 0Zm14.28 2.53-5.25 5.25a.75.75 0 0 1-1.06 0L7 7.06 4.28 9.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.25-3.25a.75.75 0 0 1 1.06 0L10 7.94l4.72-4.72a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Insights
</span>      
</a>
  
</li>
</ul>    
</div></action-list>


</div>
      
</div></anchored-position>  </focus-group>
</action-menu></div>
</nav>

  </div>

  



<turbo-frame id="repo-content-turbo-frame" target="_top" data-turbo-action="advance" class="">
    <div id="repo-content-pjax-container" class="repository-content " >
    



    
      
    








<react-app
  app-name="react-code-view"
  initial-path="/projectcalico/calico/blob/release-v3.26/manifests/tigera-operator.yaml"
    style="display: block; min-height: calc(100vh - 64px);"
  data-attempted-ssr="false"
  data-ssr="false"
  data-lazy="false"
  data-alternate="false"
>
  
  <script type="application/json" data-target="react-app.embeddedData">{"payload":{"allShortcutsEnabled":false,"fileTree":{"manifests":{"items":[{"name":"alp","path":"manifests/alp","contentType":"directory"},{"name":"flannel-migration","path":"manifests/flannel-migration","contentType":"directory"},{"name":"ocp","path":"manifests/ocp","contentType":"directory"},{"name":"README.md","path":"manifests/README.md","contentType":"file"},{"name":"apiserver.yaml","path":"manifests/apiserver.yaml","contentType":"file"},{"name":"calico-bpf.yaml","path":"manifests/calico-bpf.yaml","contentType":"file"},{"name":"calico-etcd.yaml","path":"manifests/calico-etcd.yaml","contentType":"file"},{"name":"calico-policy-only.yaml","path":"manifests/calico-policy-only.yaml","contentType":"file"},{"name":"calico-typha.yaml","path":"manifests/calico-typha.yaml","contentType":"file"},{"name":"calico-vxlan.yaml","path":"manifests/calico-vxlan.yaml","contentType":"file"},{"name":"calico-windows-bgp.yaml","path":"manifests/calico-windows-bgp.yaml","contentType":"file"},{"name":"calico-windows-vxlan.yaml","path":"manifests/calico-windows-vxlan.yaml","contentType":"file"},{"name":"calico.yaml","path":"manifests/calico.yaml","contentType":"file"},{"name":"calicoctl-etcd.yaml","path":"manifests/calicoctl-etcd.yaml","contentType":"file"},{"name":"calicoctl.yaml","path":"manifests/calicoctl.yaml","contentType":"file"},{"name":"canal-etcd.yaml","path":"manifests/canal-etcd.yaml","contentType":"file"},{"name":"canal.yaml","path":"manifests/canal.yaml","contentType":"file"},{"name":"crds.yaml","path":"manifests/crds.yaml","contentType":"file"},{"name":"csi-driver.yaml","path":"manifests/csi-driver.yaml","contentType":"file"},{"name":"custom-resources.yaml","path":"manifests/custom-resources.yaml","contentType":"file"},{"name":"generate.sh","path":"manifests/generate.sh","contentType":"file"},{"name":"grafana-dashboards.yaml","path":"manifests/grafana-dashboards.yaml","contentType":"file"},{"name":"ocp-tigera-operator-no-resource-loading.yaml","path":"manifests/ocp-tigera-operator-no-resource-loading.yaml","contentType":"file"},{"name":"operator-crds.yaml","path":"manifests/operator-crds.yaml","contentType":"file"},{"name":"tigera-operator.yaml","path":"manifests/tigera-operator.yaml","contentType":"file"},{"name":"windows-kube-proxy.yaml","path":"manifests/windows-kube-proxy.yaml","contentType":"file"}],"totalCount":26},"":{"items":[{"name":".github","path":".github","contentType":"directory"},{"name":".semaphore","path":".semaphore","contentType":"directory"},{"name":"api","path":"api","contentType":"directory"},{"name":"apiserver","path":"apiserver","contentType":"directory"},{"name":"app-policy","path":"app-policy","contentType":"directory"},{"name":"calico","path":"calico","contentType":"directory"},{"name":"calicoctl","path":"calicoctl","contentType":"directory"},{"name":"charts","path":"charts","contentType":"directory"},{"name":"cni-plugin","path":"cni-plugin","contentType":"directory"},{"name":"confd","path":"confd","contentType":"directory"},{"name":"crypto","path":"crypto","contentType":"directory"},{"name":"e2e","path":"e2e","contentType":"directory"},{"name":"felix","path":"felix","contentType":"directory"},{"name":"hack","path":"hack","contentType":"directory"},{"name":"kube-controllers","path":"kube-controllers","contentType":"directory"},{"name":"libcalico-go","path":"libcalico-go","contentType":"directory"},{"name":"manifests","path":"manifests","contentType":"directory"},{"name":"networking-calico","path":"networking-calico","contentType":"directory"},{"name":"node","path":"node","contentType":"directory"},{"name":"pod2daemon","path":"pod2daemon","contentType":"directory"},{"name":"process","path":"process","contentType":"directory"},{"name":"release-notes","path":"release-notes","contentType":"directory"},{"name":"typha","path":"typha","contentType":"directory"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":".pre-commit-config.yaml","path":".pre-commit-config.yaml","contentType":"file"},{"name":"AUTHORS.md","path":"AUTHORS.md","contentType":"file"},{"name":"CONTRIBUTING_CODE.md","path":"CONTRIBUTING_CODE.md","contentType":"file"},{"name":"CONTRIBUTING_DOCS.md","path":"CONTRIBUTING_DOCS.md","contentType":"file"},{"name":"DEVELOPER_GUIDE.md","path":"DEVELOPER_GUIDE.md","contentType":"file"},{"name":"LICENSE.md","path":"LICENSE.md","contentType":"file"},{"name":"Makefile","path":"Makefile","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"devstack","path":"devstack","contentType":"symlink_directory"},{"name":"go.mod","path":"go.mod","contentType":"file"},{"name":"go.sum","path":"go.sum","contentType":"file"},{"name":"lib.Makefile","path":"lib.Makefile","contentType":"file"},{"name":"metadata.mk","path":"metadata.mk","contentType":"file"}],"totalCount":37}},"fileTreeProcessingTime":8.878344,"foldersToFetch":[],"repo":{"id":63882194,"defaultBranch":"master","name":"calico","ownerLogin":"projectcalico","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2016-07-21T15:45:54.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/12304728?v=4","public":true,"private":false,"isOrgOwned":true},"codeLineWrapEnabled":false,"symbolsExpanded":false,"treeExpanded":true,"refInfo":{"name":"release-v3.26","listCacheKey":"v0:1732832414.0","canEdit":false,"refType":"branch","currentOid":"1e5537b7768f1bc58ee1717c7b7cd633121e325a"},"path":"manifests/tigera-operator.yaml","currentUser":null,"blob":{"rawLines":["apiVersion: v1","kind: Namespace","metadata:","  name: tigera-operator","  labels:","    name: tigera-operator","---","# Source: crds/calico/crd.projectcalico.org_bgpconfigurations.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: bgpconfigurations.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: BGPConfiguration","    listKind: BGPConfigurationList","    plural: bgpconfigurations","    singular: bgpconfiguration","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        description: BGPConfiguration contains the configuration for any BGP routing.","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: BGPConfigurationSpec contains the values of the BGP configuration.","            properties:","              asNumber:","                description: 'ASNumber is the default AS number used by a node. [Default:","                  64512]'","                format: int32","                type: integer","              bindMode:","                description: BindMode indicates whether to listen for BGP connections","                  on all addresses (None) or only on the node's canonical IP address","                  Node.Spec.BGP.IPvXAddress (NodeIP). Default behaviour is to listen","                  for BGP connections on all addresses.","                type: string","              communities:","                description: Communities is a list of BGP community values and their","                  arbitrary names for tagging routes.","                items:","                  description: Community contains standard or large community value","                    and its name.","                  properties:","                    name:","                      description: Name given to community value.","                      type: string","                    value:","                      description: Value must be of format `aa:nn` or `aa:nn:mm`.","                        For standard community use `aa:nn` format, where `aa` and","                        `nn` are 16 bit number. For large community use `aa:nn:mm`","                        format, where `aa`, `nn` and `mm` are 32 bit number. Where,","                        `aa` is an AS Number, `nn` and `mm` are per-AS identifier.","                      pattern: ^(\\d+):(\\d+)$|^(\\d+):(\\d+):(\\d+)$","                      type: string","                  type: object","                type: array","              ignoredInterfaces:","                description: IgnoredInterfaces indicates the network interfaces that","                  needs to be excluded when reading device routes.","                items:","                  type: string","                type: array","              listenPort:","                description: ListenPort is the port where BGP protocol should listen.","                  Defaults to 179","                maximum: 65535","                minimum: 1","                type: integer","              logSeverityScreen:","                description: 'LogSeverityScreen is the log severity above which logs","                  are sent to the stdout. [Default: INFO]'","                type: string","              nodeMeshMaxRestartTime:","                description: Time to allow for software restart for node-to-mesh peerings.  When","                  specified, this is configured as the graceful restart timeout.  When","                  not specified, the BIRD default of 120s is used. This field can","                  only be set on the default BGPConfiguration instance and requires","                  that NodeMesh is enabled","                type: string","              nodeMeshPassword:","                description: Optional BGP password for full node-to-mesh peerings.","                  This field can only be set on the default BGPConfiguration instance","                  and requires that NodeMesh is enabled","                properties:","                  secretKeyRef:","                    description: Selects a key of a secret in the node pod's namespace.","                    properties:","                      key:","                        description: The key of the secret to select from.  Must be","                          a valid secret key.","                        type: string","                      name:","                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","                          TODO: Add other useful fields. apiVersion, kind, uid?'","                        type: string","                      optional:","                        description: Specify whether the Secret or its key must be","                          defined","                        type: boolean","                    required:","                    - key","                    type: object","                type: object","              nodeToNodeMeshEnabled:","                description: 'NodeToNodeMeshEnabled sets whether full node to node","                  BGP mesh is enabled. [Default: true]'","                type: boolean","              prefixAdvertisements:","                description: PrefixAdvertisements contains per-prefix advertisement","                  configuration.","                items:","                  description: PrefixAdvertisement configures advertisement properties","                    for the specified CIDR.","                  properties:","                    cidr:","                      description: CIDR for which properties should be advertised.","                      type: string","                    communities:","                      description: Communities can be list of either community names","                        already defined in `Specs.Communities` or community value","                        of format `aa:nn` or `aa:nn:mm`. For standard community use","                        `aa:nn` format, where `aa` and `nn` are 16 bit number. For","                        large community use `aa:nn:mm` format, where `aa`, `nn` and","                        `mm` are 32 bit number. Where,`aa` is an AS Number, `nn` and","                        `mm` are per-AS identifier.","                      items:","                        type: string","                      type: array","                  type: object","                type: array","              serviceClusterIPs:","                description: ServiceClusterIPs are the CIDR blocks from which service","                  cluster IPs are allocated. If specified, Calico will advertise these","                  blocks, as well as any cluster IPs within them.","                items:","                  description: ServiceClusterIPBlock represents a single allowed ClusterIP","                    CIDR block.","                  properties:","                    cidr:","                      type: string","                  type: object","                type: array","              serviceExternalIPs:","                description: ServiceExternalIPs are the CIDR blocks for Kubernetes","                  Service External IPs. Kubernetes Service ExternalIPs will only be","                  advertised if they are within one of these blocks.","                items:","                  description: ServiceExternalIPBlock represents a single allowed","                    External IP CIDR block.","                  properties:","                    cidr:","                      type: string","                  type: object","                type: array","              serviceLoadBalancerIPs:","                description: ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes","                  Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress","                  IPs will only be advertised if they are within one of these blocks.","                items:","                  description: ServiceLoadBalancerIPBlock represents a single allowed","                    LoadBalancer IP CIDR block.","                  properties:","                    cidr:","                      type: string","                  type: object","                type: array","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_bgpfilters.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  annotations:","    controller-gen.kubebuilder.io/version: (devel)","  creationTimestamp: null","  name: bgpfilters.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: BGPFilter","    listKind: BGPFilterList","    plural: bgpfilters","    singular: bgpfilter","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: BGPFilterSpec contains the IPv4 and IPv6 filter rules of","              the BGP Filter.","            properties:","              exportV4:","                description: The ordered set of IPv4 BGPFilter rules acting on exporting","                  routes to a peer.","                items:","                  description: BGPFilterRuleV4 defines a BGP filter rule consisting","                    a single IPv4 CIDR block and a filter action for this CIDR.","                  properties:","                    action:","                      type: string","                    cidr:","                      type: string","                    matchOperator:","                      type: string","                  required:","                  - action","                  - cidr","                  - matchOperator","                  type: object","                type: array","              exportV6:","                description: The ordered set of IPv6 BGPFilter rules acting on exporting","                  routes to a peer.","                items:","                  description: BGPFilterRuleV6 defines a BGP filter rule consisting","                    a single IPv6 CIDR block and a filter action for this CIDR.","                  properties:","                    action:","                      type: string","                    cidr:","                      type: string","                    matchOperator:","                      type: string","                  required:","                  - action","                  - cidr","                  - matchOperator","                  type: object","                type: array","              importV4:","                description: The ordered set of IPv4 BGPFilter rules acting on importing","                  routes from a peer.","                items:","                  description: BGPFilterRuleV4 defines a BGP filter rule consisting","                    a single IPv4 CIDR block and a filter action for this CIDR.","                  properties:","                    action:","                      type: string","                    cidr:","                      type: string","                    matchOperator:","                      type: string","                  required:","                  - action","                  - cidr","                  - matchOperator","                  type: object","                type: array","              importV6:","                description: The ordered set of IPv6 BGPFilter rules acting on importing","                  routes from a peer.","                items:","                  description: BGPFilterRuleV6 defines a BGP filter rule consisting","                    a single IPv6 CIDR block and a filter action for this CIDR.","                  properties:","                    action:","                      type: string","                    cidr:","                      type: string","                    matchOperator:","                      type: string","                  required:","                  - action","                  - cidr","                  - matchOperator","                  type: object","                type: array","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_bgppeers.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: bgppeers.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: BGPPeer","    listKind: BGPPeerList","    plural: bgppeers","    singular: bgppeer","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: BGPPeerSpec contains the specification for a BGPPeer resource.","            properties:","              asNumber:","                description: The AS Number of the peer.","                format: int32","                type: integer","              filters:","                description: The ordered set of BGPFilters applied on this BGP peer.","                items:","                  type: string","                type: array","              keepOriginalNextHop:","                description: Option to keep the original nexthop field when routes","                  are sent to a BGP Peer. Setting \"true\" configures the selected BGP","                  Peers node to use the \"next hop keep;\" instead of \"next hop self;\"(default)","                  in the specific branch of the Node on \"bird.cfg\".","                type: boolean","              maxRestartTime:","                description: Time to allow for software restart.  When specified,","                  this is configured as the graceful restart timeout.  When not specified,","                  the BIRD default of 120s is used.","                type: string","              node:","                description: The node name identifying the Calico node instance that","                  is targeted by this peer. If this is not set, and no nodeSelector","                  is specified, then this BGP peer selects all nodes in the cluster.","                type: string","              nodeSelector:","                description: Selector for the nodes that should have this peering.  When","                  this is set, the Node field must be empty.","                type: string","              numAllowedLocalASNumbers:","                description: Maximum number of local AS numbers that are allowed in","                  the AS path for received routes. This removes BGP loop prevention","                  and should only be used if absolutely necesssary.","                format: int32","                type: integer","              password:","                description: Optional BGP password for the peerings generated by this","                  BGPPeer resource.","                properties:","                  secretKeyRef:","                    description: Selects a key of a secret in the node pod's namespace.","                    properties:","                      key:","                        description: The key of the secret to select from.  Must be","                          a valid secret key.","                        type: string","                      name:","                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","                          TODO: Add other useful fields. apiVersion, kind, uid?'","                        type: string","                      optional:","                        description: Specify whether the Secret or its key must be","                          defined","                        type: boolean","                    required:","                    - key","                    type: object","                type: object","              peerIP:","                description: The IP address of the peer followed by an optional port","                  number to peer with. If port number is given, format should be `[\u003cIPv6\u003e]:port`","                  or `\u003cIPv4\u003e:\u003cport\u003e` for IPv4. If optional port number is not set,","                  and this peer IP and ASNumber belongs to a calico/node with ListenPort","                  set in BGPConfiguration, then we use that port to peer.","                type: string","              peerSelector:","                description: Selector for the remote nodes to peer with.  When this","                  is set, the PeerIP and ASNumber fields must be empty.  For each","                  peering between the local node and selected remote nodes, we configure","                  an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified,","                  and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The","                  remote AS number comes from the remote node's NodeBGPSpec.ASNumber,","                  or the global default if that is not set.","                type: string","              reachableBy:","                description: Add an exact, i.e. /32, static route toward peer IP in","                  order to prevent route flapping. ReachableBy contains the address","                  of the gateway which peer can be reached by.","                type: string","              sourceAddress:","                description: Specifies whether and how to configure a source address","                  for the peerings generated by this BGPPeer resource.  Default value","                  \"UseNodeIP\" means to configure the node IP as the source address.  \"None\"","                  means not to configure a source address.","                type: string","              ttlSecurity:","                description: TTLSecurity enables the generalized TTL security mechanism","                  (GTSM) which protects against spoofed packets by ignoring received","                  packets with a smaller than expected TTL value. The provided value","                  is the number of hops (edges) between the peers.","                type: integer","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_blockaffinities.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: blockaffinities.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: BlockAffinity","    listKind: BlockAffinityList","    plural: blockaffinities","    singular: blockaffinity","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: BlockAffinitySpec contains the specification for a BlockAffinity","              resource.","            properties:","              cidr:","                type: string","              deleted:","                description: Deleted indicates that this block affinity is being deleted.","                  This field is a string for compatibility with older releases that","                  mistakenly treat this field as a string.","                type: string","              node:","                type: string","              state:","                type: string","            required:","            - cidr","            - deleted","            - node","            - state","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_caliconodestatuses.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  annotations:","    controller-gen.kubebuilder.io/version: (devel)","  creationTimestamp: null","  name: caliconodestatuses.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: CalicoNodeStatus","    listKind: CalicoNodeStatusList","    plural: caliconodestatuses","    singular: caliconodestatus","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: CalicoNodeStatusSpec contains the specification for a CalicoNodeStatus","              resource.","            properties:","              classes:","                description: Classes declares the types of information to monitor","                  for this calico/node, and allows for selective status reporting","                  about certain subsets of information.","                items:","                  type: string","                type: array","              node:","                description: The node name identifies the Calico node instance for","                  node status.","                type: string","              updatePeriodSeconds:","                description: UpdatePeriodSeconds is the period at which CalicoNodeStatus","                  should be updated. Set to 0 to disable CalicoNodeStatus refresh.","                  Maximum update period is one day.","                format: int32","                type: integer","            type: object","          status:","            description: CalicoNodeStatusStatus defines the observed state of CalicoNodeStatus.","              No validation needed for status since it is updated by Calico.","            properties:","              agent:","                description: Agent holds agent status on the node.","                properties:","                  birdV4:","                    description: BIRDV4 represents the latest observed status of bird4.","                    properties:","                      lastBootTime:","                        description: LastBootTime holds the value of lastBootTime","                          from bird.ctl output.","                        type: string","                      lastReconfigurationTime:","                        description: LastReconfigurationTime holds the value of lastReconfigTime","                          from bird.ctl output.","                        type: string","                      routerID:","                        description: Router ID used by bird.","                        type: string","                      state:","                        description: The state of the BGP Daemon.","                        type: string","                      version:","                        description: Version of the BGP daemon","                        type: string","                    type: object","                  birdV6:","                    description: BIRDV6 represents the latest observed status of bird6.","                    properties:","                      lastBootTime:","                        description: LastBootTime holds the value of lastBootTime","                          from bird.ctl output.","                        type: string","                      lastReconfigurationTime:","                        description: LastReconfigurationTime holds the value of lastReconfigTime","                          from bird.ctl output.","                        type: string","                      routerID:","                        description: Router ID used by bird.","                        type: string","                      state:","                        description: The state of the BGP Daemon.","                        type: string","                      version:","                        description: Version of the BGP daemon","                        type: string","                    type: object","                type: object","              bgp:","                description: BGP holds node BGP status.","                properties:","                  numberEstablishedV4:","                    description: The total number of IPv4 established bgp sessions.","                    type: integer","                  numberEstablishedV6:","                    description: The total number of IPv6 established bgp sessions.","                    type: integer","                  numberNotEstablishedV4:","                    description: The total number of IPv4 non-established bgp sessions.","                    type: integer","                  numberNotEstablishedV6:","                    description: The total number of IPv6 non-established bgp sessions.","                    type: integer","                  peersV4:","                    description: PeersV4 represents IPv4 BGP peers status on the node.","                    items:","                      description: CalicoNodePeer contains the status of BGP peers","                        on the node.","                      properties:","                        peerIP:","                          description: IP address of the peer whose condition we are","                            reporting.","                          type: string","                        since:","                          description: Since the state or reason last changed.","                          type: string","                        state:","                          description: State is the BGP session state.","                          type: string","                        type:","                          description: Type indicates whether this peer is configured","                            via the node-to-node mesh, or via en explicit global or","                            per-node BGPPeer object.","                          type: string","                      type: object","                    type: array","                  peersV6:","                    description: PeersV6 represents IPv6 BGP peers status on the node.","                    items:","                      description: CalicoNodePeer contains the status of BGP peers","                        on the node.","                      properties:","                        peerIP:","                          description: IP address of the peer whose condition we are","                            reporting.","                          type: string","                        since:","                          description: Since the state or reason last changed.","                          type: string","                        state:","                          description: State is the BGP session state.","                          type: string","                        type:","                          description: Type indicates whether this peer is configured","                            via the node-to-node mesh, or via en explicit global or","                            per-node BGPPeer object.","                          type: string","                      type: object","                    type: array","                required:","                - numberEstablishedV4","                - numberEstablishedV6","                - numberNotEstablishedV4","                - numberNotEstablishedV6","                type: object","              lastUpdated:","                description: LastUpdated is a timestamp representing the server time","                  when CalicoNodeStatus object last updated. It is represented in","                  RFC3339 form and is in UTC.","                format: date-time","                nullable: true","                type: string","              routes:","                description: Routes reports routes known to the Calico BGP daemon","                  on the node.","                properties:","                  routesV4:","                    description: RoutesV4 represents IPv4 routes on the node.","                    items:","                      description: CalicoNodeRoute contains the status of BGP routes","                        on the node.","                      properties:","                        destination:","                          description: Destination of the route.","                          type: string","                        gateway:","                          description: Gateway for the destination.","                          type: string","                        interface:","                          description: Interface for the destination","                          type: string","                        learnedFrom:","                          description: LearnedFrom contains information regarding","                            where this route originated.","                          properties:","                            peerIP:","                              description: If sourceType is NodeMesh or BGPPeer, IP","                                address of the router that sent us this route.","                              type: string","                            sourceType:","                              description: Type of the source where a route is learned","                                from.","                              type: string","                          type: object","                        type:","                          description: Type indicates if the route is being used for","                            forwarding or not.","                          type: string","                      type: object","                    type: array","                  routesV6:","                    description: RoutesV6 represents IPv6 routes on the node.","                    items:","                      description: CalicoNodeRoute contains the status of BGP routes","                        on the node.","                      properties:","                        destination:","                          description: Destination of the route.","                          type: string","                        gateway:","                          description: Gateway for the destination.","                          type: string","                        interface:","                          description: Interface for the destination","                          type: string","                        learnedFrom:","                          description: LearnedFrom contains information regarding","                            where this route originated.","                          properties:","                            peerIP:","                              description: If sourceType is NodeMesh or BGPPeer, IP","                                address of the router that sent us this route.","                              type: string","                            sourceType:","                              description: Type of the source where a route is learned","                                from.","                              type: string","                          type: object","                        type:","                          description: Type indicates if the route is being used for","                            forwarding or not.","                          type: string","                      type: object","                    type: array","                type: object","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_clusterinformations.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: clusterinformations.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: ClusterInformation","    listKind: ClusterInformationList","    plural: clusterinformations","    singular: clusterinformation","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        description: ClusterInformation contains the cluster specific information.","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: ClusterInformationSpec contains the values of describing","              the cluster.","            properties:","              calicoVersion:","                description: CalicoVersion is the version of Calico that the cluster","                  is running","                type: string","              clusterGUID:","                description: ClusterGUID is the GUID of the cluster","                type: string","              clusterType:","                description: ClusterType describes the type of the cluster","                type: string","              datastoreReady:","                description: DatastoreReady is used during significant datastore migrations","                  to signal to components such as Felix that it should wait before","                  accessing the datastore.","                type: boolean","              variant:","                description: Variant declares which variant of Calico should be active.","                type: string","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_felixconfigurations.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: felixconfigurations.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: FelixConfiguration","    listKind: FelixConfigurationList","    plural: felixconfigurations","    singular: felixconfiguration","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        description: Felix Configuration contains the configuration for Felix.","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: FelixConfigurationSpec contains the values of the Felix configuration.","            properties:","              allowIPIPPacketsFromWorkloads:","                description: 'AllowIPIPPacketsFromWorkloads controls whether Felix","                  will add a rule to drop IPIP encapsulated traffic from workloads","                  [Default: false]'","                type: boolean","              allowVXLANPacketsFromWorkloads:","                description: 'AllowVXLANPacketsFromWorkloads controls whether Felix","                  will add a rule to drop VXLAN encapsulated traffic from workloads","                  [Default: false]'","                type: boolean","              awsSrcDstCheck:","                description: 'Set source-destination-check on AWS EC2 instances. Accepted","                  value must be one of \"DoNothing\", \"Enable\" or \"Disable\". [Default:","                  DoNothing]'","                enum:","                - DoNothing","                - Enable","                - Disable","                type: string","              bpfConnectTimeLoadBalancingEnabled:","                description: 'BPFConnectTimeLoadBalancingEnabled when in BPF mode,","                  controls whether Felix installs the connection-time load balancer.  The","                  connect-time load balancer is required for the host to be able to","                  reach Kubernetes services and it improves the performance of pod-to-service","                  connections.  The only reason to disable it is for debugging purposes.  [Default:","                  true]'","                type: boolean","              bpfDSROptoutCIDRs:","                description: BPFDSROptoutCIDRs is a list of CIDRs which are excluded","                  from DSR. That is, clients in those CIDRs will accesses nodeports","                  as if BPFExternalServiceMode was set to Tunnel.","                items:","                  type: string","                type: array","              bpfDataIfacePattern:","                description: BPFDataIfacePattern is a regular expression that controls","                  which interfaces Felix should attach BPF programs to in order to","                  catch traffic to/from the network.  This needs to match the interfaces","                  that Calico workload traffic flows over as well as any interfaces","                  that handle incoming traffic to nodeports and services from outside","                  the cluster.  It should not match the workload interfaces (usually","                  named cali...).","                type: string","              bpfDisableUnprivileged:","                description: 'BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled","                  sysctl to disable unprivileged use of BPF.  This ensures that unprivileged","                  users cannot access Calico''s BPF maps and cannot insert their own","                  BPF programs to interfere with Calico''s. [Default: true]'","                type: boolean","              bpfEnabled:","                description: 'BPFEnabled, if enabled Felix will use the BPF dataplane.","                  [Default: false]'","                type: boolean","              bpfEnforceRPF:","                description: 'BPFEnforceRPF enforce strict RPF on all host interfaces","                  with BPF programs regardless of what is the per-interfaces or global","                  setting. Possible values are Disabled, Strict or Loose. [Default:","                  Loose]'","                type: string","              bpfExtToServiceConnmark:","                description: 'BPFExtToServiceConnmark in BPF mode, control a 32bit","                  mark that is set on connections from an external client to a local","                  service. This mark allows us to control how packets of that connection","                  are routed within the host and how is routing interpreted by RPF","                  check. [Default: 0]'","                type: integer","              bpfExternalServiceMode:","                description: 'BPFExternalServiceMode in BPF mode, controls how connections","                  from outside the cluster to services (node ports and cluster IPs)","                  are forwarded to remote workloads.  If set to \"Tunnel\" then both","                  request and response traffic is tunneled to the remote node.  If","                  set to \"DSR\", the request traffic is tunneled but the response traffic","                  is sent directly from the remote node.  In \"DSR\" mode, the remote","                  node appears to use the IP of the ingress node; this requires a","                  permissive L2 network.  [Default: Tunnel]'","                type: string","              bpfHostConntrackBypass:","                description: 'BPFHostConntrackBypass Controls whether to bypass Linux","                  conntrack in BPF mode for workloads and services. [Default: true","                  - bypass Linux conntrack]'","                type: boolean","              bpfKubeProxyEndpointSlicesEnabled:","                description: BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls","                  whether Felix's embedded kube-proxy accepts EndpointSlices or not.","                type: boolean","              bpfKubeProxyIptablesCleanupEnabled:","                description: 'BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF","                  mode, Felix will proactively clean up the upstream Kubernetes kube-proxy''s","                  iptables chains.  Should only be enabled if kube-proxy is not running.  [Default:","                  true]'","                type: boolean","              bpfKubeProxyMinSyncPeriod:","                description: 'BPFKubeProxyMinSyncPeriod, in BPF mode, controls the","                  minimum time between updates to the dataplane for Felix''s embedded","                  kube-proxy.  Lower values give reduced set-up latency.  Higher values","                  reduce Felix CPU usage by batching up more work.  [Default: 1s]'","                type: string","              bpfL3IfacePattern:","                description: BPFL3IfacePattern is a regular expression that allows","                  to list tunnel devices like wireguard or vxlan (i.e., L3 devices)","                  in addition to BPFDataIfacePattern. That is, tunnel interfaces not","                  created by Calico, that Calico workload traffic flows over as well","                  as any interfaces that handle incoming traffic to nodeports and","                  services from outside the cluster.","                type: string","              bpfLogLevel:","                description: 'BPFLogLevel controls the log level of the BPF programs","                  when in BPF dataplane mode.  One of \"Off\", \"Info\", or \"Debug\".  The","                  logs are emitted to the BPF trace pipe, accessible with the command","                  `tc exec bpf debug`. [Default: Off].'","                type: string","              bpfMapSizeConntrack:","                description: 'BPFMapSizeConntrack sets the size for the conntrack","                  map.  This map must be large enough to hold an entry for each active","                  connection.  Warning: changing the size of the conntrack map can","                  cause disruption.'","                type: integer","              bpfMapSizeIPSets:","                description: BPFMapSizeIPSets sets the size for ipsets map.  The IP","                  sets map must be large enough to hold an entry for each endpoint","                  matched by every selector in the source/destination matches in network","                  policy.  Selectors such as \"all()\" can result in large numbers of","                  entries (one entry per endpoint in that case).","                type: integer","              bpfMapSizeIfState:","                description: BPFMapSizeIfState sets the size for ifstate map.  The","                  ifstate map must be large enough to hold an entry for each device","                  (host + workloads) on a host.","                type: integer","              bpfMapSizeNATAffinity:","                type: integer","              bpfMapSizeNATBackend:","                description: BPFMapSizeNATBackend sets the size for nat back end map.","                  This is the total number of endpoints. This is mostly more than","                  the size of the number of services.","                type: integer","              bpfMapSizeNATFrontend:","                description: BPFMapSizeNATFrontend sets the size for nat front end","                  map. FrontendMap should be large enough to hold an entry for each","                  nodeport, external IP and each port in each service.","                type: integer","              bpfMapSizeRoute:","                description: BPFMapSizeRoute sets the size for the routes map.  The","                  routes map should be large enough to hold one entry per workload","                  and a handful of entries per host (enough to cover its own IPs and","                  tunnel IPs).","                type: integer","              bpfPSNATPorts:","                anyOf:","                - type: integer","                - type: string","                description: 'BPFPSNATPorts sets the range from which we randomly","                  pick a port if there is a source port collision. This should be","                  within the ephemeral range as defined by RFC 6056 (1024–65535) and","                  preferably outside the  ephemeral ranges used by common operating","                  systems. Linux uses 32768–60999, while others mostly use the IANA","                  defined range 49152–65535. It is not necessarily a problem if this","                  range overlaps with the operating systems. Both ends of the range","                  are inclusive. [Default: 20000:29999]'","                pattern: ^.*","                x-kubernetes-int-or-string: true","              bpfPolicyDebugEnabled:","                description: BPFPolicyDebugEnabled when true, Felix records detailed","                  information about the BPF policy programs, which can be examined","                  with the calico-bpf command-line tool.","                type: boolean","              chainInsertMode:","                description: 'ChainInsertMode controls whether Felix hooks the kernel''s","                  top-level iptables chains by inserting a rule at the top of the","                  chain or by appending a rule at the bottom. insert is the safe default","                  since it prevents Calico''s rules from being bypassed. If you switch","                  to append mode, be sure that the other rules in the chains signal","                  acceptance by falling through to the Calico rules, otherwise the","                  Calico policy will be bypassed. [Default: insert]'","                type: string","              dataplaneDriver:","                description: DataplaneDriver filename of the external dataplane driver","                  to use.  Only used if UseInternalDataplaneDriver is set to false.","                type: string","              dataplaneWatchdogTimeout:","                description: \"DataplaneWatchdogTimeout is the readiness/liveness timeout","                  used for Felix's (internal) dataplane driver. Increase this value","                  if you experience spurious non-ready or non-live events when Felix","                  is under heavy load. Decrease the value to get felix to report non-live","                  or non-ready more quickly. [Default: 90s] \\n Deprecated: replaced","                  by the generic HealthTimeoutOverrides.\"","                type: string","              debugDisableLogDropping:","                type: boolean","              debugMemoryProfilePath:","                type: string","              debugSimulateCalcGraphHangAfter:","                type: string","              debugSimulateDataplaneHangAfter:","                type: string","              defaultEndpointToHostAction:","                description: 'DefaultEndpointToHostAction controls what happens to","                  traffic that goes from a workload endpoint to the host itself (after","                  the traffic hits the endpoint egress policy). By default Calico","                  blocks traffic from workload endpoints to the host itself with an","                  iptables \"DROP\" action. If you want to allow some or all traffic","                  from endpoint to host, set this parameter to RETURN or ACCEPT. Use","                  RETURN if you have your own rules in the iptables \"INPUT\" chain;","                  Calico will insert its rules at the top of that chain, then \"RETURN\"","                  packets to the \"INPUT\" chain once it has completed processing workload","                  endpoint egress policy. Use ACCEPT to unconditionally accept packets","                  from workloads after processing workload endpoint egress policy.","                  [Default: Drop]'","                type: string","              deviceRouteProtocol:","                description: This defines the route protocol added to programmed device","                  routes, by default this will be RTPROT_BOOT when left blank.","                type: integer","              deviceRouteSourceAddress:","                description: This is the IPv4 source address to use on programmed","                  device routes. By default the source address is left blank, leaving","                  the kernel to choose the source address used.","                type: string","              deviceRouteSourceAddressIPv6:","                description: This is the IPv6 source address to use on programmed","                  device routes. By default the source address is left blank, leaving","                  the kernel to choose the source address used.","                type: string","              disableConntrackInvalidCheck:","                type: boolean","              endpointReportingDelay:","                type: string","              endpointReportingEnabled:","                type: boolean","              externalNodesList:","                description: ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes","                  which may source tunnel traffic and have the tunneled traffic be","                  accepted at calico nodes.","                items:","                  type: string","                type: array","              failsafeInboundHostPorts:","                description: 'FailsafeInboundHostPorts is a list of UDP/TCP ports","                  and CIDRs that Felix will allow incoming traffic to host endpoints","                  on irrespective of the security policy. This is useful to avoid","                  accidentally cutting off a host with incorrect configuration. For","                  back-compatibility, if the protocol is not specified, it defaults","                  to \"tcp\". If a CIDR is not specified, it will allow traffic from","                  all addresses. To disable all inbound host ports, use the value","                  none. The default value allows ssh access and DHCP. [Default: tcp:22,","                  udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]'","                items:","                  description: ProtoPort is combination of protocol, port, and CIDR.","                    Protocol and port must be specified.","                  properties:","                    net:","                      type: string","                    port:","                      type: integer","                    protocol:","                      type: string","                  required:","                  - port","                  - protocol","                  type: object","                type: array","              failsafeOutboundHostPorts:","                description: 'FailsafeOutboundHostPorts is a list of UDP/TCP ports","                  and CIDRs that Felix will allow outgoing traffic from host endpoints","                  to irrespective of the security policy. This is useful to avoid","                  accidentally cutting off a host with incorrect configuration. For","                  back-compatibility, if the protocol is not specified, it defaults","                  to \"tcp\". If a CIDR is not specified, it will allow traffic from","                  all addresses. To disable all outbound host ports, use the value","                  none. The default value opens etcd''s standard ports to ensure that","                  Felix does not get cut off from etcd as well as allowing DHCP and","                  DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666,","                  tcp:6667, udp:53, udp:67]'","                items:","                  description: ProtoPort is combination of protocol, port, and CIDR.","                    Protocol and port must be specified.","                  properties:","                    net:","                      type: string","                    port:","                      type: integer","                    protocol:","                      type: string","                  required:","                  - port","                  - protocol","                  type: object","                type: array","              featureDetectOverride:","                description: FeatureDetectOverride is used to override feature detection","                  based on auto-detected platform capabilities.  Values are specified","                  in a comma separated list with no spaces, example; \"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\".  \"true\"","                  or \"false\" will force the feature, empty or omitted values are auto-detected.","                type: string","              featureGates:","                description: FeatureGates is used to enable or disable tech-preview","                  Calico features. Values are specified in a comma separated list","                  with no spaces, example; \"BPFConnectTimeLoadBalancingWorkaround=enabled,XyZ=false\".","                  This is used to enable features that are not fully production ready.","                type: string","              floatingIPs:","                description: FloatingIPs configures whether or not Felix will program","                  non-OpenStack floating IP addresses.  (OpenStack-derived floating","                  IPs are always programmed, regardless of this setting.)","                enum:","                - Enabled","                - Disabled","                type: string","              genericXDPEnabled:","                description: 'GenericXDPEnabled enables Generic XDP so network cards","                  that don''t support XDP offload or driver modes can use XDP. This","                  is not recommended since it doesn''t provide better performance","                  than iptables. [Default: false]'","                type: boolean","              healthEnabled:","                type: boolean","              healthHost:","                type: string","              healthPort:","                type: integer","              healthTimeoutOverrides:","                description: HealthTimeoutOverrides allows the internal watchdog timeouts","                  of individual subcomponents to be overridden.  This is useful for","                  working around \"false positive\" liveness timeouts that can occur","                  in particularly stressful workloads or if CPU is constrained.  For","                  a list of active subcomponents, see Felix's logs.","                items:","                  properties:","                    name:","                      type: string","                    timeout:","                      type: string","                  required:","                  - name","                  - timeout","                  type: object","                type: array","              interfaceExclude:","                description: 'InterfaceExclude is a comma-separated list of interfaces","                  that Felix should exclude when monitoring for host endpoints. The","                  default value ensures that Felix ignores Kubernetes'' IPVS dummy","                  interface, which is used internally by kube-proxy. If you want to","                  exclude multiple interface names using a single value, the list","                  supports regular expressions. For regular expressions you must wrap","                  the value with ''/''. For example having values ''/^kube/,veth1''","                  will exclude all interfaces that begin with ''kube'' and also the","                  interface ''veth1''. [Default: kube-ipvs0]'","                type: string","              interfacePrefix:","                description: 'InterfacePrefix is the interface name prefix that identifies","                  workload endpoints and so distinguishes them from host endpoint","                  interfaces. Note: in environments other than bare metal, the orchestrators","                  configure this appropriately. For example our Kubernetes and Docker","                  integrations set the ''cali'' value, and our OpenStack integration","                  sets the ''tap'' value. [Default: cali]'","                type: string","              interfaceRefreshInterval:","                description: InterfaceRefreshInterval is the period at which Felix","                  rescans local interfaces to verify their state. The rescan can be","                  disabled by setting the interval to 0.","                type: string","              ipipEnabled:","                description: 'IPIPEnabled overrides whether Felix should configure","                  an IPIP interface on the host. Optional as Felix determines this","                  based on the existing IP pools. [Default: nil (unset)]'","                type: boolean","              ipipMTU:","                description: 'IPIPMTU is the MTU to set on the tunnel device. See","                  Configuring MTU [Default: 1440]'","                type: integer","              ipsetsRefreshInterval:","                description: 'IpsetsRefreshInterval is the period at which Felix re-checks","                  all iptables state to ensure that no other process has accidentally","                  broken Calico''s rules. Set to 0 to disable iptables refresh. [Default:","                  90s]'","                type: string","              iptablesBackend:","                description: IptablesBackend specifies which backend of iptables will","                  be used. The default is Auto.","                type: string","              iptablesFilterAllowAction:","                type: string","              iptablesFilterDenyAction:","                description: IptablesFilterDenyAction controls what happens to traffic","                  that is denied by network policy. By default Calico blocks traffic","                  with an iptables \"DROP\" action. If you want to use \"REJECT\" action","                  instead you can configure it in here.","                type: string","              iptablesLockFilePath:","                description: 'IptablesLockFilePath is the location of the iptables","                  lock file. You may need to change this if the lock file is not in","                  its standard location (for example if you have mapped it into Felix''s","                  container at a different path). [Default: /run/xtables.lock]'","                type: string","              iptablesLockProbeInterval:","                description: 'IptablesLockProbeInterval is the time that Felix will","                  wait between attempts to acquire the iptables lock if it is not","                  available. Lower values make Felix more responsive when the lock","                  is contended, but use more CPU. [Default: 50ms]'","                type: string","              iptablesLockTimeout:","                description: 'IptablesLockTimeout is the time that Felix will wait","                  for the iptables lock, or 0, to disable. To use this feature, Felix","                  must share the iptables lock file with all other processes that","                  also take the lock. When running Felix inside a container, this","                  requires the /run directory of the host to be mounted into the calico/node","                  or calico/felix container. [Default: 0s disabled]'","                type: string","              iptablesMangleAllowAction:","                type: string","              iptablesMarkMask:","                description: 'IptablesMarkMask is the mask that Felix selects its","                  IPTables Mark bits from. Should be a 32 bit hexadecimal number with","                  at least 8 bits set, none of which clash with any other mark bits","                  in use on the system. [Default: 0xff000000]'","                format: int32","                type: integer","              iptablesNATOutgoingInterfaceFilter:","                type: string","              iptablesPostWriteCheckInterval:","                description: 'IptablesPostWriteCheckInterval is the period after Felix","                  has done a write to the dataplane that it schedules an extra read","                  back in order to check the write was not clobbered by another process.","                  This should only occur if another application on the system doesn''t","                  respect the iptables lock. [Default: 1s]'","                type: string","              iptablesRefreshInterval:","                description: 'IptablesRefreshInterval is the period at which Felix","                  re-checks the IP sets in the dataplane to ensure that no other process","                  has accidentally broken Calico''s rules. Set to 0 to disable IP","                  sets refresh. Note: the default for this value is lower than the","                  other refresh intervals as a workaround for a Linux kernel bug that","                  was fixed in kernel version 4.11. If you are using v4.11 or greater","                  you may want to set this to, a higher value to reduce Felix CPU","                  usage. [Default: 10s]'","                type: string","              ipv6Support:","                description: IPv6Support controls whether Felix enables support for","                  IPv6 (if supported by the in-use dataplane).","                type: boolean","              kubeNodePortRanges:","                description: 'KubeNodePortRanges holds list of port ranges used for","                  service node ports. Only used if felix detects kube-proxy running","                  in ipvs mode. Felix uses these ranges to separate host and workload","                  traffic. [Default: 30000:32767].'","                items:","                  anyOf:","                  - type: integer","                  - type: string","                  pattern: ^.*","                  x-kubernetes-int-or-string: true","                type: array","              logDebugFilenameRegex:","                description: LogDebugFilenameRegex controls which source code files","                  have their Debug log output included in the logs. Only logs from","                  files with names that match the given regular expression are included.  The","                  filter only applies to Debug level logs.","                type: string","              logFilePath:","                description: 'LogFilePath is the full path to the Felix log. Set to","                  none to disable file logging. [Default: /var/log/calico/felix.log]'","                type: string","              logPrefix:","                description: 'LogPrefix is the log prefix that Felix uses when rendering","                  LOG rules. [Default: calico-packet]'","                type: string","              logSeverityFile:","                description: 'LogSeverityFile is the log severity above which logs","                  are sent to the log file. [Default: Info]'","                type: string","              logSeverityScreen:","                description: 'LogSeverityScreen is the log severity above which logs","                  are sent to the stdout. [Default: Info]'","                type: string","              logSeveritySys:","                description: 'LogSeveritySys is the log severity above which logs","                  are sent to the syslog. Set to None for no logging to syslog. [Default:","                  Info]'","                type: string","              maxIpsetSize:","                type: integer","              metadataAddr:","                description: 'MetadataAddr is the IP address or domain name of the","                  server that can answer VM queries for cloud-init metadata. In OpenStack,","                  this corresponds to the machine running nova-api (or in Ubuntu,","                  nova-api-metadata). A value of none (case insensitive) means that","                  Felix should not set up any NAT rule for the metadata path. [Default:","                  127.0.0.1]'","                type: string","              metadataPort:","                description: 'MetadataPort is the port of the metadata server. This,","                  combined with global.MetadataAddr (if not ''None''), is used to","                  set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort.","                  In most cases this should not need to be changed [Default: 8775].'","                type: integer","              mtuIfacePattern:","                description: MTUIfacePattern is a regular expression that controls","                  which interfaces Felix should scan in order to calculate the host's","                  MTU. This should not match workload interfaces (usually named cali...).","                type: string","              natOutgoingAddress:","                description: NATOutgoingAddress specifies an address to use when performing","                  source NAT for traffic in a natOutgoing pool that is leaving the","                  network. By default the address used is an address on the interface","                  the traffic is leaving on (ie it uses the iptables MASQUERADE target)","                type: string","              natPortRange:","                anyOf:","                - type: integer","                - type: string","                description: NATPortRange specifies the range of ports that is used","                  for port mapping when doing outgoing NAT. When unset the default","                  behavior of the network stack is used.","                pattern: ^.*","                x-kubernetes-int-or-string: true","              netlinkTimeout:","                type: string","              openstackRegion:","                description: 'OpenstackRegion is the name of the region that a particular","                  Felix belongs to. In a multi-region Calico/OpenStack deployment,","                  this must be configured somehow for each Felix (here in the datamodel,","                  or in felix.cfg or the environment on each compute node), and must","                  match the [calico] openstack_region value configured in neutron.conf","                  on each node. [Default: Empty]'","                type: string","              policySyncPathPrefix:","                description: 'PolicySyncPathPrefix is used to by Felix to communicate","                  policy changes to external services, like Application layer policy.","                  [Default: Empty]'","                type: string","              prometheusGoMetricsEnabled:","                description: 'PrometheusGoMetricsEnabled disables Go runtime metrics","                  collection, which the Prometheus client does by default, when set","                  to false. This reduces the number of metrics reported, reducing","                  Prometheus load. [Default: true]'","                type: boolean","              prometheusMetricsEnabled:","                description: 'PrometheusMetricsEnabled enables the Prometheus metrics","                  server in Felix if set to true. [Default: false]'","                type: boolean","              prometheusMetricsHost:","                description: 'PrometheusMetricsHost is the host that the Prometheus","                  metrics server should bind to. [Default: empty]'","                type: string","              prometheusMetricsPort:","                description: 'PrometheusMetricsPort is the TCP port that the Prometheus","                  metrics server should bind to. [Default: 9091]'","                type: integer","              prometheusProcessMetricsEnabled:","                description: 'PrometheusProcessMetricsEnabled disables process metrics","                  collection, which the Prometheus client does by default, when set","                  to false. This reduces the number of metrics reported, reducing","                  Prometheus load. [Default: true]'","                type: boolean","              prometheusWireGuardMetricsEnabled:","                description: 'PrometheusWireGuardMetricsEnabled disables wireguard","                  metrics collection, which the Prometheus client does by default,","                  when set to false. This reduces the number of metrics reported,","                  reducing Prometheus load. [Default: true]'","                type: boolean","              removeExternalRoutes:","                description: Whether or not to remove device routes that have not","                  been programmed by Felix. Disabling this will allow external applications","                  to also add device routes. This is enabled by default which means","                  we will remove externally added routes.","                type: boolean","              reportingInterval:","                description: 'ReportingInterval is the interval at which Felix reports","                  its status into the datastore or 0 to disable. Must be non-zero","                  in OpenStack deployments. [Default: 30s]'","                type: string","              reportingTTL:","                description: 'ReportingTTL is the time-to-live setting for process-wide","                  status reports. [Default: 90s]'","                type: string","              routeRefreshInterval:","                description: 'RouteRefreshInterval is the period at which Felix re-checks","                  the routes in the dataplane to ensure that no other process has","                  accidentally broken Calico''s rules. Set to 0 to disable route refresh.","                  [Default: 90s]'","                type: string","              routeSource:","                description: 'RouteSource configures where Felix gets its routing","                  information. - WorkloadIPs: use workload endpoints to construct","                  routes. - CalicoIPAM: the default - use IPAM data to construct routes.'","                type: string","              routeSyncDisabled:","                description: RouteSyncDisabled will disable all operations performed","                  on the route table. Set to true to run in network-policy mode only.","                type: boolean","              routeTableRange:","                description: Deprecated in favor of RouteTableRanges. Calico programs","                  additional Linux route tables for various purposes. RouteTableRange","                  specifies the indices of the route tables that Calico should use.","                properties:","                  max:","                    type: integer","                  min:","                    type: integer","                required:","                - max","                - min","                type: object","              routeTableRanges:","                description: Calico programs additional Linux route tables for various","                  purposes. RouteTableRanges specifies a set of table index ranges","                  that Calico should use. Deprecates`RouteTableRange`, overrides `RouteTableRange`.","                items:","                  properties:","                    max:","                      type: integer","                    min:","                      type: integer","                  required:","                  - max","                  - min","                  type: object","                type: array","              serviceLoopPrevention:","                description: 'When service IP advertisement is enabled, prevent routing","                  loops to service IPs that are not in use, by dropping or rejecting","                  packets that do not get DNAT''d by kube-proxy. Unless set to \"Disabled\",","                  in which case such routing loops continue to be allowed. [Default:","                  Drop]'","                type: string","              sidecarAccelerationEnabled:","                description: 'SidecarAccelerationEnabled enables experimental sidecar","                  acceleration [Default: false]'","                type: boolean","              usageReportingEnabled:","                description: 'UsageReportingEnabled reports anonymous Calico version","                  number and cluster size to projectcalico.org. Logs warnings returned","                  by the usage server. For example, if a significant security vulnerability","                  has been discovered in the version of Calico being used. [Default:","                  true]'","                type: boolean","              usageReportingInitialDelay:","                description: 'UsageReportingInitialDelay controls the minimum delay","                  before Felix makes a report. [Default: 300s]'","                type: string","              usageReportingInterval:","                description: 'UsageReportingInterval controls the interval at which","                  Felix makes reports. [Default: 86400s]'","                type: string","              useInternalDataplaneDriver:","                description: UseInternalDataplaneDriver, if true, Felix will use its","                  internal dataplane programming logic.  If false, it will launch","                  an external dataplane driver and communicate with it over protobuf.","                type: boolean","              vxlanEnabled:","                description: 'VXLANEnabled overrides whether Felix should create the","                  VXLAN tunnel device for IPv4 VXLAN networking. Optional as Felix","                  determines this based on the existing IP pools. [Default: nil (unset)]'","                type: boolean","              vxlanMTU:","                description: 'VXLANMTU is the MTU to set on the IPv4 VXLAN tunnel","                  device. See Configuring MTU [Default: 1410]'","                type: integer","              vxlanMTUV6:","                description: 'VXLANMTUV6 is the MTU to set on the IPv6 VXLAN tunnel","                  device. See Configuring MTU [Default: 1390]'","                type: integer","              vxlanPort:","                type: integer","              vxlanVNI:","                type: integer","              wireguardEnabled:","                description: 'WireguardEnabled controls whether Wireguard is enabled","                  for IPv4 (encapsulating IPv4 traffic over an IPv4 underlay network).","                  [Default: false]'","                type: boolean","              wireguardEnabledV6:","                description: 'WireguardEnabledV6 controls whether Wireguard is enabled","                  for IPv6 (encapsulating IPv6 traffic over an IPv6 underlay network).","                  [Default: false]'","                type: boolean","              wireguardHostEncryptionEnabled:","                description: 'WireguardHostEncryptionEnabled controls whether Wireguard","                  host-to-host encryption is enabled. [Default: false]'","                type: boolean","              wireguardInterfaceName:","                description: 'WireguardInterfaceName specifies the name to use for","                  the IPv4 Wireguard interface. [Default: wireguard.cali]'","                type: string","              wireguardInterfaceNameV6:","                description: 'WireguardInterfaceNameV6 specifies the name to use for","                  the IPv6 Wireguard interface. [Default: wg-v6.cali]'","                type: string","              wireguardKeepAlive:","                description: 'WireguardKeepAlive controls Wireguard PersistentKeepalive","                  option. Set 0 to disable. [Default: 0]'","                type: string","              wireguardListeningPort:","                description: 'WireguardListeningPort controls the listening port used","                  by IPv4 Wireguard. [Default: 51820]'","                type: integer","              wireguardListeningPortV6:","                description: 'WireguardListeningPortV6 controls the listening port","                  used by IPv6 Wireguard. [Default: 51821]'","                type: integer","              wireguardMTU:","                description: 'WireguardMTU controls the MTU on the IPv4 Wireguard","                  interface. See Configuring MTU [Default: 1440]'","                type: integer","              wireguardMTUV6:","                description: 'WireguardMTUV6 controls the MTU on the IPv6 Wireguard","                  interface. See Configuring MTU [Default: 1420]'","                type: integer","              wireguardRoutingRulePriority:","                description: 'WireguardRoutingRulePriority controls the priority value","                  to use for the Wireguard routing rule. [Default: 99]'","                type: integer","              workloadSourceSpoofing:","                description: WorkloadSourceSpoofing controls whether pods can use","                  the allowedSourcePrefixes annotation to send traffic with a source","                  IP address that is not theirs. This is disabled by default. When","                  set to \"Any\", pods can request any prefix.","                type: string","              xdpEnabled:","                description: 'XDPEnabled enables XDP acceleration for suitable untracked","                  incoming deny rules. [Default: true]'","                type: boolean","              xdpRefreshInterval:","                description: 'XDPRefreshInterval is the period at which Felix re-checks","                  all XDP state to ensure that no other process has accidentally broken","                  Calico''s BPF maps or attached programs. Set to 0 to disable XDP","                  refresh. [Default: 90s]'","                type: string","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_globalnetworkpolicies.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: globalnetworkpolicies.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: GlobalNetworkPolicy","    listKind: GlobalNetworkPolicyList","    plural: globalnetworkpolicies","    singular: globalnetworkpolicy","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            properties:","              applyOnForward:","                description: ApplyOnForward indicates to apply the rules in this policy","                  on forward traffic.","                type: boolean","              doNotTrack:","                description: DoNotTrack indicates whether packets matched by the rules","                  in this policy should go through the data plane's connection tracking,","                  such as Linux conntrack.  If True, the rules in this policy are","                  applied before any data plane connection tracking, and packets allowed","                  by this policy are marked as not to be tracked.","                type: boolean","              egress:","                description: The ordered set of egress rules.  Each rule contains","                  a set of packet match criteria and a corresponding action to apply.","                items:","                  description: \"A Rule encapsulates a set of match criteria and an","                    action.  Both selector-based security Policy and security Profiles","                    reference rules - separated out as a list of rules for both ingress","                    and egress packet matching. \\n Each positive match criteria has","                    a negated version, prefixed with \\\"Not\\\". All the match criteria","                    within a rule must be satisfied for a packet to match. A single","                    rule can contain the positive and negative version of a match","                    and both must be satisfied for the rule to match.\"","                  properties:","                    action:","                      type: string","                    destination:","                      description: Destination contains the match criteria that apply","                        to destination entity.","                      properties:","                        namespaceSelector:","                          description: \"NamespaceSelector is an optional field that","                            contains a selector expression. Only traffic that originates","                            from (or terminates at) endpoints within the selected","                            namespaces will be matched. When both NamespaceSelector","                            and another selector are defined on the same rule, then","                            only workload endpoints that are matched by both selectors","                            will be selected by the rule. \\n For NetworkPolicy, an","                            empty NamespaceSelector implies that the Selector is limited","                            to selecting only workload endpoints in the same namespace","                            as the NetworkPolicy. \\n For NetworkPolicy, `global()`","                            NamespaceSelector implies that the Selector is limited","                            to selecting only GlobalNetworkSet or HostEndpoint. \\n","                            For GlobalNetworkPolicy, an empty NamespaceSelector implies","                            the Selector applies to workload endpoints across all","                            namespaces.\"","                          type: string","                        nets:","                          description: Nets is an optional field that restricts the","                            rule to only apply to traffic that originates from (or","                            terminates at) IP addresses in any of the given subnets.","                          items:","                            type: string","                          type: array","                        notNets:","                          description: NotNets is the negated version of the Nets","                            field.","                          items:","                            type: string","                          type: array","                        notPorts:","                          description: NotPorts is the negated version of the Ports","                            field. Since only some protocols have ports, if any ports","                            are specified it requires the Protocol match in the Rule","                            to be set to \"TCP\" or \"UDP\".","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        notSelector:","                          description: NotSelector is the negated version of the Selector","                            field.  See Selector field for subtleties with negated","                            selectors.","                          type: string","                        ports:","                          description: \"Ports is an optional field that restricts","                            the rule to only apply to traffic that has a source (destination)","                            port that matches one of these ranges/values. This value","                            is a list of integers or strings that represent ranges","                            of ports. \\n Since only some protocols have ports, if","                            any ports are specified it requires the Protocol match","                            in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        selector:","                          description: \"Selector is an optional field that contains","                            a selector expression (see Policy for sample syntax).","                            \\ Only traffic that originates from (terminates at) endpoints","                            matching the selector will be matched. \\n Note that: in","                            addition to the negated version of the Selector (see NotSelector","                            below), the selector expression syntax itself supports","                            negation.  The two types of negation are subtly different.","                            One negates the set of matched endpoints, the other negates","                            the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches","                            packets that are from other Calico-controlled \\tendpoints","                            that do not have the label \\\"my_label\\\". \\n \\tNotSelector","                            = \\\"has(my_label)\\\" matches packets that are not from","                            Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".","                            \\n The effect is that the latter will accept packets from","                            non-Calico sources whereas the former is limited to packets","                            from Calico-controlled endpoints.\"","                          type: string","                        serviceAccounts:","                          description: ServiceAccounts is an optional field that restricts","                            the rule to only apply to traffic that originates from","                            (or terminates at) a pod running as a matching service","                            account.","                          properties:","                            names:","                              description: Names is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account whose name is in the list.","                              items:","                                type: string","                              type: array","                            selector:","                              description: Selector is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account that matches the given label selector. If","                                both Names and Selector are specified then they are","                                AND'ed.","                              type: string","                          type: object","                        services:","                          description: \"Services is an optional field that contains","                            options for matching Kubernetes Services. If specified,","                            only traffic that originates from or terminates at endpoints","                            within the selected service(s) will be matched, and only","                            to/from each endpoint's port. \\n Services cannot be specified","                            on the same rule as Selector, NotSelector, NamespaceSelector,","                            Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts","                            can only be specified with Services on ingress rules.\"","                          properties:","                            name:","                              description: Name specifies the name of a Kubernetes","                                Service to match.","                              type: string","                            namespace:","                              description: Namespace specifies the namespace of the","                                given Service. If left empty, the rule will match","                                within this policy's namespace.","                              type: string","                          type: object","                      type: object","                    http:","                      description: HTTP contains match criteria that apply to HTTP","                        requests.","                      properties:","                        methods:","                          description: Methods is an optional field that restricts","                            the rule to apply only to HTTP requests that use one of","                            the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple","                            methods are OR'd together.","                          items:","                            type: string","                          type: array","                        paths:","                          description: 'Paths is an optional field that restricts","                            the rule to apply to HTTP requests that use one of the","                            listed HTTP Paths. Multiple paths are OR''d together.","                            e.g: - exact: /foo - prefix: /bar NOTE: Each entry may","                            ONLY specify either a `exact` or a `prefix` match. The","                            validator will check for it.'","                          items:","                            description: 'HTTPPath specifies an HTTP path to match.","                              It may be either of the form: exact: \u003cpath\u003e: which matches","                              the path exactly or prefix: \u003cpath-prefix\u003e: which matches","                              the path prefix'","                            properties:","                              exact:","                                type: string","                              prefix:","                                type: string","                            type: object","                          type: array","                      type: object","                    icmp:","                      description: ICMP is an optional field that restricts the rule","                        to apply to a specific type and code of ICMP traffic.  This","                        should only be specified if the Protocol field is set to \"ICMP\"","                        or \"ICMPv6\".","                      properties:","                        code:","                          description: Match on a specific ICMP code.  If specified,","                            the Type value must also be specified. This is a technical","                            limitation imposed by the kernel's iptables firewall,","                            which Calico uses to enforce the rule.","                          type: integer","                        type:","                          description: Match on a specific ICMP type.  For example","                            a value of 8 refers to ICMP Echo Request (i.e. pings).","                          type: integer","                      type: object","                    ipVersion:","                      description: IPVersion is an optional field that restricts the","                        rule to only match a specific IP version.","                      type: integer","                    metadata:","                      description: Metadata contains additional information for this","                        rule","                      properties:","                        annotations:","                          additionalProperties:","                            type: string","                          description: Annotations is a set of key value pairs that","                            give extra information about the rule","                          type: object","                      type: object","                    notICMP:","                      description: NotICMP is the negated version of the ICMP field.","                      properties:","                        code:","                          description: Match on a specific ICMP code.  If specified,","                            the Type value must also be specified. This is a technical","                            limitation imposed by the kernel's iptables firewall,","                            which Calico uses to enforce the rule.","                          type: integer","                        type:","                          description: Match on a specific ICMP type.  For example","                            a value of 8 refers to ICMP Echo Request (i.e. pings).","                          type: integer","                      type: object","                    notProtocol:","                      anyOf:","                      - type: integer","                      - type: string","                      description: NotProtocol is the negated version of the Protocol","                        field.","                      pattern: ^.*","                      x-kubernetes-int-or-string: true","                    protocol:","                      anyOf:","                      - type: integer","                      - type: string","                      description: \"Protocol is an optional field that restricts the","                        rule to only apply to traffic of a specific IP protocol. Required","                        if any of the EntityRules contain Ports (because ports only","                        apply to certain protocols). \\n Must be one of these string","                        values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\",","                        \\\"UDPLite\\\" or an integer in the range 1-255.\"","                      pattern: ^.*","                      x-kubernetes-int-or-string: true","                    source:","                      description: Source contains the match criteria that apply to","                        source entity.","                      properties:","                        namespaceSelector:","                          description: \"NamespaceSelector is an optional field that","                            contains a selector expression. Only traffic that originates","                            from (or terminates at) endpoints within the selected","                            namespaces will be matched. When both NamespaceSelector","                            and another selector are defined on the same rule, then","                            only workload endpoints that are matched by both selectors","                            will be selected by the rule. \\n For NetworkPolicy, an","                            empty NamespaceSelector implies that the Selector is limited","                            to selecting only workload endpoints in the same namespace","                            as the NetworkPolicy. \\n For NetworkPolicy, `global()`","                            NamespaceSelector implies that the Selector is limited","                            to selecting only GlobalNetworkSet or HostEndpoint. \\n","                            For GlobalNetworkPolicy, an empty NamespaceSelector implies","                            the Selector applies to workload endpoints across all","                            namespaces.\"","                          type: string","                        nets:","                          description: Nets is an optional field that restricts the","                            rule to only apply to traffic that originates from (or","                            terminates at) IP addresses in any of the given subnets.","                          items:","                            type: string","                          type: array","                        notNets:","                          description: NotNets is the negated version of the Nets","                            field.","                          items:","                            type: string","                          type: array","                        notPorts:","                          description: NotPorts is the negated version of the Ports","                            field. Since only some protocols have ports, if any ports","                            are specified it requires the Protocol match in the Rule","                            to be set to \"TCP\" or \"UDP\".","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        notSelector:","                          description: NotSelector is the negated version of the Selector","                            field.  See Selector field for subtleties with negated","                            selectors.","                          type: string","                        ports:","                          description: \"Ports is an optional field that restricts","                            the rule to only apply to traffic that has a source (destination)","                            port that matches one of these ranges/values. This value","                            is a list of integers or strings that represent ranges","                            of ports. \\n Since only some protocols have ports, if","                            any ports are specified it requires the Protocol match","                            in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        selector:","                          description: \"Selector is an optional field that contains","                            a selector expression (see Policy for sample syntax).","                            \\ Only traffic that originates from (terminates at) endpoints","                            matching the selector will be matched. \\n Note that: in","                            addition to the negated version of the Selector (see NotSelector","                            below), the selector expression syntax itself supports","                            negation.  The two types of negation are subtly different.","                            One negates the set of matched endpoints, the other negates","                            the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches","                            packets that are from other Calico-controlled \\tendpoints","                            that do not have the label \\\"my_label\\\". \\n \\tNotSelector","                            = \\\"has(my_label)\\\" matches packets that are not from","                            Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".","                            \\n The effect is that the latter will accept packets from","                            non-Calico sources whereas the former is limited to packets","                            from Calico-controlled endpoints.\"","                          type: string","                        serviceAccounts:","                          description: ServiceAccounts is an optional field that restricts","                            the rule to only apply to traffic that originates from","                            (or terminates at) a pod running as a matching service","                            account.","                          properties:","                            names:","                              description: Names is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account whose name is in the list.","                              items:","                                type: string","                              type: array","                            selector:","                              description: Selector is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account that matches the given label selector. If","                                both Names and Selector are specified then they are","                                AND'ed.","                              type: string","                          type: object","                        services:","                          description: \"Services is an optional field that contains","                            options for matching Kubernetes Services. If specified,","                            only traffic that originates from or terminates at endpoints","                            within the selected service(s) will be matched, and only","                            to/from each endpoint's port. \\n Services cannot be specified","                            on the same rule as Selector, NotSelector, NamespaceSelector,","                            Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts","                            can only be specified with Services on ingress rules.\"","                          properties:","                            name:","                              description: Name specifies the name of a Kubernetes","                                Service to match.","                              type: string","                            namespace:","                              description: Namespace specifies the namespace of the","                                given Service. If left empty, the rule will match","                                within this policy's namespace.","                              type: string","                          type: object","                      type: object","                  required:","                  - action","                  type: object","                type: array","              ingress:","                description: The ordered set of ingress rules.  Each rule contains","                  a set of packet match criteria and a corresponding action to apply.","                items:","                  description: \"A Rule encapsulates a set of match criteria and an","                    action.  Both selector-based security Policy and security Profiles","                    reference rules - separated out as a list of rules for both ingress","                    and egress packet matching. \\n Each positive match criteria has","                    a negated version, prefixed with \\\"Not\\\". All the match criteria","                    within a rule must be satisfied for a packet to match. A single","                    rule can contain the positive and negative version of a match","                    and both must be satisfied for the rule to match.\"","                  properties:","                    action:","                      type: string","                    destination:","                      description: Destination contains the match criteria that apply","                        to destination entity.","                      properties:","                        namespaceSelector:","                          description: \"NamespaceSelector is an optional field that","                            contains a selector expression. Only traffic that originates","                            from (or terminates at) endpoints within the selected","                            namespaces will be matched. When both NamespaceSelector","                            and another selector are defined on the same rule, then","                            only workload endpoints that are matched by both selectors","                            will be selected by the rule. \\n For NetworkPolicy, an","                            empty NamespaceSelector implies that the Selector is limited","                            to selecting only workload endpoints in the same namespace","                            as the NetworkPolicy. \\n For NetworkPolicy, `global()`","                            NamespaceSelector implies that the Selector is limited","                            to selecting only GlobalNetworkSet or HostEndpoint. \\n","                            For GlobalNetworkPolicy, an empty NamespaceSelector implies","                            the Selector applies to workload endpoints across all","                            namespaces.\"","                          type: string","                        nets:","                          description: Nets is an optional field that restricts the","                            rule to only apply to traffic that originates from (or","                            terminates at) IP addresses in any of the given subnets.","                          items:","                            type: string","                          type: array","                        notNets:","                          description: NotNets is the negated version of the Nets","                            field.","                          items:","                            type: string","                          type: array","                        notPorts:","                          description: NotPorts is the negated version of the Ports","                            field. Since only some protocols have ports, if any ports","                            are specified it requires the Protocol match in the Rule","                            to be set to \"TCP\" or \"UDP\".","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        notSelector:","                          description: NotSelector is the negated version of the Selector","                            field.  See Selector field for subtleties with negated","                            selectors.","                          type: string","                        ports:","                          description: \"Ports is an optional field that restricts","                            the rule to only apply to traffic that has a source (destination)","                            port that matches one of these ranges/values. This value","                            is a list of integers or strings that represent ranges","                            of ports. \\n Since only some protocols have ports, if","                            any ports are specified it requires the Protocol match","                            in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        selector:","                          description: \"Selector is an optional field that contains","                            a selector expression (see Policy for sample syntax).","                            \\ Only traffic that originates from (terminates at) endpoints","                            matching the selector will be matched. \\n Note that: in","                            addition to the negated version of the Selector (see NotSelector","                            below), the selector expression syntax itself supports","                            negation.  The two types of negation are subtly different.","                            One negates the set of matched endpoints, the other negates","                            the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches","                            packets that are from other Calico-controlled \\tendpoints","                            that do not have the label \\\"my_label\\\". \\n \\tNotSelector","                            = \\\"has(my_label)\\\" matches packets that are not from","                            Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".","                            \\n The effect is that the latter will accept packets from","                            non-Calico sources whereas the former is limited to packets","                            from Calico-controlled endpoints.\"","                          type: string","                        serviceAccounts:","                          description: ServiceAccounts is an optional field that restricts","                            the rule to only apply to traffic that originates from","                            (or terminates at) a pod running as a matching service","                            account.","                          properties:","                            names:","                              description: Names is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account whose name is in the list.","                              items:","                                type: string","                              type: array","                            selector:","                              description: Selector is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account that matches the given label selector. If","                                both Names and Selector are specified then they are","                                AND'ed.","                              type: string","                          type: object","                        services:","                          description: \"Services is an optional field that contains","                            options for matching Kubernetes Services. If specified,","                            only traffic that originates from or terminates at endpoints","                            within the selected service(s) will be matched, and only","                            to/from each endpoint's port. \\n Services cannot be specified","                            on the same rule as Selector, NotSelector, NamespaceSelector,","                            Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts","                            can only be specified with Services on ingress rules.\"","                          properties:","                            name:","                              description: Name specifies the name of a Kubernetes","                                Service to match.","                              type: string","                            namespace:","                              description: Namespace specifies the namespace of the","                                given Service. If left empty, the rule will match","                                within this policy's namespace.","                              type: string","                          type: object","                      type: object","                    http:","                      description: HTTP contains match criteria that apply to HTTP","                        requests.","                      properties:","                        methods:","                          description: Methods is an optional field that restricts","                            the rule to apply only to HTTP requests that use one of","                            the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple","                            methods are OR'd together.","                          items:","                            type: string","                          type: array","                        paths:","                          description: 'Paths is an optional field that restricts","                            the rule to apply to HTTP requests that use one of the","                            listed HTTP Paths. Multiple paths are OR''d together.","                            e.g: - exact: /foo - prefix: /bar NOTE: Each entry may","                            ONLY specify either a `exact` or a `prefix` match. The","                            validator will check for it.'","                          items:","                            description: 'HTTPPath specifies an HTTP path to match.","                              It may be either of the form: exact: \u003cpath\u003e: which matches","                              the path exactly or prefix: \u003cpath-prefix\u003e: which matches","                              the path prefix'","                            properties:","                              exact:","                                type: string","                              prefix:","                                type: string","                            type: object","                          type: array","                      type: object","                    icmp:","                      description: ICMP is an optional field that restricts the rule","                        to apply to a specific type and code of ICMP traffic.  This","                        should only be specified if the Protocol field is set to \"ICMP\"","                        or \"ICMPv6\".","                      properties:","                        code:","                          description: Match on a specific ICMP code.  If specified,","                            the Type value must also be specified. This is a technical","                            limitation imposed by the kernel's iptables firewall,","                            which Calico uses to enforce the rule.","                          type: integer","                        type:","                          description: Match on a specific ICMP type.  For example","                            a value of 8 refers to ICMP Echo Request (i.e. pings).","                          type: integer","                      type: object","                    ipVersion:","                      description: IPVersion is an optional field that restricts the","                        rule to only match a specific IP version.","                      type: integer","                    metadata:","                      description: Metadata contains additional information for this","                        rule","                      properties:","                        annotations:","                          additionalProperties:","                            type: string","                          description: Annotations is a set of key value pairs that","                            give extra information about the rule","                          type: object","                      type: object","                    notICMP:","                      description: NotICMP is the negated version of the ICMP field.","                      properties:","                        code:","                          description: Match on a specific ICMP code.  If specified,","                            the Type value must also be specified. This is a technical","                            limitation imposed by the kernel's iptables firewall,","                            which Calico uses to enforce the rule.","                          type: integer","                        type:","                          description: Match on a specific ICMP type.  For example","                            a value of 8 refers to ICMP Echo Request (i.e. pings).","                          type: integer","                      type: object","                    notProtocol:","                      anyOf:","                      - type: integer","                      - type: string","                      description: NotProtocol is the negated version of the Protocol","                        field.","                      pattern: ^.*","                      x-kubernetes-int-or-string: true","                    protocol:","                      anyOf:","                      - type: integer","                      - type: string","                      description: \"Protocol is an optional field that restricts the","                        rule to only apply to traffic of a specific IP protocol. Required","                        if any of the EntityRules contain Ports (because ports only","                        apply to certain protocols). \\n Must be one of these string","                        values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\",","                        \\\"UDPLite\\\" or an integer in the range 1-255.\"","                      pattern: ^.*","                      x-kubernetes-int-or-string: true","                    source:","                      description: Source contains the match criteria that apply to","                        source entity.","                      properties:","                        namespaceSelector:","                          description: \"NamespaceSelector is an optional field that","                            contains a selector expression. Only traffic that originates","                            from (or terminates at) endpoints within the selected","                            namespaces will be matched. When both NamespaceSelector","                            and another selector are defined on the same rule, then","                            only workload endpoints that are matched by both selectors","                            will be selected by the rule. \\n For NetworkPolicy, an","                            empty NamespaceSelector implies that the Selector is limited","                            to selecting only workload endpoints in the same namespace","                            as the NetworkPolicy. \\n For NetworkPolicy, `global()`","                            NamespaceSelector implies that the Selector is limited","                            to selecting only GlobalNetworkSet or HostEndpoint. \\n","                            For GlobalNetworkPolicy, an empty NamespaceSelector implies","                            the Selector applies to workload endpoints across all","                            namespaces.\"","                          type: string","                        nets:","                          description: Nets is an optional field that restricts the","                            rule to only apply to traffic that originates from (or","                            terminates at) IP addresses in any of the given subnets.","                          items:","                            type: string","                          type: array","                        notNets:","                          description: NotNets is the negated version of the Nets","                            field.","                          items:","                            type: string","                          type: array","                        notPorts:","                          description: NotPorts is the negated version of the Ports","                            field. Since only some protocols have ports, if any ports","                            are specified it requires the Protocol match in the Rule","                            to be set to \"TCP\" or \"UDP\".","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        notSelector:","                          description: NotSelector is the negated version of the Selector","                            field.  See Selector field for subtleties with negated","                            selectors.","                          type: string","                        ports:","                          description: \"Ports is an optional field that restricts","                            the rule to only apply to traffic that has a source (destination)","                            port that matches one of these ranges/values. This value","                            is a list of integers or strings that represent ranges","                            of ports. \\n Since only some protocols have ports, if","                            any ports are specified it requires the Protocol match","                            in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        selector:","                          description: \"Selector is an optional field that contains","                            a selector expression (see Policy for sample syntax).","                            \\ Only traffic that originates from (terminates at) endpoints","                            matching the selector will be matched. \\n Note that: in","                            addition to the negated version of the Selector (see NotSelector","                            below), the selector expression syntax itself supports","                            negation.  The two types of negation are subtly different.","                            One negates the set of matched endpoints, the other negates","                            the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches","                            packets that are from other Calico-controlled \\tendpoints","                            that do not have the label \\\"my_label\\\". \\n \\tNotSelector","                            = \\\"has(my_label)\\\" matches packets that are not from","                            Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".","                            \\n The effect is that the latter will accept packets from","                            non-Calico sources whereas the former is limited to packets","                            from Calico-controlled endpoints.\"","                          type: string","                        serviceAccounts:","                          description: ServiceAccounts is an optional field that restricts","                            the rule to only apply to traffic that originates from","                            (or terminates at) a pod running as a matching service","                            account.","                          properties:","                            names:","                              description: Names is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account whose name is in the list.","                              items:","                                type: string","                              type: array","                            selector:","                              description: Selector is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account that matches the given label selector. If","                                both Names and Selector are specified then they are","                                AND'ed.","                              type: string","                          type: object","                        services:","                          description: \"Services is an optional field that contains","                            options for matching Kubernetes Services. If specified,","                            only traffic that originates from or terminates at endpoints","                            within the selected service(s) will be matched, and only","                            to/from each endpoint's port. \\n Services cannot be specified","                            on the same rule as Selector, NotSelector, NamespaceSelector,","                            Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts","                            can only be specified with Services on ingress rules.\"","                          properties:","                            name:","                              description: Name specifies the name of a Kubernetes","                                Service to match.","                              type: string","                            namespace:","                              description: Namespace specifies the namespace of the","                                given Service. If left empty, the rule will match","                                within this policy's namespace.","                              type: string","                          type: object","                      type: object","                  required:","                  - action","                  type: object","                type: array","              namespaceSelector:","                description: NamespaceSelector is an optional field for an expression","                  used to select a pod based on namespaces.","                type: string","              order:","                description: Order is an optional field that specifies the order in","                  which the policy is applied. Policies with higher \"order\" are applied","                  after those with lower order.  If the order is omitted, it may be","                  considered to be \"infinite\" - i.e. the policy will be applied last.  Policies","                  with identical order will be applied in alphanumerical order based","                  on the Policy \"Name\".","                type: number","              preDNAT:","                description: PreDNAT indicates to apply the rules in this policy before","                  any DNAT.","                type: boolean","              selector:","                description: \"The selector is an expression used to pick pick out","                  the endpoints that the policy should be applied to. \\n Selector","                  expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"","                  \\ -\u003e  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"","                  \\  -\u003e  not equal; also matches if label is not present \\tlabel in","                  { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -\u003e  true if the value of label X is","                  one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\",","                  ... }  -\u003e  true if the value of label X is not one of \\\"a\\\", \\\"b\\\",","                  \\\"c\\\" \\thas(label_name)  -\u003e True if that label is present \\t! expr","                  -\u003e negation of expr \\texpr \u0026\u0026 expr  -\u003e Short-circuit and \\texpr","                  || expr  -\u003e Short-circuit or \\t( expr ) -\u003e parens for grouping \\tall()","                  or the empty selector -\u003e matches all endpoints. \\n Label names are","                  allowed to contain alphanumerics, -, _ and /. String literals are","                  more permissive but they do not support escape characters. \\n Examples","                  (with made-up labels): \\n \\ttype == \\\"webserver\\\" \u0026\u0026 deployment","                  == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment !=","                  \\\"dev\\\" \\t! has(label_name)\"","                type: string","              serviceAccountSelector:","                description: ServiceAccountSelector is an optional field for an expression","                  used to select a pod based on service accounts.","                type: string","              types:","                description: \"Types indicates whether this policy applies to ingress,","                  or to egress, or to both.  When not explicitly specified (and so","                  the value on creation is empty or nil), Calico defaults Types according","                  to what Ingress and Egress rules are present in the policy.  The","                  default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules","                  (including the case where there are   also no Ingress rules) \\n","                  - [ PolicyTypeEgress ], if there are Egress rules but no Ingress","                  rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are","                  both Ingress and Egress rules. \\n When the policy is read back again,","                  Types will always be one of these values, never empty or nil.\"","                items:","                  description: PolicyType enumerates the possible values of the PolicySpec","                    Types field.","                  type: string","                type: array","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_globalnetworksets.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: globalnetworksets.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: GlobalNetworkSet","    listKind: GlobalNetworkSetList","    plural: globalnetworksets","    singular: globalnetworkset","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        description: GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs","          that share labels to allow rules to refer to them via selectors.  The labels","          of GlobalNetworkSet are not namespaced.","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: GlobalNetworkSetSpec contains the specification for a NetworkSet","              resource.","            properties:","              nets:","                description: The list of IP networks that belong to this set.","                items:","                  type: string","                type: array","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_hostendpoints.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: hostendpoints.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: HostEndpoint","    listKind: HostEndpointList","    plural: hostendpoints","    singular: hostendpoint","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: HostEndpointSpec contains the specification for a HostEndpoint","              resource.","            properties:","              expectedIPs:","                description: \"The expected IP addresses (IPv4 and IPv6) of the endpoint.","                  If \\\"InterfaceName\\\" is not present, Calico will look for an interface","                  matching any of the IPs in the list and apply policy to that. Note:","                  \\tWhen using the selector match criteria in an ingress or egress","                  security Policy \\tor Profile, Calico converts the selector into","                  a set of IP addresses. For host \\tendpoints, the ExpectedIPs field","                  is used for that purpose. (If only the interface \\tname is specified,","                  Calico does not learn the IPs of the interface for use in match","                  \\tcriteria.)\"","                items:","                  type: string","                type: array","              interfaceName:","                description: \"Either \\\"*\\\", or the name of a specific Linux interface","                  to apply policy to; or empty.  \\\"*\\\" indicates that this HostEndpoint","                  governs all traffic to, from or through the default network namespace","                  of the host named by the \\\"Node\\\" field; entering and leaving that","                  namespace via any interface, including those from/to non-host-networked","                  local workloads. \\n If InterfaceName is not \\\"*\\\", this HostEndpoint","                  only governs traffic that enters or leaves the host through the","                  specific interface named by InterfaceName, or - when InterfaceName","                  is empty - through the specific interface that has one of the IPs","                  in ExpectedIPs. Therefore, when InterfaceName is empty, at least","                  one expected IP must be specified.  Only external interfaces (such","                  as \\\"eth0\\\") are supported here; it isn't possible for a HostEndpoint","                  to protect traffic through a specific local workload interface.","                  \\n Note: Only some kinds of policy are implemented for \\\"*\\\" HostEndpoints;","                  initially just pre-DNAT policy.  Please check Calico documentation","                  for the latest position.\"","                type: string","              node:","                description: The node name identifying the Calico node instance.","                type: string","              ports:","                description: Ports contains the endpoint's named ports, which may","                  be referenced in security policy rules.","                items:","                  properties:","                    name:","                      type: string","                    port:","                      type: integer","                    protocol:","                      anyOf:","                      - type: integer","                      - type: string","                      pattern: ^.*","                      x-kubernetes-int-or-string: true","                  required:","                  - name","                  - port","                  - protocol","                  type: object","                type: array","              profiles:","                description: A list of identifiers of security Profile objects that","                  apply to this endpoint. Each profile is applied in the order that","                  they appear in this list.  Profile rules are applied after the selector-based","                  security policy.","                items:","                  type: string","                type: array","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_ipamblocks.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: ipamblocks.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: IPAMBlock","    listKind: IPAMBlockList","    plural: ipamblocks","    singular: ipamblock","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: IPAMBlockSpec contains the specification for an IPAMBlock","              resource.","            properties:","              affinity:","                description: Affinity of the block, if this block has one. If set,","                  it will be of the form \"host:\u003chostname\u003e\". If not set, this block","                  is not affine to a host.","                type: string","              allocations:","                description: Array of allocations in-use within this block. nil entries","                  mean the allocation is free. For non-nil entries at index i, the","                  index is the ordinal of the allocation within this block and the","                  value is the index of the associated attributes in the Attributes","                  array.","                items:","                  type: integer","                  # TODO: This nullable is manually added in. We should update controller-gen","                  # to handle []*int properly itself.","                  nullable: true","                type: array","              attributes:","                description: Attributes is an array of arbitrary metadata associated","                  with allocations in the block. To find attributes for a given allocation,","                  use the value of the allocation's entry in the Allocations array","                  as the index of the element in this array.","                items:","                  properties:","                    handle_id:","                      type: string","                    secondary:","                      additionalProperties:","                        type: string","                      type: object","                  type: object","                type: array","              cidr:","                description: The block's CIDR.","                type: string","              deleted:","                description: Deleted is an internal boolean used to workaround a limitation","                  in the Kubernetes API whereby deletion will not return a conflict","                  error if the block has been updated. It should not be set manually.","                type: boolean","              sequenceNumber:","                default: 0","                description: We store a sequence number that is updated each time","                  the block is written. Each allocation will also store the sequence","                  number of the block at the time of its creation. When releasing","                  an IP, passing the sequence number associated with the allocation","                  allows us to protect against a race condition and ensure the IP","                  hasn't been released and re-allocated since the release request.","                format: int64","                type: integer","              sequenceNumberForAllocation:","                additionalProperties:","                  format: int64","                  type: integer","                description: Map of allocated ordinal within the block to sequence","                  number of the block at the time of allocation. Kubernetes does not","                  allow numerical keys for maps, so the key is cast to a string.","                type: object","              strictAffinity:","                description: StrictAffinity on the IPAMBlock is deprecated and no","                  longer used by the code. Use IPAMConfig StrictAffinity instead.","                type: boolean","              unallocated:","                description: Unallocated is an ordered list of allocations which are","                  free in the block.","                items:","                  type: integer","                type: array","            required:","            - allocations","            - attributes","            - cidr","            - strictAffinity","            - unallocated","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_ipamconfigs.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: ipamconfigs.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: IPAMConfig","    listKind: IPAMConfigList","    plural: ipamconfigs","    singular: ipamconfig","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: IPAMConfigSpec contains the specification for an IPAMConfig","              resource.","            properties:","              autoAllocateBlocks:","                type: boolean","              maxBlocksPerHost:","                description: MaxBlocksPerHost, if non-zero, is the max number of blocks","                  that can be affine to each host.","                maximum: 2147483647","                minimum: 0","                type: integer","              strictAffinity:","                type: boolean","            required:","            - autoAllocateBlocks","            - strictAffinity","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_ipamhandles.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: ipamhandles.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: IPAMHandle","    listKind: IPAMHandleList","    plural: ipamhandles","    singular: ipamhandle","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: IPAMHandleSpec contains the specification for an IPAMHandle","              resource.","            properties:","              block:","                additionalProperties:","                  type: integer","                type: object","              deleted:","                type: boolean","              handleID:","                type: string","            required:","            - block","            - handleID","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_ippools.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: ippools.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: IPPool","    listKind: IPPoolList","    plural: ippools","    singular: ippool","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: IPPoolSpec contains the specification for an IPPool resource.","            properties:","              allowedUses:","                description: AllowedUse controls what the IP pool will be used for.  If","                  not specified or empty, defaults to [\"Tunnel\", \"Workload\"] for back-compatibility","                items:","                  type: string","                type: array","              blockSize:","                description: The block size to use for IP address assignments from","                  this pool. Defaults to 26 for IPv4 and 122 for IPv6.","                type: integer","              cidr:","                description: The pool CIDR.","                type: string","              disableBGPExport:","                description: 'Disable exporting routes from this IP Pool''s CIDR over","                  BGP. [Default: false]'","                type: boolean","              disabled:","                description: When disabled is true, Calico IPAM will not assign addresses","                  from this pool.","                type: boolean","              ipip:","                description: 'Deprecated: this field is only used for APIv1 backwards","                  compatibility. Setting this field is not allowed, this field is","                  for internal use only.'","                properties:","                  enabled:","                    description: When enabled is true, ipip tunneling will be used","                      to deliver packets to destinations within this pool.","                    type: boolean","                  mode:","                    description: The IPIP mode.  This can be one of \"always\" or \"cross-subnet\".  A","                      mode of \"always\" will also use IPIP tunneling for routing to","                      destination IP addresses within this pool.  A mode of \"cross-subnet\"","                      will only use IPIP tunneling when the destination node is on","                      a different subnet to the originating node.  The default value","                      (if not specified) is \"always\".","                    type: string","                type: object","              ipipMode:","                description: Contains configuration for IPIP tunneling for this pool.","                  If not specified, then this is defaulted to \"Never\" (i.e. IPIP tunneling","                  is disabled).","                type: string","              nat-outgoing:","                description: 'Deprecated: this field is only used for APIv1 backwards","                  compatibility. Setting this field is not allowed, this field is","                  for internal use only.'","                type: boolean","              natOutgoing:","                description: When natOutgoing is true, packets sent from Calico networked","                  containers in this pool to destinations outside of this pool will","                  be masqueraded.","                type: boolean","              nodeSelector:","                description: Allows IPPool to allocate for a specific node by label","                  selector.","                type: string","              vxlanMode:","                description: Contains configuration for VXLAN tunneling for this pool.","                  If not specified, then this is defaulted to \"Never\" (i.e. VXLAN","                  tunneling is disabled).","                type: string","            required:","            - cidr","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_ipreservations.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  annotations:","    controller-gen.kubebuilder.io/version: (devel)","  creationTimestamp: null","  name: ipreservations.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: IPReservation","    listKind: IPReservationList","    plural: ipreservations","    singular: ipreservation","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: IPReservationSpec contains the specification for an IPReservation","              resource.","            properties:","              reservedCIDRs:","                description: ReservedCIDRs is a list of CIDRs and/or IP addresses","                  that Calico IPAM will exclude from new allocations.","                items:","                  type: string","                type: array","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_kubecontrollersconfigurations.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: kubecontrollersconfigurations.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: KubeControllersConfiguration","    listKind: KubeControllersConfigurationList","    plural: kubecontrollersconfigurations","    singular: kubecontrollersconfiguration","  preserveUnknownFields: false","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: KubeControllersConfigurationSpec contains the values of the","              Kubernetes controllers configuration.","            properties:","              controllers:","                description: Controllers enables and configures individual Kubernetes","                  controllers","                properties:","                  namespace:","                    description: Namespace enables and configures the namespace controller.","                      Enabled by default, set to nil to disable.","                    properties:","                      reconcilerPeriod:","                        description: 'ReconcilerPeriod is the period to perform reconciliation","                          with the Calico datastore. [Default: 5m]'","                        type: string","                    type: object","                  node:","                    description: Node enables and configures the node controller.","                      Enabled by default, set to nil to disable.","                    properties:","                      hostEndpoint:","                        description: HostEndpoint controls syncing nodes to host endpoints.","                          Disabled by default, set to nil to disable.","                        properties:","                          autoCreate:","                            description: 'AutoCreate enables automatic creation of","                              host endpoints for every node. [Default: Disabled]'","                            type: string","                        type: object","                      leakGracePeriod:","                        description: 'LeakGracePeriod is the period used by the controller","                          to determine if an IP address has been leaked. Set to 0","                          to disable IP garbage collection. [Default: 15m]'","                        type: string","                      reconcilerPeriod:","                        description: 'ReconcilerPeriod is the period to perform reconciliation","                          with the Calico datastore. [Default: 5m]'","                        type: string","                      syncLabels:","                        description: 'SyncLabels controls whether to copy Kubernetes","                          node labels to Calico nodes. [Default: Enabled]'","                        type: string","                    type: object","                  policy:","                    description: Policy enables and configures the policy controller.","                      Enabled by default, set to nil to disable.","                    properties:","                      reconcilerPeriod:","                        description: 'ReconcilerPeriod is the period to perform reconciliation","                          with the Calico datastore. [Default: 5m]'","                        type: string","                    type: object","                  serviceAccount:","                    description: ServiceAccount enables and configures the service","                      account controller. Enabled by default, set to nil to disable.","                    properties:","                      reconcilerPeriod:","                        description: 'ReconcilerPeriod is the period to perform reconciliation","                          with the Calico datastore. [Default: 5m]'","                        type: string","                    type: object","                  workloadEndpoint:","                    description: WorkloadEndpoint enables and configures the workload","                      endpoint controller. Enabled by default, set to nil to disable.","                    properties:","                      reconcilerPeriod:","                        description: 'ReconcilerPeriod is the period to perform reconciliation","                          with the Calico datastore. [Default: 5m]'","                        type: string","                    type: object","                type: object","              debugProfilePort:","                description: DebugProfilePort configures the port to serve memory","                  and cpu profiles on. If not specified, profiling is disabled.","                format: int32","                type: integer","              etcdV3CompactionPeriod:","                description: 'EtcdV3CompactionPeriod is the period between etcdv3","                  compaction requests. Set to 0 to disable. [Default: 10m]'","                type: string","              healthChecks:","                description: 'HealthChecks enables or disables support for health","                  checks [Default: Enabled]'","                type: string","              logSeverityScreen:","                description: 'LogSeverityScreen is the log severity above which logs","                  are sent to the stdout. [Default: Info]'","                type: string","              prometheusMetricsPort:","                description: 'PrometheusMetricsPort is the TCP port that the Prometheus","                  metrics server should bind to. Set to 0 to disable. [Default: 9094]'","                type: integer","            required:","            - controllers","            type: object","          status:","            description: KubeControllersConfigurationStatus represents the status","              of the configuration. It's useful for admins to be able to see the actual","              config that was applied, which can be modified by environment variables","              on the kube-controllers process.","            properties:","              environmentVars:","                additionalProperties:","                  type: string","                description: EnvironmentVars contains the environment variables on","                  the kube-controllers that influenced the RunningConfig.","                type: object","              runningConfig:","                description: RunningConfig contains the effective config that is running","                  in the kube-controllers pod, after merging the API resource with","                  any environment variables.","                properties:","                  controllers:","                    description: Controllers enables and configures individual Kubernetes","                      controllers","                    properties:","                      namespace:","                        description: Namespace enables and configures the namespace","                          controller. Enabled by default, set to nil to disable.","                        properties:","                          reconcilerPeriod:","                            description: 'ReconcilerPeriod is the period to perform","                              reconciliation with the Calico datastore. [Default:","                              5m]'","                            type: string","                        type: object","                      node:","                        description: Node enables and configures the node controller.","                          Enabled by default, set to nil to disable.","                        properties:","                          hostEndpoint:","                            description: HostEndpoint controls syncing nodes to host","                              endpoints. Disabled by default, set to nil to disable.","                            properties:","                              autoCreate:","                                description: 'AutoCreate enables automatic creation","                                  of host endpoints for every node. [Default: Disabled]'","                                type: string","                            type: object","                          leakGracePeriod:","                            description: 'LeakGracePeriod is the period used by the","                              controller to determine if an IP address has been leaked.","                              Set to 0 to disable IP garbage collection. [Default:","                              15m]'","                            type: string","                          reconcilerPeriod:","                            description: 'ReconcilerPeriod is the period to perform","                              reconciliation with the Calico datastore. [Default:","                              5m]'","                            type: string","                          syncLabels:","                            description: 'SyncLabels controls whether to copy Kubernetes","                              node labels to Calico nodes. [Default: Enabled]'","                            type: string","                        type: object","                      policy:","                        description: Policy enables and configures the policy controller.","                          Enabled by default, set to nil to disable.","                        properties:","                          reconcilerPeriod:","                            description: 'ReconcilerPeriod is the period to perform","                              reconciliation with the Calico datastore. [Default:","                              5m]'","                            type: string","                        type: object","                      serviceAccount:","                        description: ServiceAccount enables and configures the service","                          account controller. Enabled by default, set to nil to disable.","                        properties:","                          reconcilerPeriod:","                            description: 'ReconcilerPeriod is the period to perform","                              reconciliation with the Calico datastore. [Default:","                              5m]'","                            type: string","                        type: object","                      workloadEndpoint:","                        description: WorkloadEndpoint enables and configures the workload","                          endpoint controller. Enabled by default, set to nil to disable.","                        properties:","                          reconcilerPeriod:","                            description: 'ReconcilerPeriod is the period to perform","                              reconciliation with the Calico datastore. [Default:","                              5m]'","                            type: string","                        type: object","                    type: object","                  debugProfilePort:","                    description: DebugProfilePort configures the port to serve memory","                      and cpu profiles on. If not specified, profiling is disabled.","                    format: int32","                    type: integer","                  etcdV3CompactionPeriod:","                    description: 'EtcdV3CompactionPeriod is the period between etcdv3","                      compaction requests. Set to 0 to disable. [Default: 10m]'","                    type: string","                  healthChecks:","                    description: 'HealthChecks enables or disables support for health","                      checks [Default: Enabled]'","                    type: string","                  logSeverityScreen:","                    description: 'LogSeverityScreen is the log severity above which","                      logs are sent to the stdout. [Default: Info]'","                    type: string","                  prometheusMetricsPort:","                    description: 'PrometheusMetricsPort is the TCP port that the Prometheus","                      metrics server should bind to. Set to 0 to disable. [Default:","                      9094]'","                    type: integer","                required:","                - controllers","                type: object","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_networkpolicies.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: networkpolicies.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: NetworkPolicy","    listKind: NetworkPolicyList","    plural: networkpolicies","    singular: networkpolicy","  preserveUnknownFields: false","  scope: Namespaced","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            properties:","              egress:","                description: The ordered set of egress rules.  Each rule contains","                  a set of packet match criteria and a corresponding action to apply.","                items:","                  description: \"A Rule encapsulates a set of match criteria and an","                    action.  Both selector-based security Policy and security Profiles","                    reference rules - separated out as a list of rules for both ingress","                    and egress packet matching. \\n Each positive match criteria has","                    a negated version, prefixed with \\\"Not\\\". All the match criteria","                    within a rule must be satisfied for a packet to match. A single","                    rule can contain the positive and negative version of a match","                    and both must be satisfied for the rule to match.\"","                  properties:","                    action:","                      type: string","                    destination:","                      description: Destination contains the match criteria that apply","                        to destination entity.","                      properties:","                        namespaceSelector:","                          description: \"NamespaceSelector is an optional field that","                            contains a selector expression. Only traffic that originates","                            from (or terminates at) endpoints within the selected","                            namespaces will be matched. When both NamespaceSelector","                            and another selector are defined on the same rule, then","                            only workload endpoints that are matched by both selectors","                            will be selected by the rule. \\n For NetworkPolicy, an","                            empty NamespaceSelector implies that the Selector is limited","                            to selecting only workload endpoints in the same namespace","                            as the NetworkPolicy. \\n For NetworkPolicy, `global()`","                            NamespaceSelector implies that the Selector is limited","                            to selecting only GlobalNetworkSet or HostEndpoint. \\n","                            For GlobalNetworkPolicy, an empty NamespaceSelector implies","                            the Selector applies to workload endpoints across all","                            namespaces.\"","                          type: string","                        nets:","                          description: Nets is an optional field that restricts the","                            rule to only apply to traffic that originates from (or","                            terminates at) IP addresses in any of the given subnets.","                          items:","                            type: string","                          type: array","                        notNets:","                          description: NotNets is the negated version of the Nets","                            field.","                          items:","                            type: string","                          type: array","                        notPorts:","                          description: NotPorts is the negated version of the Ports","                            field. Since only some protocols have ports, if any ports","                            are specified it requires the Protocol match in the Rule","                            to be set to \"TCP\" or \"UDP\".","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        notSelector:","                          description: NotSelector is the negated version of the Selector","                            field.  See Selector field for subtleties with negated","                            selectors.","                          type: string","                        ports:","                          description: \"Ports is an optional field that restricts","                            the rule to only apply to traffic that has a source (destination)","                            port that matches one of these ranges/values. This value","                            is a list of integers or strings that represent ranges","                            of ports. \\n Since only some protocols have ports, if","                            any ports are specified it requires the Protocol match","                            in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        selector:","                          description: \"Selector is an optional field that contains","                            a selector expression (see Policy for sample syntax).","                            \\ Only traffic that originates from (terminates at) endpoints","                            matching the selector will be matched. \\n Note that: in","                            addition to the negated version of the Selector (see NotSelector","                            below), the selector expression syntax itself supports","                            negation.  The two types of negation are subtly different.","                            One negates the set of matched endpoints, the other negates","                            the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches","                            packets that are from other Calico-controlled \\tendpoints","                            that do not have the label \\\"my_label\\\". \\n \\tNotSelector","                            = \\\"has(my_label)\\\" matches packets that are not from","                            Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".","                            \\n The effect is that the latter will accept packets from","                            non-Calico sources whereas the former is limited to packets","                            from Calico-controlled endpoints.\"","                          type: string","                        serviceAccounts:","                          description: ServiceAccounts is an optional field that restricts","                            the rule to only apply to traffic that originates from","                            (or terminates at) a pod running as a matching service","                            account.","                          properties:","                            names:","                              description: Names is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account whose name is in the list.","                              items:","                                type: string","                              type: array","                            selector:","                              description: Selector is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account that matches the given label selector. If","                                both Names and Selector are specified then they are","                                AND'ed.","                              type: string","                          type: object","                        services:","                          description: \"Services is an optional field that contains","                            options for matching Kubernetes Services. If specified,","                            only traffic that originates from or terminates at endpoints","                            within the selected service(s) will be matched, and only","                            to/from each endpoint's port. \\n Services cannot be specified","                            on the same rule as Selector, NotSelector, NamespaceSelector,","                            Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts","                            can only be specified with Services on ingress rules.\"","                          properties:","                            name:","                              description: Name specifies the name of a Kubernetes","                                Service to match.","                              type: string","                            namespace:","                              description: Namespace specifies the namespace of the","                                given Service. If left empty, the rule will match","                                within this policy's namespace.","                              type: string","                          type: object","                      type: object","                    http:","                      description: HTTP contains match criteria that apply to HTTP","                        requests.","                      properties:","                        methods:","                          description: Methods is an optional field that restricts","                            the rule to apply only to HTTP requests that use one of","                            the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple","                            methods are OR'd together.","                          items:","                            type: string","                          type: array","                        paths:","                          description: 'Paths is an optional field that restricts","                            the rule to apply to HTTP requests that use one of the","                            listed HTTP Paths. Multiple paths are OR''d together.","                            e.g: - exact: /foo - prefix: /bar NOTE: Each entry may","                            ONLY specify either a `exact` or a `prefix` match. The","                            validator will check for it.'","                          items:","                            description: 'HTTPPath specifies an HTTP path to match.","                              It may be either of the form: exact: \u003cpath\u003e: which matches","                              the path exactly or prefix: \u003cpath-prefix\u003e: which matches","                              the path prefix'","                            properties:","                              exact:","                                type: string","                              prefix:","                                type: string","                            type: object","                          type: array","                      type: object","                    icmp:","                      description: ICMP is an optional field that restricts the rule","                        to apply to a specific type and code of ICMP traffic.  This","                        should only be specified if the Protocol field is set to \"ICMP\"","                        or \"ICMPv6\".","                      properties:","                        code:","                          description: Match on a specific ICMP code.  If specified,","                            the Type value must also be specified. This is a technical","                            limitation imposed by the kernel's iptables firewall,","                            which Calico uses to enforce the rule.","                          type: integer","                        type:","                          description: Match on a specific ICMP type.  For example","                            a value of 8 refers to ICMP Echo Request (i.e. pings).","                          type: integer","                      type: object","                    ipVersion:","                      description: IPVersion is an optional field that restricts the","                        rule to only match a specific IP version.","                      type: integer","                    metadata:","                      description: Metadata contains additional information for this","                        rule","                      properties:","                        annotations:","                          additionalProperties:","                            type: string","                          description: Annotations is a set of key value pairs that","                            give extra information about the rule","                          type: object","                      type: object","                    notICMP:","                      description: NotICMP is the negated version of the ICMP field.","                      properties:","                        code:","                          description: Match on a specific ICMP code.  If specified,","                            the Type value must also be specified. This is a technical","                            limitation imposed by the kernel's iptables firewall,","                            which Calico uses to enforce the rule.","                          type: integer","                        type:","                          description: Match on a specific ICMP type.  For example","                            a value of 8 refers to ICMP Echo Request (i.e. pings).","                          type: integer","                      type: object","                    notProtocol:","                      anyOf:","                      - type: integer","                      - type: string","                      description: NotProtocol is the negated version of the Protocol","                        field.","                      pattern: ^.*","                      x-kubernetes-int-or-string: true","                    protocol:","                      anyOf:","                      - type: integer","                      - type: string","                      description: \"Protocol is an optional field that restricts the","                        rule to only apply to traffic of a specific IP protocol. Required","                        if any of the EntityRules contain Ports (because ports only","                        apply to certain protocols). \\n Must be one of these string","                        values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\",","                        \\\"UDPLite\\\" or an integer in the range 1-255.\"","                      pattern: ^.*","                      x-kubernetes-int-or-string: true","                    source:","                      description: Source contains the match criteria that apply to","                        source entity.","                      properties:","                        namespaceSelector:","                          description: \"NamespaceSelector is an optional field that","                            contains a selector expression. Only traffic that originates","                            from (or terminates at) endpoints within the selected","                            namespaces will be matched. When both NamespaceSelector","                            and another selector are defined on the same rule, then","                            only workload endpoints that are matched by both selectors","                            will be selected by the rule. \\n For NetworkPolicy, an","                            empty NamespaceSelector implies that the Selector is limited","                            to selecting only workload endpoints in the same namespace","                            as the NetworkPolicy. \\n For NetworkPolicy, `global()`","                            NamespaceSelector implies that the Selector is limited","                            to selecting only GlobalNetworkSet or HostEndpoint. \\n","                            For GlobalNetworkPolicy, an empty NamespaceSelector implies","                            the Selector applies to workload endpoints across all","                            namespaces.\"","                          type: string","                        nets:","                          description: Nets is an optional field that restricts the","                            rule to only apply to traffic that originates from (or","                            terminates at) IP addresses in any of the given subnets.","                          items:","                            type: string","                          type: array","                        notNets:","                          description: NotNets is the negated version of the Nets","                            field.","                          items:","                            type: string","                          type: array","                        notPorts:","                          description: NotPorts is the negated version of the Ports","                            field. Since only some protocols have ports, if any ports","                            are specified it requires the Protocol match in the Rule","                            to be set to \"TCP\" or \"UDP\".","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        notSelector:","                          description: NotSelector is the negated version of the Selector","                            field.  See Selector field for subtleties with negated","                            selectors.","                          type: string","                        ports:","                          description: \"Ports is an optional field that restricts","                            the rule to only apply to traffic that has a source (destination)","                            port that matches one of these ranges/values. This value","                            is a list of integers or strings that represent ranges","                            of ports. \\n Since only some protocols have ports, if","                            any ports are specified it requires the Protocol match","                            in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        selector:","                          description: \"Selector is an optional field that contains","                            a selector expression (see Policy for sample syntax).","                            \\ Only traffic that originates from (terminates at) endpoints","                            matching the selector will be matched. \\n Note that: in","                            addition to the negated version of the Selector (see NotSelector","                            below), the selector expression syntax itself supports","                            negation.  The two types of negation are subtly different.","                            One negates the set of matched endpoints, the other negates","                            the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches","                            packets that are from other Calico-controlled \\tendpoints","                            that do not have the label \\\"my_label\\\". \\n \\tNotSelector","                            = \\\"has(my_label)\\\" matches packets that are not from","                            Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".","                            \\n The effect is that the latter will accept packets from","                            non-Calico sources whereas the former is limited to packets","                            from Calico-controlled endpoints.\"","                          type: string","                        serviceAccounts:","                          description: ServiceAccounts is an optional field that restricts","                            the rule to only apply to traffic that originates from","                            (or terminates at) a pod running as a matching service","                            account.","                          properties:","                            names:","                              description: Names is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account whose name is in the list.","                              items:","                                type: string","                              type: array","                            selector:","                              description: Selector is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account that matches the given label selector. If","                                both Names and Selector are specified then they are","                                AND'ed.","                              type: string","                          type: object","                        services:","                          description: \"Services is an optional field that contains","                            options for matching Kubernetes Services. If specified,","                            only traffic that originates from or terminates at endpoints","                            within the selected service(s) will be matched, and only","                            to/from each endpoint's port. \\n Services cannot be specified","                            on the same rule as Selector, NotSelector, NamespaceSelector,","                            Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts","                            can only be specified with Services on ingress rules.\"","                          properties:","                            name:","                              description: Name specifies the name of a Kubernetes","                                Service to match.","                              type: string","                            namespace:","                              description: Namespace specifies the namespace of the","                                given Service. If left empty, the rule will match","                                within this policy's namespace.","                              type: string","                          type: object","                      type: object","                  required:","                  - action","                  type: object","                type: array","              ingress:","                description: The ordered set of ingress rules.  Each rule contains","                  a set of packet match criteria and a corresponding action to apply.","                items:","                  description: \"A Rule encapsulates a set of match criteria and an","                    action.  Both selector-based security Policy and security Profiles","                    reference rules - separated out as a list of rules for both ingress","                    and egress packet matching. \\n Each positive match criteria has","                    a negated version, prefixed with \\\"Not\\\". All the match criteria","                    within a rule must be satisfied for a packet to match. A single","                    rule can contain the positive and negative version of a match","                    and both must be satisfied for the rule to match.\"","                  properties:","                    action:","                      type: string","                    destination:","                      description: Destination contains the match criteria that apply","                        to destination entity.","                      properties:","                        namespaceSelector:","                          description: \"NamespaceSelector is an optional field that","                            contains a selector expression. Only traffic that originates","                            from (or terminates at) endpoints within the selected","                            namespaces will be matched. When both NamespaceSelector","                            and another selector are defined on the same rule, then","                            only workload endpoints that are matched by both selectors","                            will be selected by the rule. \\n For NetworkPolicy, an","                            empty NamespaceSelector implies that the Selector is limited","                            to selecting only workload endpoints in the same namespace","                            as the NetworkPolicy. \\n For NetworkPolicy, `global()`","                            NamespaceSelector implies that the Selector is limited","                            to selecting only GlobalNetworkSet or HostEndpoint. \\n","                            For GlobalNetworkPolicy, an empty NamespaceSelector implies","                            the Selector applies to workload endpoints across all","                            namespaces.\"","                          type: string","                        nets:","                          description: Nets is an optional field that restricts the","                            rule to only apply to traffic that originates from (or","                            terminates at) IP addresses in any of the given subnets.","                          items:","                            type: string","                          type: array","                        notNets:","                          description: NotNets is the negated version of the Nets","                            field.","                          items:","                            type: string","                          type: array","                        notPorts:","                          description: NotPorts is the negated version of the Ports","                            field. Since only some protocols have ports, if any ports","                            are specified it requires the Protocol match in the Rule","                            to be set to \"TCP\" or \"UDP\".","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        notSelector:","                          description: NotSelector is the negated version of the Selector","                            field.  See Selector field for subtleties with negated","                            selectors.","                          type: string","                        ports:","                          description: \"Ports is an optional field that restricts","                            the rule to only apply to traffic that has a source (destination)","                            port that matches one of these ranges/values. This value","                            is a list of integers or strings that represent ranges","                            of ports. \\n Since only some protocols have ports, if","                            any ports are specified it requires the Protocol match","                            in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        selector:","                          description: \"Selector is an optional field that contains","                            a selector expression (see Policy for sample syntax).","                            \\ Only traffic that originates from (terminates at) endpoints","                            matching the selector will be matched. \\n Note that: in","                            addition to the negated version of the Selector (see NotSelector","                            below), the selector expression syntax itself supports","                            negation.  The two types of negation are subtly different.","                            One negates the set of matched endpoints, the other negates","                            the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches","                            packets that are from other Calico-controlled \\tendpoints","                            that do not have the label \\\"my_label\\\". \\n \\tNotSelector","                            = \\\"has(my_label)\\\" matches packets that are not from","                            Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".","                            \\n The effect is that the latter will accept packets from","                            non-Calico sources whereas the former is limited to packets","                            from Calico-controlled endpoints.\"","                          type: string","                        serviceAccounts:","                          description: ServiceAccounts is an optional field that restricts","                            the rule to only apply to traffic that originates from","                            (or terminates at) a pod running as a matching service","                            account.","                          properties:","                            names:","                              description: Names is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account whose name is in the list.","                              items:","                                type: string","                              type: array","                            selector:","                              description: Selector is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account that matches the given label selector. If","                                both Names and Selector are specified then they are","                                AND'ed.","                              type: string","                          type: object","                        services:","                          description: \"Services is an optional field that contains","                            options for matching Kubernetes Services. If specified,","                            only traffic that originates from or terminates at endpoints","                            within the selected service(s) will be matched, and only","                            to/from each endpoint's port. \\n Services cannot be specified","                            on the same rule as Selector, NotSelector, NamespaceSelector,","                            Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts","                            can only be specified with Services on ingress rules.\"","                          properties:","                            name:","                              description: Name specifies the name of a Kubernetes","                                Service to match.","                              type: string","                            namespace:","                              description: Namespace specifies the namespace of the","                                given Service. If left empty, the rule will match","                                within this policy's namespace.","                              type: string","                          type: object","                      type: object","                    http:","                      description: HTTP contains match criteria that apply to HTTP","                        requests.","                      properties:","                        methods:","                          description: Methods is an optional field that restricts","                            the rule to apply only to HTTP requests that use one of","                            the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple","                            methods are OR'd together.","                          items:","                            type: string","                          type: array","                        paths:","                          description: 'Paths is an optional field that restricts","                            the rule to apply to HTTP requests that use one of the","                            listed HTTP Paths. Multiple paths are OR''d together.","                            e.g: - exact: /foo - prefix: /bar NOTE: Each entry may","                            ONLY specify either a `exact` or a `prefix` match. The","                            validator will check for it.'","                          items:","                            description: 'HTTPPath specifies an HTTP path to match.","                              It may be either of the form: exact: \u003cpath\u003e: which matches","                              the path exactly or prefix: \u003cpath-prefix\u003e: which matches","                              the path prefix'","                            properties:","                              exact:","                                type: string","                              prefix:","                                type: string","                            type: object","                          type: array","                      type: object","                    icmp:","                      description: ICMP is an optional field that restricts the rule","                        to apply to a specific type and code of ICMP traffic.  This","                        should only be specified if the Protocol field is set to \"ICMP\"","                        or \"ICMPv6\".","                      properties:","                        code:","                          description: Match on a specific ICMP code.  If specified,","                            the Type value must also be specified. This is a technical","                            limitation imposed by the kernel's iptables firewall,","                            which Calico uses to enforce the rule.","                          type: integer","                        type:","                          description: Match on a specific ICMP type.  For example","                            a value of 8 refers to ICMP Echo Request (i.e. pings).","                          type: integer","                      type: object","                    ipVersion:","                      description: IPVersion is an optional field that restricts the","                        rule to only match a specific IP version.","                      type: integer","                    metadata:","                      description: Metadata contains additional information for this","                        rule","                      properties:","                        annotations:","                          additionalProperties:","                            type: string","                          description: Annotations is a set of key value pairs that","                            give extra information about the rule","                          type: object","                      type: object","                    notICMP:","                      description: NotICMP is the negated version of the ICMP field.","                      properties:","                        code:","                          description: Match on a specific ICMP code.  If specified,","                            the Type value must also be specified. This is a technical","                            limitation imposed by the kernel's iptables firewall,","                            which Calico uses to enforce the rule.","                          type: integer","                        type:","                          description: Match on a specific ICMP type.  For example","                            a value of 8 refers to ICMP Echo Request (i.e. pings).","                          type: integer","                      type: object","                    notProtocol:","                      anyOf:","                      - type: integer","                      - type: string","                      description: NotProtocol is the negated version of the Protocol","                        field.","                      pattern: ^.*","                      x-kubernetes-int-or-string: true","                    protocol:","                      anyOf:","                      - type: integer","                      - type: string","                      description: \"Protocol is an optional field that restricts the","                        rule to only apply to traffic of a specific IP protocol. Required","                        if any of the EntityRules contain Ports (because ports only","                        apply to certain protocols). \\n Must be one of these string","                        values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\",","                        \\\"UDPLite\\\" or an integer in the range 1-255.\"","                      pattern: ^.*","                      x-kubernetes-int-or-string: true","                    source:","                      description: Source contains the match criteria that apply to","                        source entity.","                      properties:","                        namespaceSelector:","                          description: \"NamespaceSelector is an optional field that","                            contains a selector expression. Only traffic that originates","                            from (or terminates at) endpoints within the selected","                            namespaces will be matched. When both NamespaceSelector","                            and another selector are defined on the same rule, then","                            only workload endpoints that are matched by both selectors","                            will be selected by the rule. \\n For NetworkPolicy, an","                            empty NamespaceSelector implies that the Selector is limited","                            to selecting only workload endpoints in the same namespace","                            as the NetworkPolicy. \\n For NetworkPolicy, `global()`","                            NamespaceSelector implies that the Selector is limited","                            to selecting only GlobalNetworkSet or HostEndpoint. \\n","                            For GlobalNetworkPolicy, an empty NamespaceSelector implies","                            the Selector applies to workload endpoints across all","                            namespaces.\"","                          type: string","                        nets:","                          description: Nets is an optional field that restricts the","                            rule to only apply to traffic that originates from (or","                            terminates at) IP addresses in any of the given subnets.","                          items:","                            type: string","                          type: array","                        notNets:","                          description: NotNets is the negated version of the Nets","                            field.","                          items:","                            type: string","                          type: array","                        notPorts:","                          description: NotPorts is the negated version of the Ports","                            field. Since only some protocols have ports, if any ports","                            are specified it requires the Protocol match in the Rule","                            to be set to \"TCP\" or \"UDP\".","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        notSelector:","                          description: NotSelector is the negated version of the Selector","                            field.  See Selector field for subtleties with negated","                            selectors.","                          type: string","                        ports:","                          description: \"Ports is an optional field that restricts","                            the rule to only apply to traffic that has a source (destination)","                            port that matches one of these ranges/values. This value","                            is a list of integers or strings that represent ranges","                            of ports. \\n Since only some protocols have ports, if","                            any ports are specified it requires the Protocol match","                            in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"","                          items:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^.*","                            x-kubernetes-int-or-string: true","                          type: array","                        selector:","                          description: \"Selector is an optional field that contains","                            a selector expression (see Policy for sample syntax).","                            \\ Only traffic that originates from (terminates at) endpoints","                            matching the selector will be matched. \\n Note that: in","                            addition to the negated version of the Selector (see NotSelector","                            below), the selector expression syntax itself supports","                            negation.  The two types of negation are subtly different.","                            One negates the set of matched endpoints, the other negates","                            the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches","                            packets that are from other Calico-controlled \\tendpoints","                            that do not have the label \\\"my_label\\\". \\n \\tNotSelector","                            = \\\"has(my_label)\\\" matches packets that are not from","                            Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".","                            \\n The effect is that the latter will accept packets from","                            non-Calico sources whereas the former is limited to packets","                            from Calico-controlled endpoints.\"","                          type: string","                        serviceAccounts:","                          description: ServiceAccounts is an optional field that restricts","                            the rule to only apply to traffic that originates from","                            (or terminates at) a pod running as a matching service","                            account.","                          properties:","                            names:","                              description: Names is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account whose name is in the list.","                              items:","                                type: string","                              type: array","                            selector:","                              description: Selector is an optional field that restricts","                                the rule to only apply to traffic that originates","                                from (or terminates at) a pod running as a service","                                account that matches the given label selector. If","                                both Names and Selector are specified then they are","                                AND'ed.","                              type: string","                          type: object","                        services:","                          description: \"Services is an optional field that contains","                            options for matching Kubernetes Services. If specified,","                            only traffic that originates from or terminates at endpoints","                            within the selected service(s) will be matched, and only","                            to/from each endpoint's port. \\n Services cannot be specified","                            on the same rule as Selector, NotSelector, NamespaceSelector,","                            Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts","                            can only be specified with Services on ingress rules.\"","                          properties:","                            name:","                              description: Name specifies the name of a Kubernetes","                                Service to match.","                              type: string","                            namespace:","                              description: Namespace specifies the namespace of the","                                given Service. If left empty, the rule will match","                                within this policy's namespace.","                              type: string","                          type: object","                      type: object","                  required:","                  - action","                  type: object","                type: array","              order:","                description: Order is an optional field that specifies the order in","                  which the policy is applied. Policies with higher \"order\" are applied","                  after those with lower order.  If the order is omitted, it may be","                  considered to be \"infinite\" - i.e. the policy will be applied last.  Policies","                  with identical order will be applied in alphanumerical order based","                  on the Policy \"Name\".","                type: number","              selector:","                description: \"The selector is an expression used to pick pick out","                  the endpoints that the policy should be applied to. \\n Selector","                  expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"","                  \\ -\u003e  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"","                  \\  -\u003e  not equal; also matches if label is not present \\tlabel in","                  { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -\u003e  true if the value of label X is","                  one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\",","                  ... }  -\u003e  true if the value of label X is not one of \\\"a\\\", \\\"b\\\",","                  \\\"c\\\" \\thas(label_name)  -\u003e True if that label is present \\t! expr","                  -\u003e negation of expr \\texpr \u0026\u0026 expr  -\u003e Short-circuit and \\texpr","                  || expr  -\u003e Short-circuit or \\t( expr ) -\u003e parens for grouping \\tall()","                  or the empty selector -\u003e matches all endpoints. \\n Label names are","                  allowed to contain alphanumerics, -, _ and /. String literals are","                  more permissive but they do not support escape characters. \\n Examples","                  (with made-up labels): \\n \\ttype == \\\"webserver\\\" \u0026\u0026 deployment","                  == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment !=","                  \\\"dev\\\" \\t! has(label_name)\"","                type: string","              serviceAccountSelector:","                description: ServiceAccountSelector is an optional field for an expression","                  used to select a pod based on service accounts.","                type: string","              types:","                description: \"Types indicates whether this policy applies to ingress,","                  or to egress, or to both.  When not explicitly specified (and so","                  the value on creation is empty or nil), Calico defaults Types according","                  to what Ingress and Egress are present in the policy.  The default","                  is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including","                  the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress","                  ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress,","                  PolicyTypeEgress ], if there are both Ingress and Egress rules.","                  \\n When the policy is read back again, Types will always be one","                  of these values, never empty or nil.\"","                items:","                  description: PolicyType enumerates the possible values of the PolicySpec","                    Types field.","                  type: string","                type: array","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/calico/crd.projectcalico.org_networksets.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  name: networksets.crd.projectcalico.org","spec:","  group: crd.projectcalico.org","  names:","    kind: NetworkSet","    listKind: NetworkSetList","    plural: networksets","    singular: networkset","  preserveUnknownFields: false","  scope: Namespaced","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        description: NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: NetworkSetSpec contains the specification for a NetworkSet","              resource.","            properties:","              nets:","                description: The list of IP networks that belong to this set.","                items:","                  type: string","                type: array","            type: object","        type: object","    served: true","    storage: true","status:","  acceptedNames:","    kind: \"\"","    plural: \"\"","  conditions: []","  storedVersions: []","","---","# Source: crds/operator.tigera.io_apiservers_crd.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  annotations:","    controller-gen.kubebuilder.io/version: v0.11.3","  name: apiservers.operator.tigera.io","spec:","  group: operator.tigera.io","  names:","    kind: APIServer","    listKind: APIServerList","    plural: apiservers","    singular: apiserver","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        description: APIServer installs the Tigera API server and related resources.","          At most one instance of this resource is supported. It must be named \"default\"","          or \"tigera-secure\".","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: Specification of the desired state for the Tigera API server.","            properties:","              apiServerDeployment:","                description: APIServerDeployment configures the calico-apiserver (or","                  tigera-apiserver in Enterprise) Deployment. If used in conjunction","                  with ControlPlaneNodeSelector or ControlPlaneTolerations, then these","                  overrides take precedence.","                properties:","                  metadata:","                    description: Metadata is a subset of a Kubernetes object's metadata","                      that is added to the Deployment.","                    properties:","                      annotations:","                        additionalProperties:","                          type: string","                        description: Annotations is a map of arbitrary non-identifying","                          metadata. Each of these key/value pairs are added to the","                          object's annotations provided the key does not already exist","                          in the object's annotations.","                        type: object","                      labels:","                        additionalProperties:","                          type: string","                        description: Labels is a map of string keys and values that","                          may match replicaset and service selectors. Each of these","                          key/value pairs are added to the object's labels provided","                          the key does not already exist in the object's labels.","                        type: object","                    type: object","                  spec:","                    description: Spec is the specification of the API server Deployment.","                    properties:","                      minReadySeconds:","                        description: MinReadySeconds is the minimum number of seconds","                          for which a newly created Deployment pod should be ready","                          without any of its container crashing, for it to be considered","                          available. If specified, this overrides any minReadySeconds","                          value that may be set on the API server Deployment. If omitted,","                          the API server Deployment will use its default value for","                          minReadySeconds.","                        format: int32","                        maximum: 2147483647","                        minimum: 0","                        type: integer","                      template:","                        description: Template describes the API server Deployment","                          pod that will be created.","                        properties:","                          metadata:","                            description: Metadata is a subset of a Kubernetes object's","                              metadata that is added to the pod's metadata.","                            properties:","                              annotations:","                                additionalProperties:","                                  type: string","                                description: Annotations is a map of arbitrary non-identifying","                                  metadata. Each of these key/value pairs are added","                                  to the object's annotations provided the key does","                                  not already exist in the object's annotations.","                                type: object","                              labels:","                                additionalProperties:","                                  type: string","                                description: Labels is a map of string keys and values","                                  that may match replicaset and service selectors.","                                  Each of these key/value pairs are added to the object's","                                  labels provided the key does not already exist in","                                  the object's labels.","                                type: object","                            type: object","                          spec:","                            description: Spec is the API server Deployment's PodSpec.","                            properties:","                              affinity:","                                description: 'Affinity is a group of affinity scheduling","                                  rules for the API server pods. If specified, this","                                  overrides any affinity that may be set on the API","                                  server Deployment. If omitted, the API server Deployment","                                  will use its default value for affinity. WARNING:","                                  Please note that this field will override the default","                                  API server Deployment affinity.'","                                properties:","                                  nodeAffinity:","                                    description: Describes node affinity scheduling","                                      rules for the pod.","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node matches the corresponding matchExpressions;","                                          the node(s) with the highest sum are the","                                          most preferred.","                                        items:","                                          description: An empty preferred scheduling","                                            term matches all objects with implicit","                                            weight 0 (i.e. it's a no-op). A null preferred","                                            scheduling term matches no objects (i.e.","                                            is also a no-op).","                                          properties:","                                            preference:","                                              description: A node selector term, associated","                                                with the corresponding weight.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            weight:","                                              description: Weight associated with","                                                matching the corresponding nodeSelectorTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - preference","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to an update),","                                          the system may or may not try to eventually","                                          evict the pod from its node.","                                        properties:","                                          nodeSelectorTerms:","                                            description: Required. A list of node","                                              selector terms. The terms are ORed.","                                            items:","                                              description: A null or empty node selector","                                                term matches no objects. The requirements","                                                of them are ANDed. The TopologySelectorTerm","                                                type implements a subset of the NodeSelectorTerm.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            type: array","                                        required:","                                        - nodeSelectorTerms","                                        type: object","                                        x-kubernetes-map-type: atomic","                                    type: object","                                  podAffinity:","                                    description: Describes pod affinity scheduling","                                      rules (e.g. co-locate this pod in the same node,","                                      zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node has pods which matches the corresponding","                                          podAffinityTerm; the node(s) with the highest","                                          sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to a pod","                                          label update), the system may or may not","                                          try to eventually evict the pod from its","                                          node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                  podAntiAffinity:","                                    description: Describes pod anti-affinity scheduling","                                      rules (e.g. avoid putting this pod in the same","                                      node, zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          anti-affinity expressions specified by this","                                          field, but it may choose a node that violates","                                          one or more of the expressions. The node","                                          that is most preferred is the one with the","                                          greatest sum of weights, i.e. for each node","                                          that meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          anti-affinity expressions, etc.), compute","                                          a sum by iterating through the elements","                                          of this field and adding \"weight\" to the","                                          sum if the node has pods which matches the","                                          corresponding podAffinityTerm; the node(s)","                                          with the highest sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the anti-affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the anti-affinity requirements","                                          specified by this field cease to be met","                                          at some point during pod execution (e.g.","                                          due to a pod label update), the system may","                                          or may not try to eventually evict the pod","                                          from its node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                type: object","                              containers:","                                description: Containers is a list of API server containers.","                                  If specified, this overrides the specified API server","                                  Deployment containers. If omitted, the API server","                                  Deployment will use its default values for its containers.","                                items:","                                  description: APIServerDeploymentContainer is an","                                    API server Deployment container.","                                  properties:","                                    name:","                                      description: Name is an enum which identifies","                                        the API server Deployment container by name.","                                      enum:","                                      - calico-apiserver","                                      - tigera-queryserver","                                      type: string","                                    resources:","                                      description: Resources allows customization","                                        of limits and requests for compute resources","                                        such as cpu and memory. If specified, this","                                        overrides the named API server Deployment","                                        container's resources. If omitted, the API","                                        server Deployment will use its default value","                                        for this container's resources. If used in","                                        conjunction with the deprecated ComponentResources,","                                        then this value takes precedence.","                                      properties:","                                        claims:","                                          description: \"Claims lists the names of","                                            resources, defined in spec.resourceClaims,","                                            that are used by this container. \\n This","                                            is an alpha field and requires enabling","                                            the DynamicResourceAllocation feature","                                            gate. \\n This field is immutable. It can","                                            only be set for containers.\"","                                          items:","                                            description: ResourceClaim references","                                              one entry in PodSpec.ResourceClaims.","                                            properties:","                                              name:","                                                description: Name must match the name","                                                  of one entry in pod.spec.resourceClaims","                                                  of the Pod where this field is used.","                                                  It makes that resource available","                                                  inside a container.","                                                type: string","                                            required:","                                            - name","                                            type: object","                                          type: array","                                          x-kubernetes-list-map-keys:","                                          - name","                                          x-kubernetes-list-type: map","                                        limits:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Limits describes the maximum","                                            amount of compute resources allowed. More","                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                        requests:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Requests describes the minimum","                                            amount of compute resources required.","                                            If Requests is omitted for a container,","                                            it defaults to Limits if that is explicitly","                                            specified, otherwise to an implementation-defined","                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                      type: object","                                  required:","                                  - name","                                  type: object","                                type: array","                              initContainers:","                                description: InitContainers is a list of API server","                                  init containers. If specified, this overrides the","                                  specified API server Deployment init containers.","                                  If omitted, the API server Deployment will use its","                                  default values for its init containers.","                                items:","                                  description: APIServerDeploymentInitContainer is","                                    an API server Deployment init container.","                                  properties:","                                    name:","                                      description: Name is an enum which identifies","                                        the API server Deployment init container by","                                        name.","                                      enum:","                                      - calico-apiserver-certs-key-cert-provisioner","                                      type: string","                                    resources:","                                      description: Resources allows customization","                                        of limits and requests for compute resources","                                        such as cpu and memory. If specified, this","                                        overrides the named API server Deployment","                                        init container's resources. If omitted, the","                                        API server Deployment will use its default","                                        value for this init container's resources.","                                      properties:","                                        claims:","                                          description: \"Claims lists the names of","                                            resources, defined in spec.resourceClaims,","                                            that are used by this container. \\n This","                                            is an alpha field and requires enabling","                                            the DynamicResourceAllocation feature","                                            gate. \\n This field is immutable. It can","                                            only be set for containers.\"","                                          items:","                                            description: ResourceClaim references","                                              one entry in PodSpec.ResourceClaims.","                                            properties:","                                              name:","                                                description: Name must match the name","                                                  of one entry in pod.spec.resourceClaims","                                                  of the Pod where this field is used.","                                                  It makes that resource available","                                                  inside a container.","                                                type: string","                                            required:","                                            - name","                                            type: object","                                          type: array","                                          x-kubernetes-list-map-keys:","                                          - name","                                          x-kubernetes-list-type: map","                                        limits:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Limits describes the maximum","                                            amount of compute resources allowed. More","                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                        requests:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Requests describes the minimum","                                            amount of compute resources required.","                                            If Requests is omitted for a container,","                                            it defaults to Limits if that is explicitly","                                            specified, otherwise to an implementation-defined","                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                      type: object","                                  required:","                                  - name","                                  type: object","                                type: array","                              nodeSelector:","                                additionalProperties:","                                  type: string","                                description: 'NodeSelector is the API server pod''s","                                  scheduling constraints. If specified, each of the","                                  key/value pairs are added to the API server Deployment","                                  nodeSelector provided the key does not already exist","                                  in the object''s nodeSelector. If used in conjunction","                                  with ControlPlaneNodeSelector, that nodeSelector","                                  is set on the API server Deployment and each of","                                  this field''s key/value pairs are added to the API","                                  server Deployment nodeSelector provided the key","                                  does not already exist in the object''s nodeSelector.","                                  If omitted, the API server Deployment will use its","                                  default value for nodeSelector. WARNING: Please","                                  note that this field will modify the default API","                                  server Deployment nodeSelector.'","                                type: object","                              tolerations:","                                description: 'Tolerations is the API server pod''s","                                  tolerations. If specified, this overrides any tolerations","                                  that may be set on the API server Deployment. If","                                  omitted, the API server Deployment will use its","                                  default value for tolerations. WARNING: Please note","                                  that this field will override the default API server","                                  Deployment tolerations.'","                                items:","                                  description: The pod this Toleration is attached","                                    to tolerates any taint that matches the triple","                                    \u003ckey,value,effect\u003e using the matching operator","                                    \u003coperator\u003e.","                                  properties:","                                    effect:","                                      description: Effect indicates the taint effect","                                        to match. Empty means match all taint effects.","                                        When specified, allowed values are NoSchedule,","                                        PreferNoSchedule and NoExecute.","                                      type: string","                                    key:","                                      description: Key is the taint key that the toleration","                                        applies to. Empty means match all taint keys.","                                        If the key is empty, operator must be Exists;","                                        this combination means to match all values","                                        and all keys.","                                      type: string","                                    operator:","                                      description: Operator represents a key's relationship","                                        to the value. Valid operators are Exists and","                                        Equal. Defaults to Equal. Exists is equivalent","                                        to wildcard for value, so that a pod can tolerate","                                        all taints of a particular category.","                                      type: string","                                    tolerationSeconds:","                                      description: TolerationSeconds represents the","                                        period of time the toleration (which must","                                        be of effect NoExecute, otherwise this field","                                        is ignored) tolerates the taint. By default,","                                        it is not set, which means tolerate the taint","                                        forever (do not evict). Zero and negative","                                        values will be treated as 0 (evict immediately)","                                        by the system.","                                      format: int64","                                      type: integer","                                    value:","                                      description: Value is the taint value the toleration","                                        matches to. If the operator is Exists, the","                                        value should be empty, otherwise just a regular","                                        string.","                                      type: string","                                  type: object","                                type: array","                              topologySpreadConstraints:","                                description: TopologySpreadConstraints describes how","                                  a group of pods ought to spread across topology","                                  domains. Scheduler will schedule pods in a way which","                                  abides by the constraints. All topologySpreadConstraints","                                  are ANDed.","                                items:","                                  description: TopologySpreadConstraint specifies","                                    how to spread matching pods among the given topology.","                                  properties:","                                    labelSelector:","                                      description: LabelSelector is used to find matching","                                        pods. Pods that match this label selector","                                        are counted to determine the number of pods","                                        in their corresponding topology domain.","                                      properties:","                                        matchExpressions:","                                          description: matchExpressions is a list","                                            of label selector requirements. The requirements","                                            are ANDed.","                                          items:","                                            description: A label selector requirement","                                              is a selector that contains values,","                                              a key, and an operator that relates","                                              the key and values.","                                            properties:","                                              key:","                                                description: key is the label key","                                                  that the selector applies to.","                                                type: string","                                              operator:","                                                description: operator represents a","                                                  key's relationship to a set of values.","                                                  Valid operators are In, NotIn, Exists","                                                  and DoesNotExist.","                                                type: string","                                              values:","                                                description: values is an array of","                                                  string values. If the operator is","                                                  In or NotIn, the values array must","                                                  be non-empty. If the operator is","                                                  Exists or DoesNotExist, the values","                                                  array must be empty. This array","                                                  is replaced during a strategic merge","                                                  patch.","                                                items:","                                                  type: string","                                                type: array","                                            required:","                                            - key","                                            - operator","                                            type: object","                                          type: array","                                        matchLabels:","                                          additionalProperties:","                                            type: string","                                          description: matchLabels is a map of {key,value}","                                            pairs. A single {key,value} in the matchLabels","                                            map is equivalent to an element of matchExpressions,","                                            whose key field is \"key\", the operator","                                            is \"In\", and the values array contains","                                            only \"value\". The requirements are ANDed.","                                          type: object","                                      type: object","                                      x-kubernetes-map-type: atomic","                                    matchLabelKeys:","                                      description: MatchLabelKeys is a set of pod","                                        label keys to select the pods over which spreading","                                        will be calculated. The keys are used to lookup","                                        values from the incoming pod labels, those","                                        key-value labels are ANDed with labelSelector","                                        to select the group of existing pods over","                                        which spreading will be calculated for the","                                        incoming pod. Keys that don't exist in the","                                        incoming pod labels will be ignored. A null","                                        or empty list means only match against labelSelector.","                                      items:","                                        type: string","                                      type: array","                                      x-kubernetes-list-type: atomic","                                    maxSkew:","                                      description: 'MaxSkew describes the degree to","                                        which pods may be unevenly distributed. When","                                        `whenUnsatisfiable=DoNotSchedule`, it is the","                                        maximum permitted difference between the number","                                        of matching pods in the target topology and","                                        the global minimum. The global minimum is","                                        the minimum number of matching pods in an","                                        eligible domain or zero if the number of eligible","                                        domains is less than MinDomains. For example,","                                        in a 3-zone cluster, MaxSkew is set to 1,","                                        and pods with the same labelSelector spread","                                        as 2/2/1: In this case, the global minimum","                                        is 1. | zone1 | zone2 | zone3 | |  P P  |  P","                                        P  |   P   | - if MaxSkew is 1, incoming pod","                                        can only be scheduled to zone3 to become 2/2/2;","                                        scheduling it onto zone1(zone2) would make","                                        the ActualSkew(3-1) on zone1(zone2) violate","                                        MaxSkew(1). - if MaxSkew is 2, incoming pod","                                        can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,","                                        it is used to give higher precedence to topologies","                                        that satisfy it. It''s a required field. Default","                                        value is 1 and 0 is not allowed.'","                                      format: int32","                                      type: integer","                                    minDomains:","                                      description: \"MinDomains indicates a minimum","                                        number of eligible domains. When the number","                                        of eligible domains with matching topology","                                        keys is less than minDomains, Pod Topology","                                        Spread treats \\\"global minimum\\\" as 0, and","                                        then the calculation of Skew is performed.","                                        And when the number of eligible domains with","                                        matching topology keys equals or greater than","                                        minDomains, this value has no effect on scheduling.","                                        As a result, when the number of eligible domains","                                        is less than minDomains, scheduler won't schedule","                                        more than maxSkew Pods to those domains. If","                                        value is nil, the constraint behaves as if","                                        MinDomains is equal to 1. Valid values are","                                        integers greater than 0. When value is not","                                        nil, WhenUnsatisfiable must be DoNotSchedule.","                                        \\n For example, in a 3-zone cluster, MaxSkew","                                        is set to 2, MinDomains is set to 5 and pods","                                        with the same labelSelector spread as 2/2/2:","                                        | zone1 | zone2 | zone3 | |  P P  |  P P  |","                                        \\ P P  | The number of domains is less than","                                        5(MinDomains), so \\\"global minimum\\\" is treated","                                        as 0. In this situation, new pod with the","                                        same labelSelector cannot be scheduled, because","                                        computed skew will be 3(3 - 0) if new Pod","                                        is scheduled to any of the three zones, it","                                        will violate MaxSkew. \\n This is a beta field","                                        and requires the MinDomainsInPodTopologySpread","                                        feature gate to be enabled (enabled by default).\"","                                      format: int32","                                      type: integer","                                    nodeAffinityPolicy:","                                      description: \"NodeAffinityPolicy indicates how","                                        we will treat Pod's nodeAffinity/nodeSelector","                                        when calculating pod topology spread skew.","                                        Options are: - Honor: only nodes matching","                                        nodeAffinity/nodeSelector are included in","                                        the calculations. - Ignore: nodeAffinity/nodeSelector","                                        are ignored. All nodes are included in the","                                        calculations. \\n If this value is nil, the","                                        behavior is equivalent to the Honor policy.","                                        This is a beta-level feature default enabled","                                        by the NodeInclusionPolicyInPodTopologySpread","                                        feature flag.\"","                                      type: string","                                    nodeTaintsPolicy:","                                      description: \"NodeTaintsPolicy indicates how","                                        we will treat node taints when calculating","                                        pod topology spread skew. Options are: - Honor:","                                        nodes without taints, along with tainted nodes","                                        for which the incoming pod has a toleration,","                                        are included. - Ignore: node taints are ignored.","                                        All nodes are included. \\n If this value is","                                        nil, the behavior is equivalent to the Ignore","                                        policy. This is a beta-level feature default","                                        enabled by the NodeInclusionPolicyInPodTopologySpread","                                        feature flag.\"","                                      type: string","                                    topologyKey:","                                      description: TopologyKey is the key of node","                                        labels. Nodes that have a label with this","                                        key and identical values are considered to","                                        be in the same topology. We consider each","                                        \u003ckey, value\u003e as a \"bucket\", and try to put","                                        balanced number of pods into each bucket.","                                        We define a domain as a particular instance","                                        of a topology. Also, we define an eligible","                                        domain as a domain whose nodes meet the requirements","                                        of nodeAffinityPolicy and nodeTaintsPolicy.","                                        e.g. If TopologyKey is \"kubernetes.io/hostname\",","                                        each Node is a domain of that topology. And,","                                        if TopologyKey is \"topology.kubernetes.io/zone\",","                                        each zone is a domain of that topology. It's","                                        a required field.","                                      type: string","                                    whenUnsatisfiable:","                                      description: 'WhenUnsatisfiable indicates how","                                        to deal with a pod if it doesn''t satisfy","                                        the spread constraint. - DoNotSchedule (default)","                                        tells the scheduler not to schedule it. -","                                        ScheduleAnyway tells the scheduler to schedule","                                        the pod in any location, but giving higher","                                        precedence to topologies that would help reduce","                                        the skew. A constraint is considered \"Unsatisfiable\"","                                        for an incoming pod if and only if every possible","                                        node assignment for that pod would violate","                                        \"MaxSkew\" on some topology. For example, in","                                        a 3-zone cluster, MaxSkew is set to 1, and","                                        pods with the same labelSelector spread as","                                        3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   |","                                        If WhenUnsatisfiable is set to DoNotSchedule,","                                        incoming pod can only be scheduled to zone2(zone3)","                                        to become 3/2/1(3/1/2) as ActualSkew(2-1)","                                        on zone2(zone3) satisfies MaxSkew(1). In other","                                        words, the cluster can still be imbalanced,","                                        but scheduler won''t make it *more* imbalanced.","                                        It''s a required field.'","                                      type: string","                                  required:","                                  - maxSkew","                                  - topologyKey","                                  - whenUnsatisfiable","                                  type: object","                                type: array","                            type: object","                        type: object","                    type: object","                type: object","            type: object","          status:","            description: Most recently observed status for the Tigera API server.","            properties:","              conditions:","                description: Conditions represents the latest observed set of conditions","                  for the component. A component may be one or more of Ready, Progressing,","                  Degraded or other customer types.","                items:","                  description: \"Condition contains details for one aspect of the current","                    state of this API Resource. --- This struct is intended for direct","                    use as an array at the field path .status.conditions.  For example,","                    \\n type FooStatus struct{ // Represents the observations of a","                    foo's current state. // Known .status.conditions.type are: \\\"Available\\\",","                    \\\"Progressing\\\", and \\\"Degraded\\\" // +patchMergeKey=type // +patchStrategy=merge","                    // +listType=map // +listMapKey=type Conditions []metav1.Condition","                    `json:\\\"conditions,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\"","                    protobuf:\\\"bytes,1,rep,name=conditions\\\"` \\n // other fields }\"","                  properties:","                    lastTransitionTime:","                      description: lastTransitionTime is the last time the condition","                        transitioned from one status to another. This should be when","                        the underlying condition changed.  If that is not known, then","                        using the time when the API field changed is acceptable.","                      format: date-time","                      type: string","                    message:","                      description: message is a human readable message indicating","                        details about the transition. This may be an empty string.","                      maxLength: 32768","                      type: string","                    observedGeneration:","                      description: observedGeneration represents the .metadata.generation","                        that the condition was set based upon. For instance, if .metadata.generation","                        is currently 12, but the .status.conditions[x].observedGeneration","                        is 9, the condition is out of date with respect to the current","                        state of the instance.","                      format: int64","                      minimum: 0","                      type: integer","                    reason:","                      description: reason contains a programmatic identifier indicating","                        the reason for the condition's last transition. Producers","                        of specific condition types may define expected values and","                        meanings for this field, and whether the values are considered","                        a guaranteed API. The value should be a CamelCase string.","                        This field may not be empty.","                      maxLength: 1024","                      minLength: 1","                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","                      type: string","                    status:","                      description: status of the condition, one of True, False, Unknown.","                      enum:","                      - \"True\"","                      - \"False\"","                      - Unknown","                      type: string","                    type:","                      description: type of condition in CamelCase or in foo.example.com/CamelCase.","                        --- Many .condition.type values are consistent across resources","                        like Available, but because arbitrary conditions can be useful","                        (see .node.status.conditions), the ability to deconflict is","                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","                      maxLength: 316","                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","                      type: string","                  required:","                  - lastTransitionTime","                  - message","                  - reason","                  - status","                  - type","                  type: object","                type: array","              state:","                description: State provides user-readable status.","                type: string","            type: object","        type: object","    served: true","    storage: true","    subresources:","      status: {}","","---","# Source: crds/operator.tigera.io_imagesets_crd.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  annotations:","    controller-gen.kubebuilder.io/version: v0.11.3","  name: imagesets.operator.tigera.io","spec:","  group: operator.tigera.io","  names:","    kind: ImageSet","    listKind: ImageSetList","    plural: imagesets","    singular: imageset","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        description: ImageSet is used to specify image digests for the images that","          the operator deploys. The name of the ImageSet is expected to be in the","          format `\u003cvariant\u003e-\u003crelease\u003e`. The `variant` used is `enterprise` if the","          InstallationSpec Variant is `TigeraSecureEnterprise` otherwise it is `calico`.","          The `release` must match the version of the variant that the operator is","          built to deploy, this version can be obtained by passing the `--version`","          flag to the operator binary.","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: ImageSetSpec defines the desired state of ImageSet.","            properties:","              images:","                description: Images is the list of images to use digests. All images","                  that the operator will deploy must be specified.","                items:","                  properties:","                    digest:","                      description: Digest is the image identifier that will be used","                        for the Image. The field should not include a leading `@`","                        and must be prefixed with `sha256:`.","                      type: string","                    image:","                      description: Image is an image that the operator deploys and","                        instead of using the built in tag the operator will use the","                        Digest for the image identifier. The value should be the image","                        name without registry or tag or digest. For the image `docker.io/calico/node:v3.17.1`","                        it should be represented as `calico/node`","                      type: string","                  required:","                  - digest","                  - image","                  type: object","                type: array","            type: object","        type: object","    served: true","    storage: true","    subresources:","      status: {}","","---","# Source: crds/operator.tigera.io_installations_crd.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  annotations:","    controller-gen.kubebuilder.io/version: v0.11.3","  name: installations.operator.tigera.io","spec:","  group: operator.tigera.io","  names:","    kind: Installation","    listKind: InstallationList","    plural: installations","    singular: installation","  scope: Cluster","  versions:","  - name: v1","    schema:","      openAPIV3Schema:","        description: Installation configures an installation of Calico or Calico Enterprise.","          At most one instance of this resource is supported. It must be named \"default\".","          The Installation API installs core networking and network policy components,","          and provides general install-time configuration.","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: Specification of the desired state for the Calico or Calico","              Enterprise installation.","            properties:","              calicoKubeControllersDeployment:","                description: CalicoKubeControllersDeployment configures the calico-kube-controllers","                  Deployment. If used in conjunction with the deprecated ComponentResources,","                  then these overrides take precedence.","                properties:","                  metadata:","                    description: Metadata is a subset of a Kubernetes object's metadata","                      that is added to the Deployment.","                    properties:","                      annotations:","                        additionalProperties:","                          type: string","                        description: Annotations is a map of arbitrary non-identifying","                          metadata. Each of these key/value pairs are added to the","                          object's annotations provided the key does not already exist","                          in the object's annotations.","                        type: object","                      labels:","                        additionalProperties:","                          type: string","                        description: Labels is a map of string keys and values that","                          may match replicaset and service selectors. Each of these","                          key/value pairs are added to the object's labels provided","                          the key does not already exist in the object's labels.","                        type: object","                    type: object","                  spec:","                    description: Spec is the specification of the calico-kube-controllers","                      Deployment.","                    properties:","                      minReadySeconds:","                        description: MinReadySeconds is the minimum number of seconds","                          for which a newly created Deployment pod should be ready","                          without any of its container crashing, for it to be considered","                          available. If specified, this overrides any minReadySeconds","                          value that may be set on the calico-kube-controllers Deployment.","                          If omitted, the calico-kube-controllers Deployment will","                          use its default value for minReadySeconds.","                        format: int32","                        maximum: 2147483647","                        minimum: 0","                        type: integer","                      template:","                        description: Template describes the calico-kube-controllers","                          Deployment pod that will be created.","                        properties:","                          metadata:","                            description: Metadata is a subset of a Kubernetes object's","                              metadata that is added to the pod's metadata.","                            properties:","                              annotations:","                                additionalProperties:","                                  type: string","                                description: Annotations is a map of arbitrary non-identifying","                                  metadata. Each of these key/value pairs are added","                                  to the object's annotations provided the key does","                                  not already exist in the object's annotations.","                                type: object","                              labels:","                                additionalProperties:","                                  type: string","                                description: Labels is a map of string keys and values","                                  that may match replicaset and service selectors.","                                  Each of these key/value pairs are added to the object's","                                  labels provided the key does not already exist in","                                  the object's labels.","                                type: object","                            type: object","                          spec:","                            description: Spec is the calico-kube-controllers Deployment's","                              PodSpec.","                            properties:","                              affinity:","                                description: 'Affinity is a group of affinity scheduling","                                  rules for the calico-kube-controllers pods. If specified,","                                  this overrides any affinity that may be set on the","                                  calico-kube-controllers Deployment. If omitted,","                                  the calico-kube-controllers Deployment will use","                                  its default value for affinity. WARNING: Please","                                  note that this field will override the default calico-kube-controllers","                                  Deployment affinity.'","                                properties:","                                  nodeAffinity:","                                    description: Describes node affinity scheduling","                                      rules for the pod.","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node matches the corresponding matchExpressions;","                                          the node(s) with the highest sum are the","                                          most preferred.","                                        items:","                                          description: An empty preferred scheduling","                                            term matches all objects with implicit","                                            weight 0 (i.e. it's a no-op). A null preferred","                                            scheduling term matches no objects (i.e.","                                            is also a no-op).","                                          properties:","                                            preference:","                                              description: A node selector term, associated","                                                with the corresponding weight.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            weight:","                                              description: Weight associated with","                                                matching the corresponding nodeSelectorTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - preference","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to an update),","                                          the system may or may not try to eventually","                                          evict the pod from its node.","                                        properties:","                                          nodeSelectorTerms:","                                            description: Required. A list of node","                                              selector terms. The terms are ORed.","                                            items:","                                              description: A null or empty node selector","                                                term matches no objects. The requirements","                                                of them are ANDed. The TopologySelectorTerm","                                                type implements a subset of the NodeSelectorTerm.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            type: array","                                        required:","                                        - nodeSelectorTerms","                                        type: object","                                        x-kubernetes-map-type: atomic","                                    type: object","                                  podAffinity:","                                    description: Describes pod affinity scheduling","                                      rules (e.g. co-locate this pod in the same node,","                                      zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node has pods which matches the corresponding","                                          podAffinityTerm; the node(s) with the highest","                                          sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to a pod","                                          label update), the system may or may not","                                          try to eventually evict the pod from its","                                          node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                  podAntiAffinity:","                                    description: Describes pod anti-affinity scheduling","                                      rules (e.g. avoid putting this pod in the same","                                      node, zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          anti-affinity expressions specified by this","                                          field, but it may choose a node that violates","                                          one or more of the expressions. The node","                                          that is most preferred is the one with the","                                          greatest sum of weights, i.e. for each node","                                          that meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          anti-affinity expressions, etc.), compute","                                          a sum by iterating through the elements","                                          of this field and adding \"weight\" to the","                                          sum if the node has pods which matches the","                                          corresponding podAffinityTerm; the node(s)","                                          with the highest sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the anti-affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the anti-affinity requirements","                                          specified by this field cease to be met","                                          at some point during pod execution (e.g.","                                          due to a pod label update), the system may","                                          or may not try to eventually evict the pod","                                          from its node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                type: object","                              containers:","                                description: Containers is a list of calico-kube-controllers","                                  containers. If specified, this overrides the specified","                                  calico-kube-controllers Deployment containers. If","                                  omitted, the calico-kube-controllers Deployment","                                  will use its default values for its containers.","                                items:","                                  description: CalicoKubeControllersDeploymentContainer","                                    is a calico-kube-controllers Deployment container.","                                  properties:","                                    name:","                                      description: Name is an enum which identifies","                                        the calico-kube-controllers Deployment container","                                        by name.","                                      enum:","                                      - calico-kube-controllers","                                      type: string","                                    resources:","                                      description: Resources allows customization","                                        of limits and requests for compute resources","                                        such as cpu and memory. If specified, this","                                        overrides the named calico-kube-controllers","                                        Deployment container's resources. If omitted,","                                        the calico-kube-controllers Deployment will","                                        use its default value for this container's","                                        resources. If used in conjunction with the","                                        deprecated ComponentResources, then this value","                                        takes precedence.","                                      properties:","                                        claims:","                                          description: \"Claims lists the names of","                                            resources, defined in spec.resourceClaims,","                                            that are used by this container. \\n This","                                            is an alpha field and requires enabling","                                            the DynamicResourceAllocation feature","                                            gate. \\n This field is immutable. It can","                                            only be set for containers.\"","                                          items:","                                            description: ResourceClaim references","                                              one entry in PodSpec.ResourceClaims.","                                            properties:","                                              name:","                                                description: Name must match the name","                                                  of one entry in pod.spec.resourceClaims","                                                  of the Pod where this field is used.","                                                  It makes that resource available","                                                  inside a container.","                                                type: string","                                            required:","                                            - name","                                            type: object","                                          type: array","                                          x-kubernetes-list-map-keys:","                                          - name","                                          x-kubernetes-list-type: map","                                        limits:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Limits describes the maximum","                                            amount of compute resources allowed. More","                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                        requests:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Requests describes the minimum","                                            amount of compute resources required.","                                            If Requests is omitted for a container,","                                            it defaults to Limits if that is explicitly","                                            specified, otherwise to an implementation-defined","                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                      type: object","                                  required:","                                  - name","                                  type: object","                                type: array","                              nodeSelector:","                                additionalProperties:","                                  type: string","                                description: 'NodeSelector is the calico-kube-controllers","                                  pod''s scheduling constraints. If specified, each","                                  of the key/value pairs are added to the calico-kube-controllers","                                  Deployment nodeSelector provided the key does not","                                  already exist in the object''s nodeSelector. If","                                  used in conjunction with ControlPlaneNodeSelector,","                                  that nodeSelector is set on the calico-kube-controllers","                                  Deployment and each of this field''s key/value pairs","                                  are added to the calico-kube-controllers Deployment","                                  nodeSelector provided the key does not already exist","                                  in the object''s nodeSelector. If omitted, the calico-kube-controllers","                                  Deployment will use its default value for nodeSelector.","                                  WARNING: Please note that this field will modify","                                  the default calico-kube-controllers Deployment nodeSelector.'","                                type: object","                              tolerations:","                                description: 'Tolerations is the calico-kube-controllers","                                  pod''s tolerations. If specified, this overrides","                                  any tolerations that may be set on the calico-kube-controllers","                                  Deployment. If omitted, the calico-kube-controllers","                                  Deployment will use its default value for tolerations.","                                  WARNING: Please note that this field will override","                                  the default calico-kube-controllers Deployment tolerations.'","                                items:","                                  description: The pod this Toleration is attached","                                    to tolerates any taint that matches the triple","                                    \u003ckey,value,effect\u003e using the matching operator","                                    \u003coperator\u003e.","                                  properties:","                                    effect:","                                      description: Effect indicates the taint effect","                                        to match. Empty means match all taint effects.","                                        When specified, allowed values are NoSchedule,","                                        PreferNoSchedule and NoExecute.","                                      type: string","                                    key:","                                      description: Key is the taint key that the toleration","                                        applies to. Empty means match all taint keys.","                                        If the key is empty, operator must be Exists;","                                        this combination means to match all values","                                        and all keys.","                                      type: string","                                    operator:","                                      description: Operator represents a key's relationship","                                        to the value. Valid operators are Exists and","                                        Equal. Defaults to Equal. Exists is equivalent","                                        to wildcard for value, so that a pod can tolerate","                                        all taints of a particular category.","                                      type: string","                                    tolerationSeconds:","                                      description: TolerationSeconds represents the","                                        period of time the toleration (which must","                                        be of effect NoExecute, otherwise this field","                                        is ignored) tolerates the taint. By default,","                                        it is not set, which means tolerate the taint","                                        forever (do not evict). Zero and negative","                                        values will be treated as 0 (evict immediately)","                                        by the system.","                                      format: int64","                                      type: integer","                                    value:","                                      description: Value is the taint value the toleration","                                        matches to. If the operator is Exists, the","                                        value should be empty, otherwise just a regular","                                        string.","                                      type: string","                                  type: object","                                type: array","                            type: object","                        type: object","                    type: object","                type: object","              calicoNetwork:","                description: CalicoNetwork specifies networking configuration options","                  for Calico.","                properties:","                  bgp:","                    description: BGP configures whether or not to enable Calico's","                      BGP capabilities.","                    enum:","                    - Enabled","                    - Disabled","                    type: string","                  containerIPForwarding:","                    description: 'ContainerIPForwarding configures whether ip forwarding","                      will be enabled for containers in the CNI configuration. Default:","                      Disabled'","                    enum:","                    - Enabled","                    - Disabled","                    type: string","                  hostPorts:","                    description: 'HostPorts configures whether or not Calico will","                      support Kubernetes HostPorts. Valid only when using the Calico","                      CNI plugin. Default: Enabled'","                    enum:","                    - Enabled","                    - Disabled","                    type: string","                  ipPools:","                    description: IPPools contains a list of IP pools to create if","                      none exist. At most one IP pool of each address family may be","                      specified. If omitted, a single pool will be configured if needed.","                    items:","                      properties:","                        blockSize:","                          description: 'BlockSize specifies the CIDR prefex length","                            to use when allocating per-node IP blocks from the main","                            IP pool CIDR. Default: 26 (IPv4), 122 (IPv6)'","                          format: int32","                          type: integer","                        cidr:","                          description: CIDR contains the address range for the IP","                            Pool in classless inter-domain routing format.","                          type: string","                        disableBGPExport:","                          default: false","                          description: 'DisableBGPExport specifies whether routes","                            from this IP pool''s CIDR are exported over BGP. Default:","                            false'","                          type: boolean","                        encapsulation:","                          description: 'Encapsulation specifies the encapsulation","                            type that will be used with the IP Pool. Default: IPIP'","                          enum:","                          - IPIPCrossSubnet","                          - IPIP","                          - VXLAN","                          - VXLANCrossSubnet","                          - None","                          type: string","                        natOutgoing:","                          description: 'NATOutgoing specifies if NAT will be enabled","                            or disabled for outgoing traffic. Default: Enabled'","                          enum:","                          - Enabled","                          - Disabled","                          type: string","                        nodeSelector:","                          description: 'NodeSelector specifies the node selector that","                            will be set for the IP Pool. Default: ''all()'''","                          type: string","                      required:","                      - cidr","                      type: object","                    type: array","                  linuxDataplane:","                    description: 'LinuxDataplane is used to select the dataplane used","                      for Linux nodes. In particular, it causes the operator to add","                      required mounts and environment variables for the particular","                      dataplane. If not specified, iptables mode is used. Default:","                      Iptables'","                    enum:","                    - Iptables","                    - BPF","                    - VPP","                    type: string","                  mtu:","                    description: MTU specifies the maximum transmission unit to use","                      on the pod network. If not specified, Calico will perform MTU","                      auto-detection based on the cluster network.","                    format: int32","                    type: integer","                  multiInterfaceMode:","                    description: 'MultiInterfaceMode configures what will configure","                      multiple interface per pod. Only valid for Calico Enterprise","                      installations using the Calico CNI plugin. Default: None'","                    enum:","                    - None","                    - Multus","                    type: string","                  nodeAddressAutodetectionV4:","                    description: NodeAddressAutodetectionV4 specifies an approach","                      to automatically detect node IPv4 addresses. If not specified,","                      will use default auto-detection settings to acquire an IPv4","                      address for each node.","                    properties:","                      canReach:","                        description: CanReach enables IP auto-detection based on which","                          source address on the node is used to reach the specified","                          IP or domain.","                        type: string","                      cidrs:","                        description: CIDRS enables IP auto-detection based on which","                          addresses on the nodes are within one of the provided CIDRs.","                        items:","                          type: string","                        type: array","                      firstFound:","                        description: FirstFound uses default interface matching parameters","                          to select an interface, performing best-effort filtering","                          based on well-known interface names.","                        type: boolean","                      interface:","                        description: Interface enables IP auto-detection based on","                          interfaces that match the given regex.","                        type: string","                      kubernetes:","                        description: Kubernetes configures Calico to detect node addresses","                          based on the Kubernetes API.","                        enum:","                        - NodeInternalIP","                        type: string","                      skipInterface:","                        description: SkipInterface enables IP auto-detection based","                          on interfaces that do not match the given regex.","                        type: string","                    type: object","                  nodeAddressAutodetectionV6:","                    description: NodeAddressAutodetectionV6 specifies an approach","                      to automatically detect node IPv6 addresses. If not specified,","                      IPv6 addresses will not be auto-detected.","                    properties:","                      canReach:","                        description: CanReach enables IP auto-detection based on which","                          source address on the node is used to reach the specified","                          IP or domain.","                        type: string","                      cidrs:","                        description: CIDRS enables IP auto-detection based on which","                          addresses on the nodes are within one of the provided CIDRs.","                        items:","                          type: string","                        type: array","                      firstFound:","                        description: FirstFound uses default interface matching parameters","                          to select an interface, performing best-effort filtering","                          based on well-known interface names.","                        type: boolean","                      interface:","                        description: Interface enables IP auto-detection based on","                          interfaces that match the given regex.","                        type: string","                      kubernetes:","                        description: Kubernetes configures Calico to detect node addresses","                          based on the Kubernetes API.","                        enum:","                        - NodeInternalIP","                        type: string","                      skipInterface:","                        description: SkipInterface enables IP auto-detection based","                          on interfaces that do not match the given regex.","                        type: string","                    type: object","                type: object","              calicoNodeDaemonSet:","                description: CalicoNodeDaemonSet configures the calico-node DaemonSet.","                  If used in conjunction with the deprecated ComponentResources, then","                  these overrides take precedence.","                properties:","                  metadata:","                    description: Metadata is a subset of a Kubernetes object's metadata","                      that is added to the DaemonSet.","                    properties:","                      annotations:","                        additionalProperties:","                          type: string","                        description: Annotations is a map of arbitrary non-identifying","                          metadata. Each of these key/value pairs are added to the","                          object's annotations provided the key does not already exist","                          in the object's annotations.","                        type: object","                      labels:","                        additionalProperties:","                          type: string","                        description: Labels is a map of string keys and values that","                          may match replicaset and service selectors. Each of these","                          key/value pairs are added to the object's labels provided","                          the key does not already exist in the object's labels.","                        type: object","                    type: object","                  spec:","                    description: Spec is the specification of the calico-node DaemonSet.","                    properties:","                      minReadySeconds:","                        description: MinReadySeconds is the minimum number of seconds","                          for which a newly created DaemonSet pod should be ready","                          without any of its container crashing, for it to be considered","                          available. If specified, this overrides any minReadySeconds","                          value that may be set on the calico-node DaemonSet. If omitted,","                          the calico-node DaemonSet will use its default value for","                          minReadySeconds.","                        format: int32","                        maximum: 2147483647","                        minimum: 0","                        type: integer","                      template:","                        description: Template describes the calico-node DaemonSet","                          pod that will be created.","                        properties:","                          metadata:","                            description: Metadata is a subset of a Kubernetes object's","                              metadata that is added to the pod's metadata.","                            properties:","                              annotations:","                                additionalProperties:","                                  type: string","                                description: Annotations is a map of arbitrary non-identifying","                                  metadata. Each of these key/value pairs are added","                                  to the object's annotations provided the key does","                                  not already exist in the object's annotations.","                                type: object","                              labels:","                                additionalProperties:","                                  type: string","                                description: Labels is a map of string keys and values","                                  that may match replicaset and service selectors.","                                  Each of these key/value pairs are added to the object's","                                  labels provided the key does not already exist in","                                  the object's labels.","                                type: object","                            type: object","                          spec:","                            description: Spec is the calico-node DaemonSet's PodSpec.","                            properties:","                              affinity:","                                description: 'Affinity is a group of affinity scheduling","                                  rules for the calico-node pods. If specified, this","                                  overrides any affinity that may be set on the calico-node","                                  DaemonSet. If omitted, the calico-node DaemonSet","                                  will use its default value for affinity. WARNING:","                                  Please note that this field will override the default","                                  calico-node DaemonSet affinity.'","                                properties:","                                  nodeAffinity:","                                    description: Describes node affinity scheduling","                                      rules for the pod.","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node matches the corresponding matchExpressions;","                                          the node(s) with the highest sum are the","                                          most preferred.","                                        items:","                                          description: An empty preferred scheduling","                                            term matches all objects with implicit","                                            weight 0 (i.e. it's a no-op). A null preferred","                                            scheduling term matches no objects (i.e.","                                            is also a no-op).","                                          properties:","                                            preference:","                                              description: A node selector term, associated","                                                with the corresponding weight.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            weight:","                                              description: Weight associated with","                                                matching the corresponding nodeSelectorTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - preference","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to an update),","                                          the system may or may not try to eventually","                                          evict the pod from its node.","                                        properties:","                                          nodeSelectorTerms:","                                            description: Required. A list of node","                                              selector terms. The terms are ORed.","                                            items:","                                              description: A null or empty node selector","                                                term matches no objects. The requirements","                                                of them are ANDed. The TopologySelectorTerm","                                                type implements a subset of the NodeSelectorTerm.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            type: array","                                        required:","                                        - nodeSelectorTerms","                                        type: object","                                        x-kubernetes-map-type: atomic","                                    type: object","                                  podAffinity:","                                    description: Describes pod affinity scheduling","                                      rules (e.g. co-locate this pod in the same node,","                                      zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node has pods which matches the corresponding","                                          podAffinityTerm; the node(s) with the highest","                                          sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to a pod","                                          label update), the system may or may not","                                          try to eventually evict the pod from its","                                          node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                  podAntiAffinity:","                                    description: Describes pod anti-affinity scheduling","                                      rules (e.g. avoid putting this pod in the same","                                      node, zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          anti-affinity expressions specified by this","                                          field, but it may choose a node that violates","                                          one or more of the expressions. The node","                                          that is most preferred is the one with the","                                          greatest sum of weights, i.e. for each node","                                          that meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          anti-affinity expressions, etc.), compute","                                          a sum by iterating through the elements","                                          of this field and adding \"weight\" to the","                                          sum if the node has pods which matches the","                                          corresponding podAffinityTerm; the node(s)","                                          with the highest sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the anti-affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the anti-affinity requirements","                                          specified by this field cease to be met","                                          at some point during pod execution (e.g.","                                          due to a pod label update), the system may","                                          or may not try to eventually evict the pod","                                          from its node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                type: object","                              containers:","                                description: Containers is a list of calico-node containers.","                                  If specified, this overrides the specified calico-node","                                  DaemonSet containers. If omitted, the calico-node","                                  DaemonSet will use its default values for its containers.","                                items:","                                  description: CalicoNodeDaemonSetContainer is a calico-node","                                    DaemonSet container.","                                  properties:","                                    name:","                                      description: Name is an enum which identifies","                                        the calico-node DaemonSet container by name.","                                      enum:","                                      - calico-node","                                      type: string","                                    resources:","                                      description: Resources allows customization","                                        of limits and requests for compute resources","                                        such as cpu and memory. If specified, this","                                        overrides the named calico-node DaemonSet","                                        container's resources. If omitted, the calico-node","                                        DaemonSet will use its default value for this","                                        container's resources. If used in conjunction","                                        with the deprecated ComponentResources, then","                                        this value takes precedence.","                                      properties:","                                        claims:","                                          description: \"Claims lists the names of","                                            resources, defined in spec.resourceClaims,","                                            that are used by this container. \\n This","                                            is an alpha field and requires enabling","                                            the DynamicResourceAllocation feature","                                            gate. \\n This field is immutable. It can","                                            only be set for containers.\"","                                          items:","                                            description: ResourceClaim references","                                              one entry in PodSpec.ResourceClaims.","                                            properties:","                                              name:","                                                description: Name must match the name","                                                  of one entry in pod.spec.resourceClaims","                                                  of the Pod where this field is used.","                                                  It makes that resource available","                                                  inside a container.","                                                type: string","                                            required:","                                            - name","                                            type: object","                                          type: array","                                          x-kubernetes-list-map-keys:","                                          - name","                                          x-kubernetes-list-type: map","                                        limits:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Limits describes the maximum","                                            amount of compute resources allowed. More","                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                        requests:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Requests describes the minimum","                                            amount of compute resources required.","                                            If Requests is omitted for a container,","                                            it defaults to Limits if that is explicitly","                                            specified, otherwise to an implementation-defined","                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                      type: object","                                  required:","                                  - name","                                  type: object","                                type: array","                              initContainers:","                                description: InitContainers is a list of calico-node","                                  init containers. If specified, this overrides the","                                  specified calico-node DaemonSet init containers.","                                  If omitted, the calico-node DaemonSet will use its","                                  default values for its init containers.","                                items:","                                  description: CalicoNodeDaemonSetInitContainer is","                                    a calico-node DaemonSet init container.","                                  properties:","                                    name:","                                      description: Name is an enum which identifies","                                        the calico-node DaemonSet init container by","                                        name.","                                      enum:","                                      - install-cni","                                      - hostpath-init","                                      - flexvol-driver","                                      - mount-bpffs","                                      - node-certs-key-cert-provisioner","                                      - calico-node-prometheus-server-tls-key-cert-provisioner","                                      type: string","                                    resources:","                                      description: Resources allows customization","                                        of limits and requests for compute resources","                                        such as cpu and memory. If specified, this","                                        overrides the named calico-node DaemonSet","                                        init container's resources. If omitted, the","                                        calico-node DaemonSet will use its default","                                        value for this container's resources. If used","                                        in conjunction with the deprecated ComponentResources,","                                        then this value takes precedence.","                                      properties:","                                        claims:","                                          description: \"Claims lists the names of","                                            resources, defined in spec.resourceClaims,","                                            that are used by this container. \\n This","                                            is an alpha field and requires enabling","                                            the DynamicResourceAllocation feature","                                            gate. \\n This field is immutable. It can","                                            only be set for containers.\"","                                          items:","                                            description: ResourceClaim references","                                              one entry in PodSpec.ResourceClaims.","                                            properties:","                                              name:","                                                description: Name must match the name","                                                  of one entry in pod.spec.resourceClaims","                                                  of the Pod where this field is used.","                                                  It makes that resource available","                                                  inside a container.","                                                type: string","                                            required:","                                            - name","                                            type: object","                                          type: array","                                          x-kubernetes-list-map-keys:","                                          - name","                                          x-kubernetes-list-type: map","                                        limits:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Limits describes the maximum","                                            amount of compute resources allowed. More","                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                        requests:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Requests describes the minimum","                                            amount of compute resources required.","                                            If Requests is omitted for a container,","                                            it defaults to Limits if that is explicitly","                                            specified, otherwise to an implementation-defined","                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                      type: object","                                  required:","                                  - name","                                  type: object","                                type: array","                              nodeSelector:","                                additionalProperties:","                                  type: string","                                description: 'NodeSelector is the calico-node pod''s","                                  scheduling constraints. If specified, each of the","                                  key/value pairs are added to the calico-node DaemonSet","                                  nodeSelector provided the key does not already exist","                                  in the object''s nodeSelector. If omitted, the calico-node","                                  DaemonSet will use its default value for nodeSelector.","                                  WARNING: Please note that this field will modify","                                  the default calico-node DaemonSet nodeSelector.'","                                type: object","                              tolerations:","                                description: 'Tolerations is the calico-node pod''s","                                  tolerations. If specified, this overrides any tolerations","                                  that may be set on the calico-node DaemonSet. If","                                  omitted, the calico-node DaemonSet will use its","                                  default value for tolerations. WARNING: Please note","                                  that this field will override the default calico-node","                                  DaemonSet tolerations.'","                                items:","                                  description: The pod this Toleration is attached","                                    to tolerates any taint that matches the triple","                                    \u003ckey,value,effect\u003e using the matching operator","                                    \u003coperator\u003e.","                                  properties:","                                    effect:","                                      description: Effect indicates the taint effect","                                        to match. Empty means match all taint effects.","                                        When specified, allowed values are NoSchedule,","                                        PreferNoSchedule and NoExecute.","                                      type: string","                                    key:","                                      description: Key is the taint key that the toleration","                                        applies to. Empty means match all taint keys.","                                        If the key is empty, operator must be Exists;","                                        this combination means to match all values","                                        and all keys.","                                      type: string","                                    operator:","                                      description: Operator represents a key's relationship","                                        to the value. Valid operators are Exists and","                                        Equal. Defaults to Equal. Exists is equivalent","                                        to wildcard for value, so that a pod can tolerate","                                        all taints of a particular category.","                                      type: string","                                    tolerationSeconds:","                                      description: TolerationSeconds represents the","                                        period of time the toleration (which must","                                        be of effect NoExecute, otherwise this field","                                        is ignored) tolerates the taint. By default,","                                        it is not set, which means tolerate the taint","                                        forever (do not evict). Zero and negative","                                        values will be treated as 0 (evict immediately)","                                        by the system.","                                      format: int64","                                      type: integer","                                    value:","                                      description: Value is the taint value the toleration","                                        matches to. If the operator is Exists, the","                                        value should be empty, otherwise just a regular","                                        string.","                                      type: string","                                  type: object","                                type: array","                            type: object","                        type: object","                    type: object","                type: object","              calicoWindowsUpgradeDaemonSet:","                description: CalicoWindowsUpgradeDaemonSet configures the calico-windows-upgrade","                  DaemonSet.","                properties:","                  metadata:","                    description: Metadata is a subset of a Kubernetes object's metadata","                      that is added to the Deployment.","                    properties:","                      annotations:","                        additionalProperties:","                          type: string","                        description: Annotations is a map of arbitrary non-identifying","                          metadata. Each of these key/value pairs are added to the","                          object's annotations provided the key does not already exist","                          in the object's annotations.","                        type: object","                      labels:","                        additionalProperties:","                          type: string","                        description: Labels is a map of string keys and values that","                          may match replicaset and service selectors. Each of these","                          key/value pairs are added to the object's labels provided","                          the key does not already exist in the object's labels.","                        type: object","                    type: object","                  spec:","                    description: Spec is the specification of the calico-windows-upgrade","                      DaemonSet.","                    properties:","                      minReadySeconds:","                        description: MinReadySeconds is the minimum number of seconds","                          for which a newly created Deployment pod should be ready","                          without any of its container crashing, for it to be considered","                          available. If specified, this overrides any minReadySeconds","                          value that may be set on the calico-windows-upgrade DaemonSet.","                          If omitted, the calico-windows-upgrade DaemonSet will use","                          its default value for minReadySeconds.","                        format: int32","                        maximum: 2147483647","                        minimum: 0","                        type: integer","                      template:","                        description: Template describes the calico-windows-upgrade","                          DaemonSet pod that will be created.","                        properties:","                          metadata:","                            description: Metadata is a subset of a Kubernetes object's","                              metadata that is added to the pod's metadata.","                            properties:","                              annotations:","                                additionalProperties:","                                  type: string","                                description: Annotations is a map of arbitrary non-identifying","                                  metadata. Each of these key/value pairs are added","                                  to the object's annotations provided the key does","                                  not already exist in the object's annotations.","                                type: object","                              labels:","                                additionalProperties:","                                  type: string","                                description: Labels is a map of string keys and values","                                  that may match replicaset and service selectors.","                                  Each of these key/value pairs are added to the object's","                                  labels provided the key does not already exist in","                                  the object's labels.","                                type: object","                            type: object","                          spec:","                            description: Spec is the calico-windows-upgrade DaemonSet's","                              PodSpec.","                            properties:","                              affinity:","                                description: 'Affinity is a group of affinity scheduling","                                  rules for the calico-windows-upgrade pods. If specified,","                                  this overrides any affinity that may be set on the","                                  calico-windows-upgrade DaemonSet. If omitted, the","                                  calico-windows-upgrade DaemonSet will use its default","                                  value for affinity. WARNING: Please note that this","                                  field will override the default calico-windows-upgrade","                                  DaemonSet affinity.'","                                properties:","                                  nodeAffinity:","                                    description: Describes node affinity scheduling","                                      rules for the pod.","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node matches the corresponding matchExpressions;","                                          the node(s) with the highest sum are the","                                          most preferred.","                                        items:","                                          description: An empty preferred scheduling","                                            term matches all objects with implicit","                                            weight 0 (i.e. it's a no-op). A null preferred","                                            scheduling term matches no objects (i.e.","                                            is also a no-op).","                                          properties:","                                            preference:","                                              description: A node selector term, associated","                                                with the corresponding weight.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            weight:","                                              description: Weight associated with","                                                matching the corresponding nodeSelectorTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - preference","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to an update),","                                          the system may or may not try to eventually","                                          evict the pod from its node.","                                        properties:","                                          nodeSelectorTerms:","                                            description: Required. A list of node","                                              selector terms. The terms are ORed.","                                            items:","                                              description: A null or empty node selector","                                                term matches no objects. The requirements","                                                of them are ANDed. The TopologySelectorTerm","                                                type implements a subset of the NodeSelectorTerm.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            type: array","                                        required:","                                        - nodeSelectorTerms","                                        type: object","                                        x-kubernetes-map-type: atomic","                                    type: object","                                  podAffinity:","                                    description: Describes pod affinity scheduling","                                      rules (e.g. co-locate this pod in the same node,","                                      zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node has pods which matches the corresponding","                                          podAffinityTerm; the node(s) with the highest","                                          sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to a pod","                                          label update), the system may or may not","                                          try to eventually evict the pod from its","                                          node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                  podAntiAffinity:","                                    description: Describes pod anti-affinity scheduling","                                      rules (e.g. avoid putting this pod in the same","                                      node, zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          anti-affinity expressions specified by this","                                          field, but it may choose a node that violates","                                          one or more of the expressions. The node","                                          that is most preferred is the one with the","                                          greatest sum of weights, i.e. for each node","                                          that meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          anti-affinity expressions, etc.), compute","                                          a sum by iterating through the elements","                                          of this field and adding \"weight\" to the","                                          sum if the node has pods which matches the","                                          corresponding podAffinityTerm; the node(s)","                                          with the highest sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the anti-affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the anti-affinity requirements","                                          specified by this field cease to be met","                                          at some point during pod execution (e.g.","                                          due to a pod label update), the system may","                                          or may not try to eventually evict the pod","                                          from its node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                type: object","                              containers:","                                description: Containers is a list of calico-windows-upgrade","                                  containers. If specified, this overrides the specified","                                  calico-windows-upgrade DaemonSet containers. If","                                  omitted, the calico-windows-upgrade DaemonSet will","                                  use its default values for its containers.","                                items:","                                  description: CalicoWindowsUpgradeDaemonSetContainer","                                    is a calico-windows-upgrade DaemonSet container.","                                  properties:","                                    name:","                                      description: Name is an enum which identifies","                                        the calico-windows-upgrade DaemonSet container","                                        by name.","                                      enum:","                                      - calico-windows-upgrade","                                      type: string","                                    resources:","                                      description: Resources allows customization","                                        of limits and requests for compute resources","                                        such as cpu and memory. If specified, this","                                        overrides the named calico-windows-upgrade","                                        DaemonSet container's resources. If omitted,","                                        the calico-windows-upgrade DaemonSet will","                                        use its default value for this container's","                                        resources.","                                      properties:","                                        claims:","                                          description: \"Claims lists the names of","                                            resources, defined in spec.resourceClaims,","                                            that are used by this container. \\n This","                                            is an alpha field and requires enabling","                                            the DynamicResourceAllocation feature","                                            gate. \\n This field is immutable. It can","                                            only be set for containers.\"","                                          items:","                                            description: ResourceClaim references","                                              one entry in PodSpec.ResourceClaims.","                                            properties:","                                              name:","                                                description: Name must match the name","                                                  of one entry in pod.spec.resourceClaims","                                                  of the Pod where this field is used.","                                                  It makes that resource available","                                                  inside a container.","                                                type: string","                                            required:","                                            - name","                                            type: object","                                          type: array","                                          x-kubernetes-list-map-keys:","                                          - name","                                          x-kubernetes-list-type: map","                                        limits:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Limits describes the maximum","                                            amount of compute resources allowed. More","                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                        requests:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Requests describes the minimum","                                            amount of compute resources required.","                                            If Requests is omitted for a container,","                                            it defaults to Limits if that is explicitly","                                            specified, otherwise to an implementation-defined","                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                      type: object","                                  required:","                                  - name","                                  type: object","                                type: array","                              nodeSelector:","                                additionalProperties:","                                  type: string","                                description: 'NodeSelector is the calico-windows-upgrade","                                  pod''s scheduling constraints. If specified, each","                                  of the key/value pairs are added to the calico-windows-upgrade","                                  DaemonSet nodeSelector provided the key does not","                                  already exist in the object''s nodeSelector. If","                                  omitted, the calico-windows-upgrade DaemonSet will","                                  use its default value for nodeSelector. WARNING:","                                  Please note that this field will modify the default","                                  calico-windows-upgrade DaemonSet nodeSelector.'","                                type: object","                              tolerations:","                                description: 'Tolerations is the calico-windows-upgrade","                                  pod''s tolerations. If specified, this overrides","                                  any tolerations that may be set on the calico-windows-upgrade","                                  DaemonSet. If omitted, the calico-windows-upgrade","                                  DaemonSet will use its default value for tolerations.","                                  WARNING: Please note that this field will override","                                  the default calico-windows-upgrade DaemonSet tolerations.'","                                items:","                                  description: The pod this Toleration is attached","                                    to tolerates any taint that matches the triple","                                    \u003ckey,value,effect\u003e using the matching operator","                                    \u003coperator\u003e.","                                  properties:","                                    effect:","                                      description: Effect indicates the taint effect","                                        to match. Empty means match all taint effects.","                                        When specified, allowed values are NoSchedule,","                                        PreferNoSchedule and NoExecute.","                                      type: string","                                    key:","                                      description: Key is the taint key that the toleration","                                        applies to. Empty means match all taint keys.","                                        If the key is empty, operator must be Exists;","                                        this combination means to match all values","                                        and all keys.","                                      type: string","                                    operator:","                                      description: Operator represents a key's relationship","                                        to the value. Valid operators are Exists and","                                        Equal. Defaults to Equal. Exists is equivalent","                                        to wildcard for value, so that a pod can tolerate","                                        all taints of a particular category.","                                      type: string","                                    tolerationSeconds:","                                      description: TolerationSeconds represents the","                                        period of time the toleration (which must","                                        be of effect NoExecute, otherwise this field","                                        is ignored) tolerates the taint. By default,","                                        it is not set, which means tolerate the taint","                                        forever (do not evict). Zero and negative","                                        values will be treated as 0 (evict immediately)","                                        by the system.","                                      format: int64","                                      type: integer","                                    value:","                                      description: Value is the taint value the toleration","                                        matches to. If the operator is Exists, the","                                        value should be empty, otherwise just a regular","                                        string.","                                      type: string","                                  type: object","                                type: array","                            type: object","                        type: object","                    type: object","                type: object","              certificateManagement:","                description: CertificateManagement configures pods to submit a CertificateSigningRequest","                  to the certificates.k8s.io/v1beta1 API in order to obtain TLS certificates.","                  This feature requires that you bring your own CSR signing and approval","                  process, otherwise pods will be stuck during initialization.","                properties:","                  caCert:","                    description: Certificate of the authority that signs the CertificateSigningRequests","                      in PEM format.","                    format: byte","                    type: string","                  keyAlgorithm:","                    description: 'Specify the algorithm used by pods to generate a","                      key pair that is associated with the X.509 certificate request.","                      Default: RSAWithSize2048'","                    enum:","                    - \"\"","                    - RSAWithSize2048","                    - RSAWithSize4096","                    - RSAWithSize8192","                    - ECDSAWithCurve256","                    - ECDSAWithCurve384","                    - ECDSAWithCurve521","                    type: string","                  signatureAlgorithm:","                    description: 'Specify the algorithm used for the signature of","                      the X.509 certificate request. Default: SHA256WithRSA'","                    enum:","                    - \"\"","                    - SHA256WithRSA","                    - SHA384WithRSA","                    - SHA512WithRSA","                    - ECDSAWithSHA256","                    - ECDSAWithSHA384","                    - ECDSAWithSHA512","                    type: string","                  signerName:","                    description: 'When a CSR is issued to the certificates.k8s.io","                      API, the signerName is added to the request in order to accommodate","                      for clusters with multiple signers. Must be formatted as: `\u003cmy-domain\u003e/\u003cmy-signername\u003e`.'","                    type: string","                required:","                - caCert","                - signerName","                type: object","              cni:","                description: CNI specifies the CNI that will be used by this installation.","                properties:","                  ipam:","                    description: IPAM specifies the pod IP address management that","                      will be used in the Calico or Calico Enterprise installation.","                    properties:","                      type:","                        description: \"Specifies the IPAM plugin that will be used","                          in the Calico or Calico Enterprise installation. * For CNI","                          Plugin Calico, this field defaults to Calico. * For CNI","                          Plugin GKE, this field defaults to HostLocal. * For CNI","                          Plugin AzureVNET, this field defaults to AzureVNET. * For","                          CNI Plugin AmazonVPC, this field defaults to AmazonVPC.","                          \\n The IPAM plugin is installed and configured only if the","                          CNI plugin is set to Calico, for all other values of the","                          CNI plugin the plugin binaries and CNI config is a dependency","                          that is expected to be installed separately. \\n Default:","                          Calico\"","                        enum:","                        - Calico","                        - HostLocal","                        - AmazonVPC","                        - AzureVNET","                        type: string","                    required:","                    - type","                    type: object","                  type:","                    description: \"Specifies the CNI plugin that will be used in the","                      Calico or Calico Enterprise installation. * For KubernetesProvider","                      GKE, this field defaults to GKE. * For KubernetesProvider AKS,","                      this field defaults to AzureVNET. * For KubernetesProvider EKS,","                      this field defaults to AmazonVPC. * If aws-node daemonset exists","                      in kube-system when the Installation resource is created, this","                      field defaults to AmazonVPC. * For all other cases this field","                      defaults to Calico. \\n For the value Calico, the CNI plugin","                      binaries and CNI config will be installed as part of deployment,","                      for all other values the CNI plugin binaries and CNI config","                      is a dependency that is expected to be installed separately.","                      \\n Default: Calico\"","                    enum:","                    - Calico","                    - GKE","                    - AmazonVPC","                    - AzureVNET","                    type: string","                required:","                - type","                type: object","              componentResources:","                description: Deprecated. Please use CalicoNodeDaemonSet, TyphaDeployment,","                  and KubeControllersDeployment. ComponentResources can be used to","                  customize the resource requirements for each component. Node, Typha,","                  and KubeControllers are supported for installations.","                items:","                  description: Deprecated. Please use component resource config fields","                    in Installation.Spec instead. The ComponentResource struct associates","                    a ResourceRequirements with a component by name","                  properties:","                    componentName:","                      description: ComponentName is an enum which identifies the component","                      enum:","                      - Node","                      - Typha","                      - KubeControllers","                      type: string","                    resourceRequirements:","                      description: ResourceRequirements allows customization of limits","                        and requests for compute resources such as cpu and memory.","                      properties:","                        claims:","                          description: \"Claims lists the names of resources, defined","                            in spec.resourceClaims, that are used by this container.","                            \\n This is an alpha field and requires enabling the DynamicResourceAllocation","                            feature gate. \\n This field is immutable. It can only","                            be set for containers.\"","                          items:","                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.","                            properties:","                              name:","                                description: Name must match the name of one entry","                                  in pod.spec.resourceClaims of the Pod where this","                                  field is used. It makes that resource available","                                  inside a container.","                                type: string","                            required:","                            - name","                            type: object","                          type: array","                          x-kubernetes-list-map-keys:","                          - name","                          x-kubernetes-list-type: map","                        limits:","                          additionalProperties:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                            x-kubernetes-int-or-string: true","                          description: 'Limits describes the maximum amount of compute","                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                          type: object","                        requests:","                          additionalProperties:","                            anyOf:","                            - type: integer","                            - type: string","                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                            x-kubernetes-int-or-string: true","                          description: 'Requests describes the minimum amount of compute","                            resources required. If Requests is omitted for a container,","                            it defaults to Limits if that is explicitly specified,","                            otherwise to an implementation-defined value. More info:","                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                          type: object","                      type: object","                  required:","                  - componentName","                  - resourceRequirements","                  type: object","                type: array","              controlPlaneNodeSelector:","                additionalProperties:","                  type: string","                description: ControlPlaneNodeSelector is used to select control plane","                  nodes on which to run Calico components. This is globally applied","                  to all resources created by the operator excluding daemonsets.","                type: object","              controlPlaneReplicas:","                description: ControlPlaneReplicas defines how many replicas of the","                  control plane core components will be deployed. This field applies","                  to all control plane components that support High Availability.","                  Defaults to 2.","                format: int32","                type: integer","              controlPlaneTolerations:","                description: ControlPlaneTolerations specify tolerations which are","                  then globally applied to all resources created by the operator.","                items:","                  description: The pod this Toleration is attached to tolerates any","                    taint that matches the triple \u003ckey,value,effect\u003e using the matching","                    operator \u003coperator\u003e.","                  properties:","                    effect:","                      description: Effect indicates the taint effect to match. Empty","                        means match all taint effects. When specified, allowed values","                        are NoSchedule, PreferNoSchedule and NoExecute.","                      type: string","                    key:","                      description: Key is the taint key that the toleration applies","                        to. Empty means match all taint keys. If the key is empty,","                        operator must be Exists; this combination means to match all","                        values and all keys.","                      type: string","                    operator:","                      description: Operator represents a key's relationship to the","                        value. Valid operators are Exists and Equal. Defaults to Equal.","                        Exists is equivalent to wildcard for value, so that a pod","                        can tolerate all taints of a particular category.","                      type: string","                    tolerationSeconds:","                      description: TolerationSeconds represents the period of time","                        the toleration (which must be of effect NoExecute, otherwise","                        this field is ignored) tolerates the taint. By default, it","                        is not set, which means tolerate the taint forever (do not","                        evict). Zero and negative values will be treated as 0 (evict","                        immediately) by the system.","                      format: int64","                      type: integer","                    value:","                      description: Value is the taint value the toleration matches","                        to. If the operator is Exists, the value should be empty,","                        otherwise just a regular string.","                      type: string","                  type: object","                type: array","              csiNodeDriverDaemonSet:","                description: CSINodeDriverDaemonSet configures the csi-node-driver","                  DaemonSet.","                properties:","                  metadata:","                    description: Metadata is a subset of a Kubernetes object's metadata","                      that is added to the DaemonSet.","                    properties:","                      annotations:","                        additionalProperties:","                          type: string","                        description: Annotations is a map of arbitrary non-identifying","                          metadata. Each of these key/value pairs are added to the","                          object's annotations provided the key does not already exist","                          in the object's annotations.","                        type: object","                      labels:","                        additionalProperties:","                          type: string","                        description: Labels is a map of string keys and values that","                          may match replicaset and service selectors. Each of these","                          key/value pairs are added to the object's labels provided","                          the key does not already exist in the object's labels.","                        type: object","                    type: object","                  spec:","                    description: Spec is the specification of the csi-node-driver","                      DaemonSet.","                    properties:","                      minReadySeconds:","                        description: MinReadySeconds is the minimum number of seconds","                          for which a newly created DaemonSet pod should be ready","                          without any of its container crashing, for it to be considered","                          available. If specified, this overrides any minReadySeconds","                          value that may be set on the csi-node-driver DaemonSet.","                          If omitted, the csi-node-driver DaemonSet will use its default","                          value for minReadySeconds.","                        format: int32","                        maximum: 2147483647","                        minimum: 0","                        type: integer","                      template:","                        description: Template describes the csi-node-driver DaemonSet","                          pod that will be created.","                        properties:","                          metadata:","                            description: Metadata is a subset of a Kubernetes object's","                              metadata that is added to the pod's metadata.","                            properties:","                              annotations:","                                additionalProperties:","                                  type: string","                                description: Annotations is a map of arbitrary non-identifying","                                  metadata. Each of these key/value pairs are added","                                  to the object's annotations provided the key does","                                  not already exist in the object's annotations.","                                type: object","                              labels:","                                additionalProperties:","                                  type: string","                                description: Labels is a map of string keys and values","                                  that may match replicaset and service selectors.","                                  Each of these key/value pairs are added to the object's","                                  labels provided the key does not already exist in","                                  the object's labels.","                                type: object","                            type: object","                          spec:","                            description: Spec is the csi-node-driver DaemonSet's PodSpec.","                            properties:","                              affinity:","                                description: 'Affinity is a group of affinity scheduling","                                  rules for the csi-node-driver pods. If specified,","                                  this overrides any affinity that may be set on the","                                  csi-node-driver DaemonSet. If omitted, the csi-node-driver","                                  DaemonSet will use its default value for affinity.","                                  WARNING: Please note that this field will override","                                  the default csi-node-driver DaemonSet affinity.'","                                properties:","                                  nodeAffinity:","                                    description: Describes node affinity scheduling","                                      rules for the pod.","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node matches the corresponding matchExpressions;","                                          the node(s) with the highest sum are the","                                          most preferred.","                                        items:","                                          description: An empty preferred scheduling","                                            term matches all objects with implicit","                                            weight 0 (i.e. it's a no-op). A null preferred","                                            scheduling term matches no objects (i.e.","                                            is also a no-op).","                                          properties:","                                            preference:","                                              description: A node selector term, associated","                                                with the corresponding weight.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            weight:","                                              description: Weight associated with","                                                matching the corresponding nodeSelectorTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - preference","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to an update),","                                          the system may or may not try to eventually","                                          evict the pod from its node.","                                        properties:","                                          nodeSelectorTerms:","                                            description: Required. A list of node","                                              selector terms. The terms are ORed.","                                            items:","                                              description: A null or empty node selector","                                                term matches no objects. The requirements","                                                of them are ANDed. The TopologySelectorTerm","                                                type implements a subset of the NodeSelectorTerm.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            type: array","                                        required:","                                        - nodeSelectorTerms","                                        type: object","                                        x-kubernetes-map-type: atomic","                                    type: object","                                  podAffinity:","                                    description: Describes pod affinity scheduling","                                      rules (e.g. co-locate this pod in the same node,","                                      zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node has pods which matches the corresponding","                                          podAffinityTerm; the node(s) with the highest","                                          sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to a pod","                                          label update), the system may or may not","                                          try to eventually evict the pod from its","                                          node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                  podAntiAffinity:","                                    description: Describes pod anti-affinity scheduling","                                      rules (e.g. avoid putting this pod in the same","                                      node, zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          anti-affinity expressions specified by this","                                          field, but it may choose a node that violates","                                          one or more of the expressions. The node","                                          that is most preferred is the one with the","                                          greatest sum of weights, i.e. for each node","                                          that meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          anti-affinity expressions, etc.), compute","                                          a sum by iterating through the elements","                                          of this field and adding \"weight\" to the","                                          sum if the node has pods which matches the","                                          corresponding podAffinityTerm; the node(s)","                                          with the highest sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the anti-affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the anti-affinity requirements","                                          specified by this field cease to be met","                                          at some point during pod execution (e.g.","                                          due to a pod label update), the system may","                                          or may not try to eventually evict the pod","                                          from its node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                type: object","                              containers:","                                description: Containers is a list of csi-node-driver","                                  containers. If specified, this overrides the specified","                                  csi-node-driver DaemonSet containers. If omitted,","                                  the csi-node-driver DaemonSet will use its default","                                  values for its containers.","                                items:","                                  description: CSINodeDriverDaemonSetContainer is","                                    a csi-node-driver DaemonSet container.","                                  properties:","                                    name:","                                      description: Name is an enum which identifies","                                        the csi-node-driver DaemonSet container by","                                        name.","                                      enum:","                                      - csi-node-driver","                                      type: string","                                    resources:","                                      description: Resources allows customization","                                        of limits and requests for compute resources","                                        such as cpu and memory. If specified, this","                                        overrides the named csi-node-driver DaemonSet","                                        container's resources. If omitted, the csi-node-driver","                                        DaemonSet will use its default value for this","                                        container's resources.","                                      properties:","                                        claims:","                                          description: \"Claims lists the names of","                                            resources, defined in spec.resourceClaims,","                                            that are used by this container. \\n This","                                            is an alpha field and requires enabling","                                            the DynamicResourceAllocation feature","                                            gate. \\n This field is immutable. It can","                                            only be set for containers.\"","                                          items:","                                            description: ResourceClaim references","                                              one entry in PodSpec.ResourceClaims.","                                            properties:","                                              name:","                                                description: Name must match the name","                                                  of one entry in pod.spec.resourceClaims","                                                  of the Pod where this field is used.","                                                  It makes that resource available","                                                  inside a container.","                                                type: string","                                            required:","                                            - name","                                            type: object","                                          type: array","                                          x-kubernetes-list-map-keys:","                                          - name","                                          x-kubernetes-list-type: map","                                        limits:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Limits describes the maximum","                                            amount of compute resources allowed. More","                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                        requests:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Requests describes the minimum","                                            amount of compute resources required.","                                            If Requests is omitted for a container,","                                            it defaults to Limits if that is explicitly","                                            specified, otherwise to an implementation-defined","                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                      type: object","                                  required:","                                  - name","                                  type: object","                                type: array","                              nodeSelector:","                                additionalProperties:","                                  type: string","                                description: 'NodeSelector is the csi-node-driver","                                  pod''s scheduling constraints. If specified, each","                                  of the key/value pairs are added to the csi-node-driver","                                  DaemonSet nodeSelector provided the key does not","                                  already exist in the object''s nodeSelector. If","                                  omitted, the csi-node-driver DaemonSet will use","                                  its default value for nodeSelector. WARNING: Please","                                  note that this field will modify the default csi-node-driver","                                  DaemonSet nodeSelector.'","                                type: object","                              tolerations:","                                description: 'Tolerations is the csi-node-driver pod''s","                                  tolerations. If specified, this overrides any tolerations","                                  that may be set on the csi-node-driver DaemonSet.","                                  If omitted, the csi-node-driver DaemonSet will use","                                  its default value for tolerations. WARNING: Please","                                  note that this field will override the default csi-node-driver","                                  DaemonSet tolerations.'","                                items:","                                  description: The pod this Toleration is attached","                                    to tolerates any taint that matches the triple","                                    \u003ckey,value,effect\u003e using the matching operator","                                    \u003coperator\u003e.","                                  properties:","                                    effect:","                                      description: Effect indicates the taint effect","                                        to match. Empty means match all taint effects.","                                        When specified, allowed values are NoSchedule,","                                        PreferNoSchedule and NoExecute.","                                      type: string","                                    key:","                                      description: Key is the taint key that the toleration","                                        applies to. Empty means match all taint keys.","                                        If the key is empty, operator must be Exists;","                                        this combination means to match all values","                                        and all keys.","                                      type: string","                                    operator:","                                      description: Operator represents a key's relationship","                                        to the value. Valid operators are Exists and","                                        Equal. Defaults to Equal. Exists is equivalent","                                        to wildcard for value, so that a pod can tolerate","                                        all taints of a particular category.","                                      type: string","                                    tolerationSeconds:","                                      description: TolerationSeconds represents the","                                        period of time the toleration (which must","                                        be of effect NoExecute, otherwise this field","                                        is ignored) tolerates the taint. By default,","                                        it is not set, which means tolerate the taint","                                        forever (do not evict). Zero and negative","                                        values will be treated as 0 (evict immediately)","                                        by the system.","                                      format: int64","                                      type: integer","                                    value:","                                      description: Value is the taint value the toleration","                                        matches to. If the operator is Exists, the","                                        value should be empty, otherwise just a regular","                                        string.","                                      type: string","                                  type: object","                                type: array","                            type: object","                        type: object","                    type: object","                type: object","              fipsMode:","                description: 'FIPSMode uses images and features only that are using","                  FIPS 140-2 validated cryptographic modules and standards. Default:","                  Disabled'","                enum:","                - Enabled","                - Disabled","                type: string","              flexVolumePath:","                description: FlexVolumePath optionally specifies a custom path for","                  FlexVolume. If not specified, FlexVolume will be enabled by default.","                  If set to 'None', FlexVolume will be disabled. The default is based","                  on the kubernetesProvider.","                type: string","              imagePath:","                description: \"ImagePath allows for the path part of an image to be","                  specified. If specified then the specified value will be used as","                  the image path for each image. If not specified or empty, the default","                  for each image will be used. A special case value, UseDefault, is","                  supported to explicitly specify the default image path will be used","                  for each image. \\n Image format: `\u003cregistry\u003e\u003cimagePath\u003e/\u003cimagePrefix\u003e\u003cimageName\u003e:\u003cimage-tag\u003e`","                  \\n This option allows configuring the `\u003cimagePath\u003e` portion of the","                  above format.\"","                type: string","              imagePrefix:","                description: \"ImagePrefix allows for the prefix part of an image to","                  be specified. If specified then the given value will be used as","                  a prefix on each image. If not specified or empty, no prefix will","                  be used. A special case value, UseDefault, is supported to explicitly","                  specify the default image prefix will be used for each image. \\n","                  Image format: `\u003cregistry\u003e\u003cimagePath\u003e/\u003cimagePrefix\u003e\u003cimageName\u003e:\u003cimage-tag\u003e`","                  \\n This option allows configuring the `\u003cimagePrefix\u003e` portion of","                  the above format.\"","                type: string","              imagePullSecrets:","                description: ImagePullSecrets is an array of references to container","                  registry pull secrets to use. These are applied to all images to","                  be pulled.","                items:","                  description: LocalObjectReference contains enough information to","                    let you locate the referenced object inside the same namespace.","                  properties:","                    name:","                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","                        TODO: Add other useful fields. apiVersion, kind, uid?'","                      type: string","                  type: object","                  x-kubernetes-map-type: atomic","                type: array","              kubeletVolumePluginPath:","                description: 'KubeletVolumePluginPath optionally specifies enablement","                  of Calico CSI plugin. If not specified, CSI will be enabled by default.","                  If set to ''None'', CSI will be disabled. Default: /var/lib/kubelet'","                type: string","              kubernetesProvider:","                description: KubernetesProvider specifies a particular provider of","                  the Kubernetes platform and enables provider-specific configuration.","                  If the specified value is empty, the Operator will attempt to automatically","                  determine the current provider. If the specified value is not empty,","                  the Operator will still attempt auto-detection, but will additionally","                  compare the auto-detected value to the specified value to confirm","                  they match.","                enum:","                - \"\"","                - EKS","                - GKE","                - AKS","                - OpenShift","                - DockerEnterprise","                - RKE2","                type: string","              logging:","                description: Logging Configuration for Components","                properties:","                  cni:","                    description: Customized logging specification for calico-cni plugin","                    properties:","                      logFileMaxAgeDays:","                        description: 'Default: 30 (days)'","                        format: int32","                        type: integer","                      logFileMaxCount:","                        description: 'Default: 10'","                        format: int32","                        type: integer","                      logFileMaxSize:","                        anyOf:","                        - type: integer","                        - type: string","                        description: 'Default: 100Mi'","                        pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                        x-kubernetes-int-or-string: true","                      logSeverity:","                        description: 'Default: Info'","                        enum:","                        - Error","                        - Warning","                        - Debug","                        - Info","                        type: string","                    type: object","                type: object","              nodeMetricsPort:","                description: NodeMetricsPort specifies which port calico/node serves","                  prometheus metrics on. By default, metrics are not enabled. If specified,","                  this overrides any FelixConfiguration resources which may exist.","                  If omitted, then prometheus metrics may still be configured through","                  FelixConfiguration.","                format: int32","                type: integer","              nodeUpdateStrategy:","                description: NodeUpdateStrategy can be used to customize the desired","                  update strategy, such as the MaxUnavailable field.","                properties:","                  rollingUpdate:","                    description: 'Rolling update config params. Present only if type","                      = \"RollingUpdate\". --- TODO: Update this to follow our convention","                      for oneOf, whatever we decide it to be. Same as Deployment `strategy.rollingUpdate`.","                      See https://github.com/kubernetes/kubernetes/issues/35345'","                    properties:","                      maxSurge:","                        anyOf:","                        - type: integer","                        - type: string","                        description: 'The maximum number of nodes with an existing","                          available DaemonSet pod that can have an updated DaemonSet","                          pod during during an update. Value can be an absolute number","                          (ex: 5) or a percentage of desired pods (ex: 10%). This","                          can not be 0 if MaxUnavailable is 0. Absolute number is","                          calculated from percentage by rounding up to a minimum of","                          1. Default value is 0. Example: when this is set to 30%,","                          at most 30% of the total number of nodes that should be","                          running the daemon pod (i.e. status.desiredNumberScheduled)","                          can have their a new pod created before the old pod is marked","                          as deleted. The update starts by launching new pods on 30%","                          of nodes. Once an updated pod is available (Ready for at","                          least minReadySeconds) the old DaemonSet pod on that node","                          is marked deleted. If the old pod becomes unavailable for","                          any reason (Ready transitions to false, is evicted, or is","                          drained) an updated pod is immediatedly created on that","                          node without considering surge limits. Allowing surge implies","                          the possibility that the resources consumed by the daemonset","                          on any given node can double if the readiness check fails,","                          and so resource intensive daemonsets should take into account","                          that they may cause evictions during disruption.'","                        x-kubernetes-int-or-string: true","                      maxUnavailable:","                        anyOf:","                        - type: integer","                        - type: string","                        description: 'The maximum number of DaemonSet pods that can","                          be unavailable during the update. Value can be an absolute","                          number (ex: 5) or a percentage of total number of DaemonSet","                          pods at the start of the update (ex: 10%). Absolute number","                          is calculated from percentage by rounding up. This cannot","                          be 0 if MaxSurge is 0 Default value is 1. Example: when","                          this is set to 30%, at most 30% of the total number of nodes","                          that should be running the daemon pod (i.e. status.desiredNumberScheduled)","                          can have their pods stopped for an update at any given time.","                          The update starts by stopping at most 30% of those DaemonSet","                          pods and then brings up new DaemonSet pods in their place.","                          Once the new pods are available, it then proceeds onto other","                          DaemonSet pods, thus ensuring that at least 70% of original","                          number of DaemonSet pods are available at all times during","                          the update.'","                        x-kubernetes-int-or-string: true","                    type: object","                  type:","                    description: Type of daemon set update. Can be \"RollingUpdate\"","                      or \"OnDelete\". Default is RollingUpdate.","                    type: string","                type: object","              nonPrivileged:","                description: NonPrivileged configures Calico to be run in non-privileged","                  containers as non-root users where possible.","                type: string","              registry:","                description: \"Registry is the default Docker registry used for component","                  Docker images. If specified then the given value must end with a","                  slash character (`/`) and all images will be pulled from this registry.","                  If not specified then the default registries will be used. A special","                  case value, UseDefault, is supported to explicitly specify the default","                  registries will be used. \\n Image format: `\u003cregistry\u003e\u003cimagePath\u003e/\u003cimagePrefix\u003e\u003cimageName\u003e:\u003cimage-tag\u003e`","                  \\n This option allows configuring the `\u003cregistry\u003e` portion of the","                  above format.\"","                type: string","              typhaAffinity:","                description: Deprecated. Please use Installation.Spec.TyphaDeployment","                  instead. TyphaAffinity allows configuration of node affinity characteristics","                  for Typha pods.","                properties:","                  nodeAffinity:","                    description: NodeAffinity describes node affinity scheduling rules","                      for typha.","                    properties:","                      preferredDuringSchedulingIgnoredDuringExecution:","                        description: The scheduler will prefer to schedule pods to","                          nodes that satisfy the affinity expressions specified by","                          this field, but it may choose a node that violates one or","                          more of the expressions.","                        items:","                          description: An empty preferred scheduling term matches","                            all objects with implicit weight 0 (i.e. it's a no-op).","                            A null preferred scheduling term matches no objects (i.e.","                            is also a no-op).","                          properties:","                            preference:","                              description: A node selector term, associated with the","                                corresponding weight.","                              properties:","                                matchExpressions:","                                  description: A list of node selector requirements","                                    by node's labels.","                                  items:","                                    description: A node selector requirement is a","                                      selector that contains values, a key, and an","                                      operator that relates the key and values.","                                    properties:","                                      key:","                                        description: The label key that the selector","                                          applies to.","                                        type: string","                                      operator:","                                        description: Represents a key's relationship","                                          to a set of values. Valid operators are","                                          In, NotIn, Exists, DoesNotExist. Gt, and","                                          Lt.","                                        type: string","                                      values:","                                        description: An array of string values. If","                                          the operator is In or NotIn, the values","                                          array must be non-empty. If the operator","                                          is Exists or DoesNotExist, the values array","                                          must be empty. If the operator is Gt or","                                          Lt, the values array must have a single","                                          element, which will be interpreted as an","                                          integer. This array is replaced during a","                                          strategic merge patch.","                                        items:","                                          type: string","                                        type: array","                                    required:","                                    - key","                                    - operator","                                    type: object","                                  type: array","                                matchFields:","                                  description: A list of node selector requirements","                                    by node's fields.","                                  items:","                                    description: A node selector requirement is a","                                      selector that contains values, a key, and an","                                      operator that relates the key and values.","                                    properties:","                                      key:","                                        description: The label key that the selector","                                          applies to.","                                        type: string","                                      operator:","                                        description: Represents a key's relationship","                                          to a set of values. Valid operators are","                                          In, NotIn, Exists, DoesNotExist. Gt, and","                                          Lt.","                                        type: string","                                      values:","                                        description: An array of string values. If","                                          the operator is In or NotIn, the values","                                          array must be non-empty. If the operator","                                          is Exists or DoesNotExist, the values array","                                          must be empty. If the operator is Gt or","                                          Lt, the values array must have a single","                                          element, which will be interpreted as an","                                          integer. This array is replaced during a","                                          strategic merge patch.","                                        items:","                                          type: string","                                        type: array","                                    required:","                                    - key","                                    - operator","                                    type: object","                                  type: array","                              type: object","                              x-kubernetes-map-type: atomic","                            weight:","                              description: Weight associated with matching the corresponding","                                nodeSelectorTerm, in the range 1-100.","                              format: int32","                              type: integer","                          required:","                          - preference","                          - weight","                          type: object","                        type: array","                      requiredDuringSchedulingIgnoredDuringExecution:","                        description: 'WARNING: Please note that if the affinity requirements","                          specified by this field are not met at scheduling time,","                          the pod will NOT be scheduled onto the node. There is no","                          fallback to another affinity rules with this setting. This","                          may cause networking disruption or even catastrophic failure!","                          PreferredDuringSchedulingIgnoredDuringExecution should be","                          used for affinity unless there is a specific well understood","                          reason to use RequiredDuringSchedulingIgnoredDuringExecution","                          and you can guarantee that the RequiredDuringSchedulingIgnoredDuringExecution","                          will always have sufficient nodes to satisfy the requirement.","                          NOTE: RequiredDuringSchedulingIgnoredDuringExecution is","                          set by default for AKS nodes, to avoid scheduling Typhas","                          on virtual-nodes. If the affinity requirements specified","                          by this field cease to be met at some point during pod execution","                          (e.g. due to an update), the system may or may not try to","                          eventually evict the pod from its node.'","                        properties:","                          nodeSelectorTerms:","                            description: Required. A list of node selector terms.","                              The terms are ORed.","                            items:","                              description: A null or empty node selector term matches","                                no objects. The requirements of them are ANDed. The","                                TopologySelectorTerm type implements a subset of the","                                NodeSelectorTerm.","                              properties:","                                matchExpressions:","                                  description: A list of node selector requirements","                                    by node's labels.","                                  items:","                                    description: A node selector requirement is a","                                      selector that contains values, a key, and an","                                      operator that relates the key and values.","                                    properties:","                                      key:","                                        description: The label key that the selector","                                          applies to.","                                        type: string","                                      operator:","                                        description: Represents a key's relationship","                                          to a set of values. Valid operators are","                                          In, NotIn, Exists, DoesNotExist. Gt, and","                                          Lt.","                                        type: string","                                      values:","                                        description: An array of string values. If","                                          the operator is In or NotIn, the values","                                          array must be non-empty. If the operator","                                          is Exists or DoesNotExist, the values array","                                          must be empty. If the operator is Gt or","                                          Lt, the values array must have a single","                                          element, which will be interpreted as an","                                          integer. This array is replaced during a","                                          strategic merge patch.","                                        items:","                                          type: string","                                        type: array","                                    required:","                                    - key","                                    - operator","                                    type: object","                                  type: array","                                matchFields:","                                  description: A list of node selector requirements","                                    by node's fields.","                                  items:","                                    description: A node selector requirement is a","                                      selector that contains values, a key, and an","                                      operator that relates the key and values.","                                    properties:","                                      key:","                                        description: The label key that the selector","                                          applies to.","                                        type: string","                                      operator:","                                        description: Represents a key's relationship","                                          to a set of values. Valid operators are","                                          In, NotIn, Exists, DoesNotExist. Gt, and","                                          Lt.","                                        type: string","                                      values:","                                        description: An array of string values. If","                                          the operator is In or NotIn, the values","                                          array must be non-empty. If the operator","                                          is Exists or DoesNotExist, the values array","                                          must be empty. If the operator is Gt or","                                          Lt, the values array must have a single","                                          element, which will be interpreted as an","                                          integer. This array is replaced during a","                                          strategic merge patch.","                                        items:","                                          type: string","                                        type: array","                                    required:","                                    - key","                                    - operator","                                    type: object","                                  type: array","                              type: object","                              x-kubernetes-map-type: atomic","                            type: array","                        required:","                        - nodeSelectorTerms","                        type: object","                        x-kubernetes-map-type: atomic","                    type: object","                type: object","              typhaDeployment:","                description: TyphaDeployment configures the typha Deployment. If used","                  in conjunction with the deprecated ComponentResources or TyphaAffinity,","                  then these overrides take precedence.","                properties:","                  metadata:","                    description: Metadata is a subset of a Kubernetes object's metadata","                      that is added to the Deployment.","                    properties:","                      annotations:","                        additionalProperties:","                          type: string","                        description: Annotations is a map of arbitrary non-identifying","                          metadata. Each of these key/value pairs are added to the","                          object's annotations provided the key does not already exist","                          in the object's annotations.","                        type: object","                      labels:","                        additionalProperties:","                          type: string","                        description: Labels is a map of string keys and values that","                          may match replicaset and service selectors. Each of these","                          key/value pairs are added to the object's labels provided","                          the key does not already exist in the object's labels.","                        type: object","                    type: object","                  spec:","                    description: Spec is the specification of the typha Deployment.","                    properties:","                      minReadySeconds:","                        description: MinReadySeconds is the minimum number of seconds","                          for which a newly created Deployment pod should be ready","                          without any of its container crashing, for it to be considered","                          available. If specified, this overrides any minReadySeconds","                          value that may be set on the typha Deployment. If omitted,","                          the typha Deployment will use its default value for minReadySeconds.","                        format: int32","                        maximum: 2147483647","                        minimum: 0","                        type: integer","                      strategy:","                        description: The deployment strategy to use to replace existing","                          pods with new ones.","                        properties:","                          rollingUpdate:","                            description: Rolling update config params. Present only","                              if DeploymentStrategyType = RollingUpdate. to be.","                            properties:","                              maxSurge:","                                anyOf:","                                - type: integer","                                - type: string","                                description: 'The maximum number of pods that can","                                  be scheduled above the desired number of pods. Value","                                  can be an absolute number (ex: 5) or a percentage","                                  of desired pods (ex: 10%). This can not be 0 if","                                  MaxUnavailable is 0. Absolute number is calculated","                                  from percentage by rounding up. Defaults to 25%.","                                  Example: when this is set to 30%, the new ReplicaSet","                                  can be scaled up immediately when the rolling update","                                  starts, such that the total number of old and new","                                  pods do not exceed 130% of desired pods. Once old","                                  pods have been killed, new ReplicaSet can be scaled","                                  up further, ensuring that total number of pods running","                                  at any time during the update is at most 130% of","                                  desired pods.'","                                x-kubernetes-int-or-string: true","                              maxUnavailable:","                                anyOf:","                                - type: integer","                                - type: string","                                description: 'The maximum number of pods that can","                                  be unavailable during the update. Value can be an","                                  absolute number (ex: 5) or a percentage of desired","                                  pods (ex: 10%). Absolute number is calculated from","                                  percentage by rounding down. This can not be 0 if","                                  MaxSurge is 0. Defaults to 25%. Example: when this","                                  is set to 30%, the old ReplicaSet can be scaled","                                  down to 70% of desired pods immediately when the","                                  rolling update starts. Once new pods are ready,","                                  old ReplicaSet can be scaled down further, followed","                                  by scaling up the new ReplicaSet, ensuring that","                                  the total number of pods available at all times","                                  during the update is at least 70% of desired pods.'","                                x-kubernetes-int-or-string: true","                            type: object","                        type: object","                      template:","                        description: Template describes the typha Deployment pod that","                          will be created.","                        properties:","                          metadata:","                            description: Metadata is a subset of a Kubernetes object's","                              metadata that is added to the pod's metadata.","                            properties:","                              annotations:","                                additionalProperties:","                                  type: string","                                description: Annotations is a map of arbitrary non-identifying","                                  metadata. Each of these key/value pairs are added","                                  to the object's annotations provided the key does","                                  not already exist in the object's annotations.","                                type: object","                              labels:","                                additionalProperties:","                                  type: string","                                description: Labels is a map of string keys and values","                                  that may match replicaset and service selectors.","                                  Each of these key/value pairs are added to the object's","                                  labels provided the key does not already exist in","                                  the object's labels.","                                type: object","                            type: object","                          spec:","                            description: Spec is the typha Deployment's PodSpec.","                            properties:","                              affinity:","                                description: 'Affinity is a group of affinity scheduling","                                  rules for the typha pods. If specified, this overrides","                                  any affinity that may be set on the typha Deployment.","                                  If omitted, the typha Deployment will use its default","                                  value for affinity. If used in conjunction with","                                  the deprecated TyphaAffinity, then this value takes","                                  precedence. WARNING: Please note that this field","                                  will override the default calico-typha Deployment","                                  affinity.'","                                properties:","                                  nodeAffinity:","                                    description: Describes node affinity scheduling","                                      rules for the pod.","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node matches the corresponding matchExpressions;","                                          the node(s) with the highest sum are the","                                          most preferred.","                                        items:","                                          description: An empty preferred scheduling","                                            term matches all objects with implicit","                                            weight 0 (i.e. it's a no-op). A null preferred","                                            scheduling term matches no objects (i.e.","                                            is also a no-op).","                                          properties:","                                            preference:","                                              description: A node selector term, associated","                                                with the corresponding weight.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            weight:","                                              description: Weight associated with","                                                matching the corresponding nodeSelectorTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - preference","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to an update),","                                          the system may or may not try to eventually","                                          evict the pod from its node.","                                        properties:","                                          nodeSelectorTerms:","                                            description: Required. A list of node","                                              selector terms. The terms are ORed.","                                            items:","                                              description: A null or empty node selector","                                                term matches no objects. The requirements","                                                of them are ANDed. The TopologySelectorTerm","                                                type implements a subset of the NodeSelectorTerm.","                                              properties:","                                                matchExpressions:","                                                  description: A list of node selector","                                                    requirements by node's labels.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchFields:","                                                  description: A list of node selector","                                                    requirements by node's fields.","                                                  items:","                                                    description: A node selector requirement","                                                      is a selector that contains","                                                      values, a key, and an operator","                                                      that relates the key and values.","                                                    properties:","                                                      key:","                                                        description: The label key","                                                          that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: Represents a","                                                          key's relationship to a","                                                          set of values. Valid operators","                                                          are In, NotIn, Exists, DoesNotExist.","                                                          Gt, and Lt.","                                                        type: string","                                                      values:","                                                        description: An array of string","                                                          values. If the operator","                                                          is In or NotIn, the values","                                                          array must be non-empty.","                                                          If the operator is Exists","                                                          or DoesNotExist, the values","                                                          array must be empty. If","                                                          the operator is Gt or Lt,","                                                          the values array must have","                                                          a single element, which","                                                          will be interpreted as an","                                                          integer. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            type: array","                                        required:","                                        - nodeSelectorTerms","                                        type: object","                                        x-kubernetes-map-type: atomic","                                    type: object","                                  podAffinity:","                                    description: Describes pod affinity scheduling","                                      rules (e.g. co-locate this pod in the same node,","                                      zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          affinity expressions specified by this field,","                                          but it may choose a node that violates one","                                          or more of the expressions. The node that","                                          is most preferred is the one with the greatest","                                          sum of weights, i.e. for each node that","                                          meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          affinity expressions, etc.), compute a sum","                                          by iterating through the elements of this","                                          field and adding \"weight\" to the sum if","                                          the node has pods which matches the corresponding","                                          podAffinityTerm; the node(s) with the highest","                                          sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the affinity requirements specified","                                          by this field cease to be met at some point","                                          during pod execution (e.g. due to a pod","                                          label update), the system may or may not","                                          try to eventually evict the pod from its","                                          node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                  podAntiAffinity:","                                    description: Describes pod anti-affinity scheduling","                                      rules (e.g. avoid putting this pod in the same","                                      node, zone, etc. as some other pod(s)).","                                    properties:","                                      preferredDuringSchedulingIgnoredDuringExecution:","                                        description: The scheduler will prefer to","                                          schedule pods to nodes that satisfy the","                                          anti-affinity expressions specified by this","                                          field, but it may choose a node that violates","                                          one or more of the expressions. The node","                                          that is most preferred is the one with the","                                          greatest sum of weights, i.e. for each node","                                          that meets all of the scheduling requirements","                                          (resource request, requiredDuringScheduling","                                          anti-affinity expressions, etc.), compute","                                          a sum by iterating through the elements","                                          of this field and adding \"weight\" to the","                                          sum if the node has pods which matches the","                                          corresponding podAffinityTerm; the node(s)","                                          with the highest sum are the most preferred.","                                        items:","                                          description: The weights of all of the matched","                                            WeightedPodAffinityTerm fields are added","                                            per-node to find the most preferred node(s)","                                          properties:","                                            podAffinityTerm:","                                              description: Required. A pod affinity","                                                term, associated with the corresponding","                                                weight.","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            weight:","                                              description: weight associated with","                                                matching the corresponding podAffinityTerm,","                                                in the range 1-100.","                                              format: int32","                                              type: integer","                                          required:","                                          - podAffinityTerm","                                          - weight","                                          type: object","                                        type: array","                                      requiredDuringSchedulingIgnoredDuringExecution:","                                        description: If the anti-affinity requirements","                                          specified by this field are not met at scheduling","                                          time, the pod will not be scheduled onto","                                          the node. If the anti-affinity requirements","                                          specified by this field cease to be met","                                          at some point during pod execution (e.g.","                                          due to a pod label update), the system may","                                          or may not try to eventually evict the pod","                                          from its node. When there are multiple elements,","                                          the lists of nodes corresponding to each","                                          podAffinityTerm are intersected, i.e. all","                                          terms must be satisfied.","                                        items:","                                          description: Defines a set of pods (namely","                                            those matching the labelSelector relative","                                            to the given namespace(s)) that this pod","                                            should be co-located (affinity) or not","                                            co-located (anti-affinity) with, where","                                            co-located is defined as running on a","                                            node whose value of the label with key","                                            \u003ctopologyKey\u003e matches that of any node","                                            on which a pod of the set of pods is running","                                          properties:","                                            labelSelector:","                                              description: A label query over a set","                                                of resources, in this case pods.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaceSelector:","                                              description: A label query over the","                                                set of namespaces that the term applies","                                                to. The term is applied to the union","                                                of the namespaces selected by this","                                                field and the ones listed in the namespaces","                                                field. null selector and null or empty","                                                namespaces list means \"this pod's","                                                namespace\". An empty selector ({})","                                                matches all namespaces.","                                              properties:","                                                matchExpressions:","                                                  description: matchExpressions is","                                                    a list of label selector requirements.","                                                    The requirements are ANDed.","                                                  items:","                                                    description: A label selector","                                                      requirement is a selector that","                                                      contains values, a key, and","                                                      an operator that relates the","                                                      key and values.","                                                    properties:","                                                      key:","                                                        description: key is the label","                                                          key that the selector applies","                                                          to.","                                                        type: string","                                                      operator:","                                                        description: operator represents","                                                          a key's relationship to","                                                          a set of values. Valid operators","                                                          are In, NotIn, Exists and","                                                          DoesNotExist.","                                                        type: string","                                                      values:","                                                        description: values is an","                                                          array of string values.","                                                          If the operator is In or","                                                          NotIn, the values array","                                                          must be non-empty. If the","                                                          operator is Exists or DoesNotExist,","                                                          the values array must be","                                                          empty. This array is replaced","                                                          during a strategic merge","                                                          patch.","                                                        items:","                                                          type: string","                                                        type: array","                                                    required:","                                                    - key","                                                    - operator","                                                    type: object","                                                  type: array","                                                matchLabels:","                                                  additionalProperties:","                                                    type: string","                                                  description: matchLabels is a map","                                                    of {key,value} pairs. A single","                                                    {key,value} in the matchLabels","                                                    map is equivalent to an element","                                                    of matchExpressions, whose key","                                                    field is \"key\", the operator is","                                                    \"In\", and the values array contains","                                                    only \"value\". The requirements","                                                    are ANDed.","                                                  type: object","                                              type: object","                                              x-kubernetes-map-type: atomic","                                            namespaces:","                                              description: namespaces specifies a","                                                static list of namespace names that","                                                the term applies to. The term is applied","                                                to the union of the namespaces listed","                                                in this field and the ones selected","                                                by namespaceSelector. null or empty","                                                namespaces list and null namespaceSelector","                                                means \"this pod's namespace\".","                                              items:","                                                type: string","                                              type: array","                                            topologyKey:","                                              description: This pod should be co-located","                                                (affinity) or not co-located (anti-affinity)","                                                with the pods matching the labelSelector","                                                in the specified namespaces, where","                                                co-located is defined as running on","                                                a node whose value of the label with","                                                key topologyKey matches that of any","                                                node on which any of the selected","                                                pods is running. Empty topologyKey","                                                is not allowed.","                                              type: string","                                          required:","                                          - topologyKey","                                          type: object","                                        type: array","                                    type: object","                                type: object","                              containers:","                                description: Containers is a list of typha containers.","                                  If specified, this overrides the specified typha","                                  Deployment containers. If omitted, the typha Deployment","                                  will use its default values for its containers.","                                items:","                                  description: TyphaDeploymentContainer is a typha","                                    Deployment container.","                                  properties:","                                    name:","                                      description: Name is an enum which identifies","                                        the typha Deployment container by name.","                                      enum:","                                      - calico-typha","                                      type: string","                                    resources:","                                      description: Resources allows customization","                                        of limits and requests for compute resources","                                        such as cpu and memory. If specified, this","                                        overrides the named typha Deployment container's","                                        resources. If omitted, the typha Deployment","                                        will use its default value for this container's","                                        resources. If used in conjunction with the","                                        deprecated ComponentResources, then this value","                                        takes precedence.","                                      properties:","                                        claims:","                                          description: \"Claims lists the names of","                                            resources, defined in spec.resourceClaims,","                                            that are used by this container. \\n This","                                            is an alpha field and requires enabling","                                            the DynamicResourceAllocation feature","                                            gate. \\n This field is immutable. It can","                                            only be set for containers.\"","                                          items:","                                            description: ResourceClaim references","                                              one entry in PodSpec.ResourceClaims.","                                            properties:","                                              name:","                                                description: Name must match the name","                                                  of one entry in pod.spec.resourceClaims","                                                  of the Pod where this field is used.","                                                  It makes that resource available","                                                  inside a container.","                                                type: string","                                            required:","                                            - name","                                            type: object","                                          type: array","                                          x-kubernetes-list-map-keys:","                                          - name","                                          x-kubernetes-list-type: map","                                        limits:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Limits describes the maximum","                                            amount of compute resources allowed. More","                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                        requests:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Requests describes the minimum","                                            amount of compute resources required.","                                            If Requests is omitted for a container,","                                            it defaults to Limits if that is explicitly","                                            specified, otherwise to an implementation-defined","                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                      type: object","                                  required:","                                  - name","                                  type: object","                                type: array","                              initContainers:","                                description: InitContainers is a list of typha init","                                  containers. If specified, this overrides the specified","                                  typha Deployment init containers. If omitted, the","                                  typha Deployment will use its default values for","                                  its init containers.","                                items:","                                  description: TyphaDeploymentInitContainer is a typha","                                    Deployment init container.","                                  properties:","                                    name:","                                      description: Name is an enum which identifies","                                        the typha Deployment init container by name.","                                      enum:","                                      - typha-certs-key-cert-provisioner","                                      type: string","                                    resources:","                                      description: Resources allows customization","                                        of limits and requests for compute resources","                                        such as cpu and memory. If specified, this","                                        overrides the named typha Deployment init","                                        container's resources. If omitted, the typha","                                        Deployment will use its default value for","                                        this init container's resources. If used in","                                        conjunction with the deprecated ComponentResources,","                                        then this value takes precedence.","                                      properties:","                                        claims:","                                          description: \"Claims lists the names of","                                            resources, defined in spec.resourceClaims,","                                            that are used by this container. \\n This","                                            is an alpha field and requires enabling","                                            the DynamicResourceAllocation feature","                                            gate. \\n This field is immutable. It can","                                            only be set for containers.\"","                                          items:","                                            description: ResourceClaim references","                                              one entry in PodSpec.ResourceClaims.","                                            properties:","                                              name:","                                                description: Name must match the name","                                                  of one entry in pod.spec.resourceClaims","                                                  of the Pod where this field is used.","                                                  It makes that resource available","                                                  inside a container.","                                                type: string","                                            required:","                                            - name","                                            type: object","                                          type: array","                                          x-kubernetes-list-map-keys:","                                          - name","                                          x-kubernetes-list-type: map","                                        limits:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Limits describes the maximum","                                            amount of compute resources allowed. More","                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                        requests:","                                          additionalProperties:","                                            anyOf:","                                            - type: integer","                                            - type: string","                                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                            x-kubernetes-int-or-string: true","                                          description: 'Requests describes the minimum","                                            amount of compute resources required.","                                            If Requests is omitted for a container,","                                            it defaults to Limits if that is explicitly","                                            specified, otherwise to an implementation-defined","                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                          type: object","                                      type: object","                                  required:","                                  - name","                                  type: object","                                type: array","                              nodeSelector:","                                additionalProperties:","                                  type: string","                                description: 'NodeSelector is the calico-typha pod''s","                                  scheduling constraints. If specified, each of the","                                  key/value pairs are added to the calico-typha Deployment","                                  nodeSelector provided the key does not already exist","                                  in the object''s nodeSelector. If omitted, the calico-typha","                                  Deployment will use its default value for nodeSelector.","                                  WARNING: Please note that this field will modify","                                  the default calico-typha Deployment nodeSelector.'","                                type: object","                              terminationGracePeriodSeconds:","                                description: Optional duration in seconds the pod","                                  needs to terminate gracefully. May be decreased","                                  in delete request. Value must be non-negative integer.","                                  The value zero indicates stop immediately via the","                                  kill signal (no opportunity to shut down). If this","                                  value is nil, the default grace period will be used","                                  instead. The grace period is the duration in seconds","                                  after the processes running in the pod are sent","                                  a termination signal and the time when the processes","                                  are forcibly halted with a kill signal. Set this","                                  value longer than the expected cleanup time for","                                  your process. Defaults to 30 seconds.","                                format: int64","                                type: integer","                              tolerations:","                                description: 'Tolerations is the typha pod''s tolerations.","                                  If specified, this overrides any tolerations that","                                  may be set on the typha Deployment. If omitted,","                                  the typha Deployment will use its default value","                                  for tolerations. WARNING: Please note that this","                                  field will override the default calico-typha Deployment","                                  tolerations.'","                                items:","                                  description: The pod this Toleration is attached","                                    to tolerates any taint that matches the triple","                                    \u003ckey,value,effect\u003e using the matching operator","                                    \u003coperator\u003e.","                                  properties:","                                    effect:","                                      description: Effect indicates the taint effect","                                        to match. Empty means match all taint effects.","                                        When specified, allowed values are NoSchedule,","                                        PreferNoSchedule and NoExecute.","                                      type: string","                                    key:","                                      description: Key is the taint key that the toleration","                                        applies to. Empty means match all taint keys.","                                        If the key is empty, operator must be Exists;","                                        this combination means to match all values","                                        and all keys.","                                      type: string","                                    operator:","                                      description: Operator represents a key's relationship","                                        to the value. Valid operators are Exists and","                                        Equal. Defaults to Equal. Exists is equivalent","                                        to wildcard for value, so that a pod can tolerate","                                        all taints of a particular category.","                                      type: string","                                    tolerationSeconds:","                                      description: TolerationSeconds represents the","                                        period of time the toleration (which must","                                        be of effect NoExecute, otherwise this field","                                        is ignored) tolerates the taint. By default,","                                        it is not set, which means tolerate the taint","                                        forever (do not evict). Zero and negative","                                        values will be treated as 0 (evict immediately)","                                        by the system.","                                      format: int64","                                      type: integer","                                    value:","                                      description: Value is the taint value the toleration","                                        matches to. If the operator is Exists, the","                                        value should be empty, otherwise just a regular","                                        string.","                                      type: string","                                  type: object","                                type: array","                              topologySpreadConstraints:","                                description: TopologySpreadConstraints describes how","                                  a group of pods ought to spread across topology","                                  domains. Scheduler will schedule pods in a way which","                                  abides by the constraints. All topologySpreadConstraints","                                  are ANDed.","                                items:","                                  description: TopologySpreadConstraint specifies","                                    how to spread matching pods among the given topology.","                                  properties:","                                    labelSelector:","                                      description: LabelSelector is used to find matching","                                        pods. Pods that match this label selector","                                        are counted to determine the number of pods","                                        in their corresponding topology domain.","                                      properties:","                                        matchExpressions:","                                          description: matchExpressions is a list","                                            of label selector requirements. The requirements","                                            are ANDed.","                                          items:","                                            description: A label selector requirement","                                              is a selector that contains values,","                                              a key, and an operator that relates","                                              the key and values.","                                            properties:","                                              key:","                                                description: key is the label key","                                                  that the selector applies to.","                                                type: string","                                              operator:","                                                description: operator represents a","                                                  key's relationship to a set of values.","                                                  Valid operators are In, NotIn, Exists","                                                  and DoesNotExist.","                                                type: string","                                              values:","                                                description: values is an array of","                                                  string values. If the operator is","                                                  In or NotIn, the values array must","                                                  be non-empty. If the operator is","                                                  Exists or DoesNotExist, the values","                                                  array must be empty. This array","                                                  is replaced during a strategic merge","                                                  patch.","                                                items:","                                                  type: string","                                                type: array","                                            required:","                                            - key","                                            - operator","                                            type: object","                                          type: array","                                        matchLabels:","                                          additionalProperties:","                                            type: string","                                          description: matchLabels is a map of {key,value}","                                            pairs. A single {key,value} in the matchLabels","                                            map is equivalent to an element of matchExpressions,","                                            whose key field is \"key\", the operator","                                            is \"In\", and the values array contains","                                            only \"value\". The requirements are ANDed.","                                          type: object","                                      type: object","                                      x-kubernetes-map-type: atomic","                                    matchLabelKeys:","                                      description: MatchLabelKeys is a set of pod","                                        label keys to select the pods over which spreading","                                        will be calculated. The keys are used to lookup","                                        values from the incoming pod labels, those","                                        key-value labels are ANDed with labelSelector","                                        to select the group of existing pods over","                                        which spreading will be calculated for the","                                        incoming pod. Keys that don't exist in the","                                        incoming pod labels will be ignored. A null","                                        or empty list means only match against labelSelector.","                                      items:","                                        type: string","                                      type: array","                                      x-kubernetes-list-type: atomic","                                    maxSkew:","                                      description: 'MaxSkew describes the degree to","                                        which pods may be unevenly distributed. When","                                        `whenUnsatisfiable=DoNotSchedule`, it is the","                                        maximum permitted difference between the number","                                        of matching pods in the target topology and","                                        the global minimum. The global minimum is","                                        the minimum number of matching pods in an","                                        eligible domain or zero if the number of eligible","                                        domains is less than MinDomains. For example,","                                        in a 3-zone cluster, MaxSkew is set to 1,","                                        and pods with the same labelSelector spread","                                        as 2/2/1: In this case, the global minimum","                                        is 1. | zone1 | zone2 | zone3 | |  P P  |  P","                                        P  |   P   | - if MaxSkew is 1, incoming pod","                                        can only be scheduled to zone3 to become 2/2/2;","                                        scheduling it onto zone1(zone2) would make","                                        the ActualSkew(3-1) on zone1(zone2) violate","                                        MaxSkew(1). - if MaxSkew is 2, incoming pod","                                        can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,","                                        it is used to give higher precedence to topologies","                                        that satisfy it. It''s a required field. Default","                                        value is 1 and 0 is not allowed.'","                                      format: int32","                                      type: integer","                                    minDomains:","                                      description: \"MinDomains indicates a minimum","                                        number of eligible domains. When the number","                                        of eligible domains with matching topology","                                        keys is less than minDomains, Pod Topology","                                        Spread treats \\\"global minimum\\\" as 0, and","                                        then the calculation of Skew is performed.","                                        And when the number of eligible domains with","                                        matching topology keys equals or greater than","                                        minDomains, this value has no effect on scheduling.","                                        As a result, when the number of eligible domains","                                        is less than minDomains, scheduler won't schedule","                                        more than maxSkew Pods to those domains. If","                                        value is nil, the constraint behaves as if","                                        MinDomains is equal to 1. Valid values are","                                        integers greater than 0. When value is not","                                        nil, WhenUnsatisfiable must be DoNotSchedule.","                                        \\n For example, in a 3-zone cluster, MaxSkew","                                        is set to 2, MinDomains is set to 5 and pods","                                        with the same labelSelector spread as 2/2/2:","                                        | zone1 | zone2 | zone3 | |  P P  |  P P  |","                                        \\ P P  | The number of domains is less than","                                        5(MinDomains), so \\\"global minimum\\\" is treated","                                        as 0. In this situation, new pod with the","                                        same labelSelector cannot be scheduled, because","                                        computed skew will be 3(3 - 0) if new Pod","                                        is scheduled to any of the three zones, it","                                        will violate MaxSkew. \\n This is a beta field","                                        and requires the MinDomainsInPodTopologySpread","                                        feature gate to be enabled (enabled by default).\"","                                      format: int32","                                      type: integer","                                    nodeAffinityPolicy:","                                      description: \"NodeAffinityPolicy indicates how","                                        we will treat Pod's nodeAffinity/nodeSelector","                                        when calculating pod topology spread skew.","                                        Options are: - Honor: only nodes matching","                                        nodeAffinity/nodeSelector are included in","                                        the calculations. - Ignore: nodeAffinity/nodeSelector","                                        are ignored. All nodes are included in the","                                        calculations. \\n If this value is nil, the","                                        behavior is equivalent to the Honor policy.","                                        This is a beta-level feature default enabled","                                        by the NodeInclusionPolicyInPodTopologySpread","                                        feature flag.\"","                                      type: string","                                    nodeTaintsPolicy:","                                      description: \"NodeTaintsPolicy indicates how","                                        we will treat node taints when calculating","                                        pod topology spread skew. Options are: - Honor:","                                        nodes without taints, along with tainted nodes","                                        for which the incoming pod has a toleration,","                                        are included. - Ignore: node taints are ignored.","                                        All nodes are included. \\n If this value is","                                        nil, the behavior is equivalent to the Ignore","                                        policy. This is a beta-level feature default","                                        enabled by the NodeInclusionPolicyInPodTopologySpread","                                        feature flag.\"","                                      type: string","                                    topologyKey:","                                      description: TopologyKey is the key of node","                                        labels. Nodes that have a label with this","                                        key and identical values are considered to","                                        be in the same topology. We consider each","                                        \u003ckey, value\u003e as a \"bucket\", and try to put","                                        balanced number of pods into each bucket.","                                        We define a domain as a particular instance","                                        of a topology. Also, we define an eligible","                                        domain as a domain whose nodes meet the requirements","                                        of nodeAffinityPolicy and nodeTaintsPolicy.","                                        e.g. If TopologyKey is \"kubernetes.io/hostname\",","                                        each Node is a domain of that topology. And,","                                        if TopologyKey is \"topology.kubernetes.io/zone\",","                                        each zone is a domain of that topology. It's","                                        a required field.","                                      type: string","                                    whenUnsatisfiable:","                                      description: 'WhenUnsatisfiable indicates how","                                        to deal with a pod if it doesn''t satisfy","                                        the spread constraint. - DoNotSchedule (default)","                                        tells the scheduler not to schedule it. -","                                        ScheduleAnyway tells the scheduler to schedule","                                        the pod in any location, but giving higher","                                        precedence to topologies that would help reduce","                                        the skew. A constraint is considered \"Unsatisfiable\"","                                        for an incoming pod if and only if every possible","                                        node assignment for that pod would violate","                                        \"MaxSkew\" on some topology. For example, in","                                        a 3-zone cluster, MaxSkew is set to 1, and","                                        pods with the same labelSelector spread as","                                        3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   |","                                        If WhenUnsatisfiable is set to DoNotSchedule,","                                        incoming pod can only be scheduled to zone2(zone3)","                                        to become 3/2/1(3/1/2) as ActualSkew(2-1)","                                        on zone2(zone3) satisfies MaxSkew(1). In other","                                        words, the cluster can still be imbalanced,","                                        but scheduler won''t make it *more* imbalanced.","                                        It''s a required field.'","                                      type: string","                                  required:","                                  - maxSkew","                                  - topologyKey","                                  - whenUnsatisfiable","                                  type: object","                                type: array","                            type: object","                        type: object","                    type: object","                type: object","              typhaMetricsPort:","                description: TyphaMetricsPort specifies which port calico/typha serves","                  prometheus metrics on. By default, metrics are not enabled.","                format: int32","                type: integer","              variant:","                description: 'Variant is the product to install - one of Calico or","                  TigeraSecureEnterprise Default: Calico'","                enum:","                - Calico","                - TigeraSecureEnterprise","                type: string","            type: object","          status:","            description: Most recently observed state for the Calico or Calico Enterprise","              installation.","            properties:","              calicoVersion:","                description: CalicoVersion shows the current running version of calico.","                  CalicoVersion along with Variant is needed to know the exact version","                  deployed.","                type: string","              computed:","                description: Computed is the final installation including overlaid","                  resources.","                properties:","                  calicoKubeControllersDeployment:","                    description: CalicoKubeControllersDeployment configures the calico-kube-controllers","                      Deployment. If used in conjunction with the deprecated ComponentResources,","                      then these overrides take precedence.","                    properties:","                      metadata:","                        description: Metadata is a subset of a Kubernetes object's","                          metadata that is added to the Deployment.","                        properties:","                          annotations:","                            additionalProperties:","                              type: string","                            description: Annotations is a map of arbitrary non-identifying","                              metadata. Each of these key/value pairs are added to","                              the object's annotations provided the key does not already","                              exist in the object's annotations.","                            type: object","                          labels:","                            additionalProperties:","                              type: string","                            description: Labels is a map of string keys and values","                              that may match replicaset and service selectors. Each","                              of these key/value pairs are added to the object's labels","                              provided the key does not already exist in the object's","                              labels.","                            type: object","                        type: object","                      spec:","                        description: Spec is the specification of the calico-kube-controllers","                          Deployment.","                        properties:","                          minReadySeconds:","                            description: MinReadySeconds is the minimum number of","                              seconds for which a newly created Deployment pod should","                              be ready without any of its container crashing, for","                              it to be considered available. If specified, this overrides","                              any minReadySeconds value that may be set on the calico-kube-controllers","                              Deployment. If omitted, the calico-kube-controllers","                              Deployment will use its default value for minReadySeconds.","                            format: int32","                            maximum: 2147483647","                            minimum: 0","                            type: integer","                          template:","                            description: Template describes the calico-kube-controllers","                              Deployment pod that will be created.","                            properties:","                              metadata:","                                description: Metadata is a subset of a Kubernetes","                                  object's metadata that is added to the pod's metadata.","                                properties:","                                  annotations:","                                    additionalProperties:","                                      type: string","                                    description: Annotations is a map of arbitrary","                                      non-identifying metadata. Each of these key/value","                                      pairs are added to the object's annotations","                                      provided the key does not already exist in the","                                      object's annotations.","                                    type: object","                                  labels:","                                    additionalProperties:","                                      type: string","                                    description: Labels is a map of string keys and","                                      values that may match replicaset and service","                                      selectors. Each of these key/value pairs are","                                      added to the object's labels provided the key","                                      does not already exist in the object's labels.","                                    type: object","                                type: object","                              spec:","                                description: Spec is the calico-kube-controllers Deployment's","                                  PodSpec.","                                properties:","                                  affinity:","                                    description: 'Affinity is a group of affinity","                                      scheduling rules for the calico-kube-controllers","                                      pods. If specified, this overrides any affinity","                                      that may be set on the calico-kube-controllers","                                      Deployment. If omitted, the calico-kube-controllers","                                      Deployment will use its default value for affinity.","                                      WARNING: Please note that this field will override","                                      the default calico-kube-controllers Deployment","                                      affinity.'","                                    properties:","                                      nodeAffinity:","                                        description: Describes node affinity scheduling","                                          rules for the pod.","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the affinity expressions specified by","                                              this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node matches the corresponding","                                              matchExpressions; the node(s) with the","                                              highest sum are the most preferred.","                                            items:","                                              description: An empty preferred scheduling","                                                term matches all objects with implicit","                                                weight 0 (i.e. it's a no-op). A null","                                                preferred scheduling term matches","                                                no objects (i.e. is also a no-op).","                                              properties:","                                                preference:","                                                  description: A node selector term,","                                                    associated with the corresponding","                                                    weight.","                                                  properties:","                                                    matchExpressions:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        labels.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchFields:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        fields.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                weight:","                                                  description: Weight associated with","                                                    matching the corresponding nodeSelectorTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - preference","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to an update),","                                              the system may or may not try to eventually","                                              evict the pod from its node.","                                            properties:","                                              nodeSelectorTerms:","                                                description: Required. A list of node","                                                  selector terms. The terms are ORed.","                                                items:","                                                  description: A null or empty node","                                                    selector term matches no objects.","                                                    The requirements of them are ANDed.","                                                    The TopologySelectorTerm type","                                                    implements a subset of the NodeSelectorTerm.","                                                  properties:","                                                    matchExpressions:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        labels.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchFields:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        fields.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                type: array","                                            required:","                                            - nodeSelectorTerms","                                            type: object","                                            x-kubernetes-map-type: atomic","                                        type: object","                                      podAffinity:","                                        description: Describes pod affinity scheduling","                                          rules (e.g. co-locate this pod in the same","                                          node, zone, etc. as some other pod(s)).","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the affinity expressions specified by","                                              this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node has pods which matches the","                                              corresponding podAffinityTerm; the node(s)","                                              with the highest sum are the most preferred.","                                            items:","                                              description: The weights of all of the","                                                matched WeightedPodAffinityTerm fields","                                                are added per-node to find the most","                                                preferred node(s)","                                              properties:","                                                podAffinityTerm:","                                                  description: Required. A pod affinity","                                                    term, associated with the corresponding","                                                    weight.","                                                  properties:","                                                    labelSelector:","                                                      description: A label query over","                                                        a set of resources, in this","                                                        case pods.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaceSelector:","                                                      description: A label query over","                                                        the set of namespaces that","                                                        the term applies to. The term","                                                        is applied to the union of","                                                        the namespaces selected by","                                                        this field and the ones listed","                                                        in the namespaces field. null","                                                        selector and null or empty","                                                        namespaces list means \"this","                                                        pod's namespace\". An empty","                                                        selector ({}) matches all","                                                        namespaces.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaces:","                                                      description: namespaces specifies","                                                        a static list of namespace","                                                        names that the term applies","                                                        to. The term is applied to","                                                        the union of the namespaces","                                                        listed in this field and the","                                                        ones selected by namespaceSelector.","                                                        null or empty namespaces list","                                                        and null namespaceSelector","                                                        means \"this pod's namespace\".","                                                      items:","                                                        type: string","                                                      type: array","                                                    topologyKey:","                                                      description: This pod should","                                                        be co-located (affinity) or","                                                        not co-located (anti-affinity)","                                                        with the pods matching the","                                                        labelSelector in the specified","                                                        namespaces, where co-located","                                                        is defined as running on a","                                                        node whose value of the label","                                                        with key topologyKey matches","                                                        that of any node on which","                                                        any of the selected pods is","                                                        running. Empty topologyKey","                                                        is not allowed.","                                                      type: string","                                                  required:","                                                  - topologyKey","                                                  type: object","                                                weight:","                                                  description: weight associated with","                                                    matching the corresponding podAffinityTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - podAffinityTerm","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to a pod label","                                              update), the system may or may not try","                                              to eventually evict the pod from its","                                              node. When there are multiple elements,","                                              the lists of nodes corresponding to","                                              each podAffinityTerm are intersected,","                                              i.e. all terms must be satisfied.","                                            items:","                                              description: Defines a set of pods (namely","                                                those matching the labelSelector relative","                                                to the given namespace(s)) that this","                                                pod should be co-located (affinity)","                                                or not co-located (anti-affinity)","                                                with, where co-located is defined","                                                as running on a node whose value of","                                                the label with key \u003ctopologyKey\u003e matches","                                                that of any node on which a pod of","                                                the set of pods is running","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            type: array","                                        type: object","                                      podAntiAffinity:","                                        description: Describes pod anti-affinity scheduling","                                          rules (e.g. avoid putting this pod in the","                                          same node, zone, etc. as some other pod(s)).","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the anti-affinity expressions specified","                                              by this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling anti-affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node has pods which matches the","                                              corresponding podAffinityTerm; the node(s)","                                              with the highest sum are the most preferred.","                                            items:","                                              description: The weights of all of the","                                                matched WeightedPodAffinityTerm fields","                                                are added per-node to find the most","                                                preferred node(s)","                                              properties:","                                                podAffinityTerm:","                                                  description: Required. A pod affinity","                                                    term, associated with the corresponding","                                                    weight.","                                                  properties:","                                                    labelSelector:","                                                      description: A label query over","                                                        a set of resources, in this","                                                        case pods.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaceSelector:","                                                      description: A label query over","                                                        the set of namespaces that","                                                        the term applies to. The term","                                                        is applied to the union of","                                                        the namespaces selected by","                                                        this field and the ones listed","                                                        in the namespaces field. null","                                                        selector and null or empty","                                                        namespaces list means \"this","                                                        pod's namespace\". An empty","                                                        selector ({}) matches all","                                                        namespaces.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaces:","                                                      description: namespaces specifies","                                                        a static list of namespace","                                                        names that the term applies","                                                        to. The term is applied to","                                                        the union of the namespaces","                                                        listed in this field and the","                                                        ones selected by namespaceSelector.","                                                        null or empty namespaces list","                                                        and null namespaceSelector","                                                        means \"this pod's namespace\".","                                                      items:","                                                        type: string","                                                      type: array","                                                    topologyKey:","                                                      description: This pod should","                                                        be co-located (affinity) or","                                                        not co-located (anti-affinity)","                                                        with the pods matching the","                                                        labelSelector in the specified","                                                        namespaces, where co-located","                                                        is defined as running on a","                                                        node whose value of the label","                                                        with key topologyKey matches","                                                        that of any node on which","                                                        any of the selected pods is","                                                        running. Empty topologyKey","                                                        is not allowed.","                                                      type: string","                                                  required:","                                                  - topologyKey","                                                  type: object","                                                weight:","                                                  description: weight associated with","                                                    matching the corresponding podAffinityTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - podAffinityTerm","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the anti-affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the anti-affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to a pod label","                                              update), the system may or may not try","                                              to eventually evict the pod from its","                                              node. When there are multiple elements,","                                              the lists of nodes corresponding to","                                              each podAffinityTerm are intersected,","                                              i.e. all terms must be satisfied.","                                            items:","                                              description: Defines a set of pods (namely","                                                those matching the labelSelector relative","                                                to the given namespace(s)) that this","                                                pod should be co-located (affinity)","                                                or not co-located (anti-affinity)","                                                with, where co-located is defined","                                                as running on a node whose value of","                                                the label with key \u003ctopologyKey\u003e matches","                                                that of any node on which a pod of","                                                the set of pods is running","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            type: array","                                        type: object","                                    type: object","                                  containers:","                                    description: Containers is a list of calico-kube-controllers","                                      containers. If specified, this overrides the","                                      specified calico-kube-controllers Deployment","                                      containers. If omitted, the calico-kube-controllers","                                      Deployment will use its default values for its","                                      containers.","                                    items:","                                      description: CalicoKubeControllersDeploymentContainer","                                        is a calico-kube-controllers Deployment container.","                                      properties:","                                        name:","                                          description: Name is an enum which identifies","                                            the calico-kube-controllers Deployment","                                            container by name.","                                          enum:","                                          - calico-kube-controllers","                                          type: string","                                        resources:","                                          description: Resources allows customization","                                            of limits and requests for compute resources","                                            such as cpu and memory. If specified,","                                            this overrides the named calico-kube-controllers","                                            Deployment container's resources. If omitted,","                                            the calico-kube-controllers Deployment","                                            will use its default value for this container's","                                            resources. If used in conjunction with","                                            the deprecated ComponentResources, then","                                            this value takes precedence.","                                          properties:","                                            claims:","                                              description: \"Claims lists the names","                                                of resources, defined in spec.resourceClaims,","                                                that are used by this container. \\n","                                                This is an alpha field and requires","                                                enabling the DynamicResourceAllocation","                                                feature gate. \\n This field is immutable.","                                                It can only be set for containers.\"","                                              items:","                                                description: ResourceClaim references","                                                  one entry in PodSpec.ResourceClaims.","                                                properties:","                                                  name:","                                                    description: Name must match the","                                                      name of one entry in pod.spec.resourceClaims","                                                      of the Pod where this field","                                                      is used. It makes that resource","                                                      available inside a container.","                                                    type: string","                                                required:","                                                - name","                                                type: object","                                              type: array","                                              x-kubernetes-list-map-keys:","                                              - name","                                              x-kubernetes-list-type: map","                                            limits:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Limits describes the maximum","                                                amount of compute resources allowed.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                            requests:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Requests describes the","                                                minimum amount of compute resources","                                                required. If Requests is omitted for","                                                a container, it defaults to Limits","                                                if that is explicitly specified, otherwise","                                                to an implementation-defined value.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                          type: object","                                      required:","                                      - name","                                      type: object","                                    type: array","                                  nodeSelector:","                                    additionalProperties:","                                      type: string","                                    description: 'NodeSelector is the calico-kube-controllers","                                      pod''s scheduling constraints. If specified,","                                      each of the key/value pairs are added to the","                                      calico-kube-controllers Deployment nodeSelector","                                      provided the key does not already exist in the","                                      object''s nodeSelector. If used in conjunction","                                      with ControlPlaneNodeSelector, that nodeSelector","                                      is set on the calico-kube-controllers Deployment","                                      and each of this field''s key/value pairs are","                                      added to the calico-kube-controllers Deployment","                                      nodeSelector provided the key does not already","                                      exist in the object''s nodeSelector. If omitted,","                                      the calico-kube-controllers Deployment will","                                      use its default value for nodeSelector. WARNING:","                                      Please note that this field will modify the","                                      default calico-kube-controllers Deployment nodeSelector.'","                                    type: object","                                  tolerations:","                                    description: 'Tolerations is the calico-kube-controllers","                                      pod''s tolerations. If specified, this overrides","                                      any tolerations that may be set on the calico-kube-controllers","                                      Deployment. If omitted, the calico-kube-controllers","                                      Deployment will use its default value for tolerations.","                                      WARNING: Please note that this field will override","                                      the default calico-kube-controllers Deployment","                                      tolerations.'","                                    items:","                                      description: The pod this Toleration is attached","                                        to tolerates any taint that matches the triple","                                        \u003ckey,value,effect\u003e using the matching operator","                                        \u003coperator\u003e.","                                      properties:","                                        effect:","                                          description: Effect indicates the taint","                                            effect to match. Empty means match all","                                            taint effects. When specified, allowed","                                            values are NoSchedule, PreferNoSchedule","                                            and NoExecute.","                                          type: string","                                        key:","                                          description: Key is the taint key that the","                                            toleration applies to. Empty means match","                                            all taint keys. If the key is empty, operator","                                            must be Exists; this combination means","                                            to match all values and all keys.","                                          type: string","                                        operator:","                                          description: Operator represents a key's","                                            relationship to the value. Valid operators","                                            are Exists and Equal. Defaults to Equal.","                                            Exists is equivalent to wildcard for value,","                                            so that a pod can tolerate all taints","                                            of a particular category.","                                          type: string","                                        tolerationSeconds:","                                          description: TolerationSeconds represents","                                            the period of time the toleration (which","                                            must be of effect NoExecute, otherwise","                                            this field is ignored) tolerates the taint.","                                            By default, it is not set, which means","                                            tolerate the taint forever (do not evict).","                                            Zero and negative values will be treated","                                            as 0 (evict immediately) by the system.","                                          format: int64","                                          type: integer","                                        value:","                                          description: Value is the taint value the","                                            toleration matches to. If the operator","                                            is Exists, the value should be empty,","                                            otherwise just a regular string.","                                          type: string","                                      type: object","                                    type: array","                                type: object","                            type: object","                        type: object","                    type: object","                  calicoNetwork:","                    description: CalicoNetwork specifies networking configuration","                      options for Calico.","                    properties:","                      bgp:","                        description: BGP configures whether or not to enable Calico's","                          BGP capabilities.","                        enum:","                        - Enabled","                        - Disabled","                        type: string","                      containerIPForwarding:","                        description: 'ContainerIPForwarding configures whether ip","                          forwarding will be enabled for containers in the CNI configuration.","                          Default: Disabled'","                        enum:","                        - Enabled","                        - Disabled","                        type: string","                      hostPorts:","                        description: 'HostPorts configures whether or not Calico will","                          support Kubernetes HostPorts. Valid only when using the","                          Calico CNI plugin. Default: Enabled'","                        enum:","                        - Enabled","                        - Disabled","                        type: string","                      ipPools:","                        description: IPPools contains a list of IP pools to create","                          if none exist. At most one IP pool of each address family","                          may be specified. If omitted, a single pool will be configured","                          if needed.","                        items:","                          properties:","                            blockSize:","                              description: 'BlockSize specifies the CIDR prefex length","                                to use when allocating per-node IP blocks from the","                                main IP pool CIDR. Default: 26 (IPv4), 122 (IPv6)'","                              format: int32","                              type: integer","                            cidr:","                              description: CIDR contains the address range for the","                                IP Pool in classless inter-domain routing format.","                              type: string","                            disableBGPExport:","                              default: false","                              description: 'DisableBGPExport specifies whether routes","                                from this IP pool''s CIDR are exported over BGP. Default:","                                false'","                              type: boolean","                            encapsulation:","                              description: 'Encapsulation specifies the encapsulation","                                type that will be used with the IP Pool. Default:","                                IPIP'","                              enum:","                              - IPIPCrossSubnet","                              - IPIP","                              - VXLAN","                              - VXLANCrossSubnet","                              - None","                              type: string","                            natOutgoing:","                              description: 'NATOutgoing specifies if NAT will be enabled","                                or disabled for outgoing traffic. Default: Enabled'","                              enum:","                              - Enabled","                              - Disabled","                              type: string","                            nodeSelector:","                              description: 'NodeSelector specifies the node selector","                                that will be set for the IP Pool. Default: ''all()'''","                              type: string","                          required:","                          - cidr","                          type: object","                        type: array","                      linuxDataplane:","                        description: 'LinuxDataplane is used to select the dataplane","                          used for Linux nodes. In particular, it causes the operator","                          to add required mounts and environment variables for the","                          particular dataplane. If not specified, iptables mode is","                          used. Default: Iptables'","                        enum:","                        - Iptables","                        - BPF","                        - VPP","                        type: string","                      mtu:","                        description: MTU specifies the maximum transmission unit to","                          use on the pod network. If not specified, Calico will perform","                          MTU auto-detection based on the cluster network.","                        format: int32","                        type: integer","                      multiInterfaceMode:","                        description: 'MultiInterfaceMode configures what will configure","                          multiple interface per pod. Only valid for Calico Enterprise","                          installations using the Calico CNI plugin. Default: None'","                        enum:","                        - None","                        - Multus","                        type: string","                      nodeAddressAutodetectionV4:","                        description: NodeAddressAutodetectionV4 specifies an approach","                          to automatically detect node IPv4 addresses. If not specified,","                          will use default auto-detection settings to acquire an IPv4","                          address for each node.","                        properties:","                          canReach:","                            description: CanReach enables IP auto-detection based","                              on which source address on the node is used to reach","                              the specified IP or domain.","                            type: string","                          cidrs:","                            description: CIDRS enables IP auto-detection based on","                              which addresses on the nodes are within one of the provided","                              CIDRs.","                            items:","                              type: string","                            type: array","                          firstFound:","                            description: FirstFound uses default interface matching","                              parameters to select an interface, performing best-effort","                              filtering based on well-known interface names.","                            type: boolean","                          interface:","                            description: Interface enables IP auto-detection based","                              on interfaces that match the given regex.","                            type: string","                          kubernetes:","                            description: Kubernetes configures Calico to detect node","                              addresses based on the Kubernetes API.","                            enum:","                            - NodeInternalIP","                            type: string","                          skipInterface:","                            description: SkipInterface enables IP auto-detection based","                              on interfaces that do not match the given regex.","                            type: string","                        type: object","                      nodeAddressAutodetectionV6:","                        description: NodeAddressAutodetectionV6 specifies an approach","                          to automatically detect node IPv6 addresses. If not specified,","                          IPv6 addresses will not be auto-detected.","                        properties:","                          canReach:","                            description: CanReach enables IP auto-detection based","                              on which source address on the node is used to reach","                              the specified IP or domain.","                            type: string","                          cidrs:","                            description: CIDRS enables IP auto-detection based on","                              which addresses on the nodes are within one of the provided","                              CIDRs.","                            items:","                              type: string","                            type: array","                          firstFound:","                            description: FirstFound uses default interface matching","                              parameters to select an interface, performing best-effort","                              filtering based on well-known interface names.","                            type: boolean","                          interface:","                            description: Interface enables IP auto-detection based","                              on interfaces that match the given regex.","                            type: string","                          kubernetes:","                            description: Kubernetes configures Calico to detect node","                              addresses based on the Kubernetes API.","                            enum:","                            - NodeInternalIP","                            type: string","                          skipInterface:","                            description: SkipInterface enables IP auto-detection based","                              on interfaces that do not match the given regex.","                            type: string","                        type: object","                    type: object","                  calicoNodeDaemonSet:","                    description: CalicoNodeDaemonSet configures the calico-node DaemonSet.","                      If used in conjunction with the deprecated ComponentResources,","                      then these overrides take precedence.","                    properties:","                      metadata:","                        description: Metadata is a subset of a Kubernetes object's","                          metadata that is added to the DaemonSet.","                        properties:","                          annotations:","                            additionalProperties:","                              type: string","                            description: Annotations is a map of arbitrary non-identifying","                              metadata. Each of these key/value pairs are added to","                              the object's annotations provided the key does not already","                              exist in the object's annotations.","                            type: object","                          labels:","                            additionalProperties:","                              type: string","                            description: Labels is a map of string keys and values","                              that may match replicaset and service selectors. Each","                              of these key/value pairs are added to the object's labels","                              provided the key does not already exist in the object's","                              labels.","                            type: object","                        type: object","                      spec:","                        description: Spec is the specification of the calico-node","                          DaemonSet.","                        properties:","                          minReadySeconds:","                            description: MinReadySeconds is the minimum number of","                              seconds for which a newly created DaemonSet pod should","                              be ready without any of its container crashing, for","                              it to be considered available. If specified, this overrides","                              any minReadySeconds value that may be set on the calico-node","                              DaemonSet. If omitted, the calico-node DaemonSet will","                              use its default value for minReadySeconds.","                            format: int32","                            maximum: 2147483647","                            minimum: 0","                            type: integer","                          template:","                            description: Template describes the calico-node DaemonSet","                              pod that will be created.","                            properties:","                              metadata:","                                description: Metadata is a subset of a Kubernetes","                                  object's metadata that is added to the pod's metadata.","                                properties:","                                  annotations:","                                    additionalProperties:","                                      type: string","                                    description: Annotations is a map of arbitrary","                                      non-identifying metadata. Each of these key/value","                                      pairs are added to the object's annotations","                                      provided the key does not already exist in the","                                      object's annotations.","                                    type: object","                                  labels:","                                    additionalProperties:","                                      type: string","                                    description: Labels is a map of string keys and","                                      values that may match replicaset and service","                                      selectors. Each of these key/value pairs are","                                      added to the object's labels provided the key","                                      does not already exist in the object's labels.","                                    type: object","                                type: object","                              spec:","                                description: Spec is the calico-node DaemonSet's PodSpec.","                                properties:","                                  affinity:","                                    description: 'Affinity is a group of affinity","                                      scheduling rules for the calico-node pods. If","                                      specified, this overrides any affinity that","                                      may be set on the calico-node DaemonSet. If","                                      omitted, the calico-node DaemonSet will use","                                      its default value for affinity. WARNING: Please","                                      note that this field will override the default","                                      calico-node DaemonSet affinity.'","                                    properties:","                                      nodeAffinity:","                                        description: Describes node affinity scheduling","                                          rules for the pod.","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the affinity expressions specified by","                                              this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node matches the corresponding","                                              matchExpressions; the node(s) with the","                                              highest sum are the most preferred.","                                            items:","                                              description: An empty preferred scheduling","                                                term matches all objects with implicit","                                                weight 0 (i.e. it's a no-op). A null","                                                preferred scheduling term matches","                                                no objects (i.e. is also a no-op).","                                              properties:","                                                preference:","                                                  description: A node selector term,","                                                    associated with the corresponding","                                                    weight.","                                                  properties:","                                                    matchExpressions:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        labels.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchFields:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        fields.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                weight:","                                                  description: Weight associated with","                                                    matching the corresponding nodeSelectorTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - preference","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to an update),","                                              the system may or may not try to eventually","                                              evict the pod from its node.","                                            properties:","                                              nodeSelectorTerms:","                                                description: Required. A list of node","                                                  selector terms. The terms are ORed.","                                                items:","                                                  description: A null or empty node","                                                    selector term matches no objects.","                                                    The requirements of them are ANDed.","                                                    The TopologySelectorTerm type","                                                    implements a subset of the NodeSelectorTerm.","                                                  properties:","                                                    matchExpressions:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        labels.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchFields:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        fields.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                type: array","                                            required:","                                            - nodeSelectorTerms","                                            type: object","                                            x-kubernetes-map-type: atomic","                                        type: object","                                      podAffinity:","                                        description: Describes pod affinity scheduling","                                          rules (e.g. co-locate this pod in the same","                                          node, zone, etc. as some other pod(s)).","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the affinity expressions specified by","                                              this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node has pods which matches the","                                              corresponding podAffinityTerm; the node(s)","                                              with the highest sum are the most preferred.","                                            items:","                                              description: The weights of all of the","                                                matched WeightedPodAffinityTerm fields","                                                are added per-node to find the most","                                                preferred node(s)","                                              properties:","                                                podAffinityTerm:","                                                  description: Required. A pod affinity","                                                    term, associated with the corresponding","                                                    weight.","                                                  properties:","                                                    labelSelector:","                                                      description: A label query over","                                                        a set of resources, in this","                                                        case pods.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaceSelector:","                                                      description: A label query over","                                                        the set of namespaces that","                                                        the term applies to. The term","                                                        is applied to the union of","                                                        the namespaces selected by","                                                        this field and the ones listed","                                                        in the namespaces field. null","                                                        selector and null or empty","                                                        namespaces list means \"this","                                                        pod's namespace\". An empty","                                                        selector ({}) matches all","                                                        namespaces.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaces:","                                                      description: namespaces specifies","                                                        a static list of namespace","                                                        names that the term applies","                                                        to. The term is applied to","                                                        the union of the namespaces","                                                        listed in this field and the","                                                        ones selected by namespaceSelector.","                                                        null or empty namespaces list","                                                        and null namespaceSelector","                                                        means \"this pod's namespace\".","                                                      items:","                                                        type: string","                                                      type: array","                                                    topologyKey:","                                                      description: This pod should","                                                        be co-located (affinity) or","                                                        not co-located (anti-affinity)","                                                        with the pods matching the","                                                        labelSelector in the specified","                                                        namespaces, where co-located","                                                        is defined as running on a","                                                        node whose value of the label","                                                        with key topologyKey matches","                                                        that of any node on which","                                                        any of the selected pods is","                                                        running. Empty topologyKey","                                                        is not allowed.","                                                      type: string","                                                  required:","                                                  - topologyKey","                                                  type: object","                                                weight:","                                                  description: weight associated with","                                                    matching the corresponding podAffinityTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - podAffinityTerm","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to a pod label","                                              update), the system may or may not try","                                              to eventually evict the pod from its","                                              node. When there are multiple elements,","                                              the lists of nodes corresponding to","                                              each podAffinityTerm are intersected,","                                              i.e. all terms must be satisfied.","                                            items:","                                              description: Defines a set of pods (namely","                                                those matching the labelSelector relative","                                                to the given namespace(s)) that this","                                                pod should be co-located (affinity)","                                                or not co-located (anti-affinity)","                                                with, where co-located is defined","                                                as running on a node whose value of","                                                the label with key \u003ctopologyKey\u003e matches","                                                that of any node on which a pod of","                                                the set of pods is running","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            type: array","                                        type: object","                                      podAntiAffinity:","                                        description: Describes pod anti-affinity scheduling","                                          rules (e.g. avoid putting this pod in the","                                          same node, zone, etc. as some other pod(s)).","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the anti-affinity expressions specified","                                              by this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling anti-affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node has pods which matches the","                                              corresponding podAffinityTerm; the node(s)","                                              with the highest sum are the most preferred.","                                            items:","                                              description: The weights of all of the","                                                matched WeightedPodAffinityTerm fields","                                                are added per-node to find the most","                                                preferred node(s)","                                              properties:","                                                podAffinityTerm:","                                                  description: Required. A pod affinity","                                                    term, associated with the corresponding","                                                    weight.","                                                  properties:","                                                    labelSelector:","                                                      description: A label query over","                                                        a set of resources, in this","                                                        case pods.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaceSelector:","                                                      description: A label query over","                                                        the set of namespaces that","                                                        the term applies to. The term","                                                        is applied to the union of","                                                        the namespaces selected by","                                                        this field and the ones listed","                                                        in the namespaces field. null","                                                        selector and null or empty","                                                        namespaces list means \"this","                                                        pod's namespace\". An empty","                                                        selector ({}) matches all","                                                        namespaces.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaces:","                                                      description: namespaces specifies","                                                        a static list of namespace","                                                        names that the term applies","                                                        to. The term is applied to","                                                        the union of the namespaces","                                                        listed in this field and the","                                                        ones selected by namespaceSelector.","                                                        null or empty namespaces list","                                                        and null namespaceSelector","                                                        means \"this pod's namespace\".","                                                      items:","                                                        type: string","                                                      type: array","                                                    topologyKey:","                                                      description: This pod should","                                                        be co-located (affinity) or","                                                        not co-located (anti-affinity)","                                                        with the pods matching the","                                                        labelSelector in the specified","                                                        namespaces, where co-located","                                                        is defined as running on a","                                                        node whose value of the label","                                                        with key topologyKey matches","                                                        that of any node on which","                                                        any of the selected pods is","                                                        running. Empty topologyKey","                                                        is not allowed.","                                                      type: string","                                                  required:","                                                  - topologyKey","                                                  type: object","                                                weight:","                                                  description: weight associated with","                                                    matching the corresponding podAffinityTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - podAffinityTerm","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the anti-affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the anti-affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to a pod label","                                              update), the system may or may not try","                                              to eventually evict the pod from its","                                              node. When there are multiple elements,","                                              the lists of nodes corresponding to","                                              each podAffinityTerm are intersected,","                                              i.e. all terms must be satisfied.","                                            items:","                                              description: Defines a set of pods (namely","                                                those matching the labelSelector relative","                                                to the given namespace(s)) that this","                                                pod should be co-located (affinity)","                                                or not co-located (anti-affinity)","                                                with, where co-located is defined","                                                as running on a node whose value of","                                                the label with key \u003ctopologyKey\u003e matches","                                                that of any node on which a pod of","                                                the set of pods is running","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            type: array","                                        type: object","                                    type: object","                                  containers:","                                    description: Containers is a list of calico-node","                                      containers. If specified, this overrides the","                                      specified calico-node DaemonSet containers.","                                      If omitted, the calico-node DaemonSet will use","                                      its default values for its containers.","                                    items:","                                      description: CalicoNodeDaemonSetContainer is","                                        a calico-node DaemonSet container.","                                      properties:","                                        name:","                                          description: Name is an enum which identifies","                                            the calico-node DaemonSet container by","                                            name.","                                          enum:","                                          - calico-node","                                          type: string","                                        resources:","                                          description: Resources allows customization","                                            of limits and requests for compute resources","                                            such as cpu and memory. If specified,","                                            this overrides the named calico-node DaemonSet","                                            container's resources. If omitted, the","                                            calico-node DaemonSet will use its default","                                            value for this container's resources.","                                            If used in conjunction with the deprecated","                                            ComponentResources, then this value takes","                                            precedence.","                                          properties:","                                            claims:","                                              description: \"Claims lists the names","                                                of resources, defined in spec.resourceClaims,","                                                that are used by this container. \\n","                                                This is an alpha field and requires","                                                enabling the DynamicResourceAllocation","                                                feature gate. \\n This field is immutable.","                                                It can only be set for containers.\"","                                              items:","                                                description: ResourceClaim references","                                                  one entry in PodSpec.ResourceClaims.","                                                properties:","                                                  name:","                                                    description: Name must match the","                                                      name of one entry in pod.spec.resourceClaims","                                                      of the Pod where this field","                                                      is used. It makes that resource","                                                      available inside a container.","                                                    type: string","                                                required:","                                                - name","                                                type: object","                                              type: array","                                              x-kubernetes-list-map-keys:","                                              - name","                                              x-kubernetes-list-type: map","                                            limits:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Limits describes the maximum","                                                amount of compute resources allowed.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                            requests:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Requests describes the","                                                minimum amount of compute resources","                                                required. If Requests is omitted for","                                                a container, it defaults to Limits","                                                if that is explicitly specified, otherwise","                                                to an implementation-defined value.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                          type: object","                                      required:","                                      - name","                                      type: object","                                    type: array","                                  initContainers:","                                    description: InitContainers is a list of calico-node","                                      init containers. If specified, this overrides","                                      the specified calico-node DaemonSet init containers.","                                      If omitted, the calico-node DaemonSet will use","                                      its default values for its init containers.","                                    items:","                                      description: CalicoNodeDaemonSetInitContainer","                                        is a calico-node DaemonSet init container.","                                      properties:","                                        name:","                                          description: Name is an enum which identifies","                                            the calico-node DaemonSet init container","                                            by name.","                                          enum:","                                          - install-cni","                                          - hostpath-init","                                          - flexvol-driver","                                          - mount-bpffs","                                          - node-certs-key-cert-provisioner","                                          - calico-node-prometheus-server-tls-key-cert-provisioner","                                          type: string","                                        resources:","                                          description: Resources allows customization","                                            of limits and requests for compute resources","                                            such as cpu and memory. If specified,","                                            this overrides the named calico-node DaemonSet","                                            init container's resources. If omitted,","                                            the calico-node DaemonSet will use its","                                            default value for this container's resources.","                                            If used in conjunction with the deprecated","                                            ComponentResources, then this value takes","                                            precedence.","                                          properties:","                                            claims:","                                              description: \"Claims lists the names","                                                of resources, defined in spec.resourceClaims,","                                                that are used by this container. \\n","                                                This is an alpha field and requires","                                                enabling the DynamicResourceAllocation","                                                feature gate. \\n This field is immutable.","                                                It can only be set for containers.\"","                                              items:","                                                description: ResourceClaim references","                                                  one entry in PodSpec.ResourceClaims.","                                                properties:","                                                  name:","                                                    description: Name must match the","                                                      name of one entry in pod.spec.resourceClaims","                                                      of the Pod where this field","                                                      is used. It makes that resource","                                                      available inside a container.","                                                    type: string","                                                required:","                                                - name","                                                type: object","                                              type: array","                                              x-kubernetes-list-map-keys:","                                              - name","                                              x-kubernetes-list-type: map","                                            limits:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Limits describes the maximum","                                                amount of compute resources allowed.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                            requests:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Requests describes the","                                                minimum amount of compute resources","                                                required. If Requests is omitted for","                                                a container, it defaults to Limits","                                                if that is explicitly specified, otherwise","                                                to an implementation-defined value.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                          type: object","                                      required:","                                      - name","                                      type: object","                                    type: array","                                  nodeSelector:","                                    additionalProperties:","                                      type: string","                                    description: 'NodeSelector is the calico-node","                                      pod''s scheduling constraints. If specified,","                                      each of the key/value pairs are added to the","                                      calico-node DaemonSet nodeSelector provided","                                      the key does not already exist in the object''s","                                      nodeSelector. If omitted, the calico-node DaemonSet","                                      will use its default value for nodeSelector.","                                      WARNING: Please note that this field will modify","                                      the default calico-node DaemonSet nodeSelector.'","                                    type: object","                                  tolerations:","                                    description: 'Tolerations is the calico-node pod''s","                                      tolerations. If specified, this overrides any","                                      tolerations that may be set on the calico-node","                                      DaemonSet. If omitted, the calico-node DaemonSet","                                      will use its default value for tolerations.","                                      WARNING: Please note that this field will override","                                      the default calico-node DaemonSet tolerations.'","                                    items:","                                      description: The pod this Toleration is attached","                                        to tolerates any taint that matches the triple","                                        \u003ckey,value,effect\u003e using the matching operator","                                        \u003coperator\u003e.","                                      properties:","                                        effect:","                                          description: Effect indicates the taint","                                            effect to match. Empty means match all","                                            taint effects. When specified, allowed","                                            values are NoSchedule, PreferNoSchedule","                                            and NoExecute.","                                          type: string","                                        key:","                                          description: Key is the taint key that the","                                            toleration applies to. Empty means match","                                            all taint keys. If the key is empty, operator","                                            must be Exists; this combination means","                                            to match all values and all keys.","                                          type: string","                                        operator:","                                          description: Operator represents a key's","                                            relationship to the value. Valid operators","                                            are Exists and Equal. Defaults to Equal.","                                            Exists is equivalent to wildcard for value,","                                            so that a pod can tolerate all taints","                                            of a particular category.","                                          type: string","                                        tolerationSeconds:","                                          description: TolerationSeconds represents","                                            the period of time the toleration (which","                                            must be of effect NoExecute, otherwise","                                            this field is ignored) tolerates the taint.","                                            By default, it is not set, which means","                                            tolerate the taint forever (do not evict).","                                            Zero and negative values will be treated","                                            as 0 (evict immediately) by the system.","                                          format: int64","                                          type: integer","                                        value:","                                          description: Value is the taint value the","                                            toleration matches to. If the operator","                                            is Exists, the value should be empty,","                                            otherwise just a regular string.","                                          type: string","                                      type: object","                                    type: array","                                type: object","                            type: object","                        type: object","                    type: object","                  calicoWindowsUpgradeDaemonSet:","                    description: CalicoWindowsUpgradeDaemonSet configures the calico-windows-upgrade","                      DaemonSet.","                    properties:","                      metadata:","                        description: Metadata is a subset of a Kubernetes object's","                          metadata that is added to the Deployment.","                        properties:","                          annotations:","                            additionalProperties:","                              type: string","                            description: Annotations is a map of arbitrary non-identifying","                              metadata. Each of these key/value pairs are added to","                              the object's annotations provided the key does not already","                              exist in the object's annotations.","                            type: object","                          labels:","                            additionalProperties:","                              type: string","                            description: Labels is a map of string keys and values","                              that may match replicaset and service selectors. Each","                              of these key/value pairs are added to the object's labels","                              provided the key does not already exist in the object's","                              labels.","                            type: object","                        type: object","                      spec:","                        description: Spec is the specification of the calico-windows-upgrade","                          DaemonSet.","                        properties:","                          minReadySeconds:","                            description: MinReadySeconds is the minimum number of","                              seconds for which a newly created Deployment pod should","                              be ready without any of its container crashing, for","                              it to be considered available. If specified, this overrides","                              any minReadySeconds value that may be set on the calico-windows-upgrade","                              DaemonSet. If omitted, the calico-windows-upgrade DaemonSet","                              will use its default value for minReadySeconds.","                            format: int32","                            maximum: 2147483647","                            minimum: 0","                            type: integer","                          template:","                            description: Template describes the calico-windows-upgrade","                              DaemonSet pod that will be created.","                            properties:","                              metadata:","                                description: Metadata is a subset of a Kubernetes","                                  object's metadata that is added to the pod's metadata.","                                properties:","                                  annotations:","                                    additionalProperties:","                                      type: string","                                    description: Annotations is a map of arbitrary","                                      non-identifying metadata. Each of these key/value","                                      pairs are added to the object's annotations","                                      provided the key does not already exist in the","                                      object's annotations.","                                    type: object","                                  labels:","                                    additionalProperties:","                                      type: string","                                    description: Labels is a map of string keys and","                                      values that may match replicaset and service","                                      selectors. Each of these key/value pairs are","                                      added to the object's labels provided the key","                                      does not already exist in the object's labels.","                                    type: object","                                type: object","                              spec:","                                description: Spec is the calico-windows-upgrade DaemonSet's","                                  PodSpec.","                                properties:","                                  affinity:","                                    description: 'Affinity is a group of affinity","                                      scheduling rules for the calico-windows-upgrade","                                      pods. If specified, this overrides any affinity","                                      that may be set on the calico-windows-upgrade","                                      DaemonSet. If omitted, the calico-windows-upgrade","                                      DaemonSet will use its default value for affinity.","                                      WARNING: Please note that this field will override","                                      the default calico-windows-upgrade DaemonSet","                                      affinity.'","                                    properties:","                                      nodeAffinity:","                                        description: Describes node affinity scheduling","                                          rules for the pod.","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the affinity expressions specified by","                                              this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node matches the corresponding","                                              matchExpressions; the node(s) with the","                                              highest sum are the most preferred.","                                            items:","                                              description: An empty preferred scheduling","                                                term matches all objects with implicit","                                                weight 0 (i.e. it's a no-op). A null","                                                preferred scheduling term matches","                                                no objects (i.e. is also a no-op).","                                              properties:","                                                preference:","                                                  description: A node selector term,","                                                    associated with the corresponding","                                                    weight.","                                                  properties:","                                                    matchExpressions:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        labels.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchFields:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        fields.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                weight:","                                                  description: Weight associated with","                                                    matching the corresponding nodeSelectorTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - preference","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to an update),","                                              the system may or may not try to eventually","                                              evict the pod from its node.","                                            properties:","                                              nodeSelectorTerms:","                                                description: Required. A list of node","                                                  selector terms. The terms are ORed.","                                                items:","                                                  description: A null or empty node","                                                    selector term matches no objects.","                                                    The requirements of them are ANDed.","                                                    The TopologySelectorTerm type","                                                    implements a subset of the NodeSelectorTerm.","                                                  properties:","                                                    matchExpressions:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        labels.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchFields:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        fields.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                type: array","                                            required:","                                            - nodeSelectorTerms","                                            type: object","                                            x-kubernetes-map-type: atomic","                                        type: object","                                      podAffinity:","                                        description: Describes pod affinity scheduling","                                          rules (e.g. co-locate this pod in the same","                                          node, zone, etc. as some other pod(s)).","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the affinity expressions specified by","                                              this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node has pods which matches the","                                              corresponding podAffinityTerm; the node(s)","                                              with the highest sum are the most preferred.","                                            items:","                                              description: The weights of all of the","                                                matched WeightedPodAffinityTerm fields","                                                are added per-node to find the most","                                                preferred node(s)","                                              properties:","                                                podAffinityTerm:","                                                  description: Required. A pod affinity","                                                    term, associated with the corresponding","                                                    weight.","                                                  properties:","                                                    labelSelector:","                                                      description: A label query over","                                                        a set of resources, in this","                                                        case pods.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaceSelector:","                                                      description: A label query over","                                                        the set of namespaces that","                                                        the term applies to. The term","                                                        is applied to the union of","                                                        the namespaces selected by","                                                        this field and the ones listed","                                                        in the namespaces field. null","                                                        selector and null or empty","                                                        namespaces list means \"this","                                                        pod's namespace\". An empty","                                                        selector ({}) matches all","                                                        namespaces.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaces:","                                                      description: namespaces specifies","                                                        a static list of namespace","                                                        names that the term applies","                                                        to. The term is applied to","                                                        the union of the namespaces","                                                        listed in this field and the","                                                        ones selected by namespaceSelector.","                                                        null or empty namespaces list","                                                        and null namespaceSelector","                                                        means \"this pod's namespace\".","                                                      items:","                                                        type: string","                                                      type: array","                                                    topologyKey:","                                                      description: This pod should","                                                        be co-located (affinity) or","                                                        not co-located (anti-affinity)","                                                        with the pods matching the","                                                        labelSelector in the specified","                                                        namespaces, where co-located","                                                        is defined as running on a","                                                        node whose value of the label","                                                        with key topologyKey matches","                                                        that of any node on which","                                                        any of the selected pods is","                                                        running. Empty topologyKey","                                                        is not allowed.","                                                      type: string","                                                  required:","                                                  - topologyKey","                                                  type: object","                                                weight:","                                                  description: weight associated with","                                                    matching the corresponding podAffinityTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - podAffinityTerm","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to a pod label","                                              update), the system may or may not try","                                              to eventually evict the pod from its","                                              node. When there are multiple elements,","                                              the lists of nodes corresponding to","                                              each podAffinityTerm are intersected,","                                              i.e. all terms must be satisfied.","                                            items:","                                              description: Defines a set of pods (namely","                                                those matching the labelSelector relative","                                                to the given namespace(s)) that this","                                                pod should be co-located (affinity)","                                                or not co-located (anti-affinity)","                                                with, where co-located is defined","                                                as running on a node whose value of","                                                the label with key \u003ctopologyKey\u003e matches","                                                that of any node on which a pod of","                                                the set of pods is running","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            type: array","                                        type: object","                                      podAntiAffinity:","                                        description: Describes pod anti-affinity scheduling","                                          rules (e.g. avoid putting this pod in the","                                          same node, zone, etc. as some other pod(s)).","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the anti-affinity expressions specified","                                              by this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling anti-affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node has pods which matches the","                                              corresponding podAffinityTerm; the node(s)","                                              with the highest sum are the most preferred.","                                            items:","                                              description: The weights of all of the","                                                matched WeightedPodAffinityTerm fields","                                                are added per-node to find the most","                                                preferred node(s)","                                              properties:","                                                podAffinityTerm:","                                                  description: Required. A pod affinity","                                                    term, associated with the corresponding","                                                    weight.","                                                  properties:","                                                    labelSelector:","                                                      description: A label query over","                                                        a set of resources, in this","                                                        case pods.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaceSelector:","                                                      description: A label query over","                                                        the set of namespaces that","                                                        the term applies to. The term","                                                        is applied to the union of","                                                        the namespaces selected by","                                                        this field and the ones listed","                                                        in the namespaces field. null","                                                        selector and null or empty","                                                        namespaces list means \"this","                                                        pod's namespace\". An empty","                                                        selector ({}) matches all","                                                        namespaces.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaces:","                                                      description: namespaces specifies","                                                        a static list of namespace","                                                        names that the term applies","                                                        to. The term is applied to","                                                        the union of the namespaces","                                                        listed in this field and the","                                                        ones selected by namespaceSelector.","                                                        null or empty namespaces list","                                                        and null namespaceSelector","                                                        means \"this pod's namespace\".","                                                      items:","                                                        type: string","                                                      type: array","                                                    topologyKey:","                                                      description: This pod should","                                                        be co-located (affinity) or","                                                        not co-located (anti-affinity)","                                                        with the pods matching the","                                                        labelSelector in the specified","                                                        namespaces, where co-located","                                                        is defined as running on a","                                                        node whose value of the label","                                                        with key topologyKey matches","                                                        that of any node on which","                                                        any of the selected pods is","                                                        running. Empty topologyKey","                                                        is not allowed.","                                                      type: string","                                                  required:","                                                  - topologyKey","                                                  type: object","                                                weight:","                                                  description: weight associated with","                                                    matching the corresponding podAffinityTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - podAffinityTerm","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the anti-affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the anti-affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to a pod label","                                              update), the system may or may not try","                                              to eventually evict the pod from its","                                              node. When there are multiple elements,","                                              the lists of nodes corresponding to","                                              each podAffinityTerm are intersected,","                                              i.e. all terms must be satisfied.","                                            items:","                                              description: Defines a set of pods (namely","                                                those matching the labelSelector relative","                                                to the given namespace(s)) that this","                                                pod should be co-located (affinity)","                                                or not co-located (anti-affinity)","                                                with, where co-located is defined","                                                as running on a node whose value of","                                                the label with key \u003ctopologyKey\u003e matches","                                                that of any node on which a pod of","                                                the set of pods is running","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            type: array","                                        type: object","                                    type: object","                                  containers:","                                    description: Containers is a list of calico-windows-upgrade","                                      containers. If specified, this overrides the","                                      specified calico-windows-upgrade DaemonSet containers.","                                      If omitted, the calico-windows-upgrade DaemonSet","                                      will use its default values for its containers.","                                    items:","                                      description: CalicoWindowsUpgradeDaemonSetContainer","                                        is a calico-windows-upgrade DaemonSet container.","                                      properties:","                                        name:","                                          description: Name is an enum which identifies","                                            the calico-windows-upgrade DaemonSet container","                                            by name.","                                          enum:","                                          - calico-windows-upgrade","                                          type: string","                                        resources:","                                          description: Resources allows customization","                                            of limits and requests for compute resources","                                            such as cpu and memory. If specified,","                                            this overrides the named calico-windows-upgrade","                                            DaemonSet container's resources. If omitted,","                                            the calico-windows-upgrade DaemonSet will","                                            use its default value for this container's","                                            resources.","                                          properties:","                                            claims:","                                              description: \"Claims lists the names","                                                of resources, defined in spec.resourceClaims,","                                                that are used by this container. \\n","                                                This is an alpha field and requires","                                                enabling the DynamicResourceAllocation","                                                feature gate. \\n This field is immutable.","                                                It can only be set for containers.\"","                                              items:","                                                description: ResourceClaim references","                                                  one entry in PodSpec.ResourceClaims.","                                                properties:","                                                  name:","                                                    description: Name must match the","                                                      name of one entry in pod.spec.resourceClaims","                                                      of the Pod where this field","                                                      is used. It makes that resource","                                                      available inside a container.","                                                    type: string","                                                required:","                                                - name","                                                type: object","                                              type: array","                                              x-kubernetes-list-map-keys:","                                              - name","                                              x-kubernetes-list-type: map","                                            limits:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Limits describes the maximum","                                                amount of compute resources allowed.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                            requests:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Requests describes the","                                                minimum amount of compute resources","                                                required. If Requests is omitted for","                                                a container, it defaults to Limits","                                                if that is explicitly specified, otherwise","                                                to an implementation-defined value.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                          type: object","                                      required:","                                      - name","                                      type: object","                                    type: array","                                  nodeSelector:","                                    additionalProperties:","                                      type: string","                                    description: 'NodeSelector is the calico-windows-upgrade","                                      pod''s scheduling constraints. If specified,","                                      each of the key/value pairs are added to the","                                      calico-windows-upgrade DaemonSet nodeSelector","                                      provided the key does not already exist in the","                                      object''s nodeSelector. If omitted, the calico-windows-upgrade","                                      DaemonSet will use its default value for nodeSelector.","                                      WARNING: Please note that this field will modify","                                      the default calico-windows-upgrade DaemonSet","                                      nodeSelector.'","                                    type: object","                                  tolerations:","                                    description: 'Tolerations is the calico-windows-upgrade","                                      pod''s tolerations. If specified, this overrides","                                      any tolerations that may be set on the calico-windows-upgrade","                                      DaemonSet. If omitted, the calico-windows-upgrade","                                      DaemonSet will use its default value for tolerations.","                                      WARNING: Please note that this field will override","                                      the default calico-windows-upgrade DaemonSet","                                      tolerations.'","                                    items:","                                      description: The pod this Toleration is attached","                                        to tolerates any taint that matches the triple","                                        \u003ckey,value,effect\u003e using the matching operator","                                        \u003coperator\u003e.","                                      properties:","                                        effect:","                                          description: Effect indicates the taint","                                            effect to match. Empty means match all","                                            taint effects. When specified, allowed","                                            values are NoSchedule, PreferNoSchedule","                                            and NoExecute.","                                          type: string","                                        key:","                                          description: Key is the taint key that the","                                            toleration applies to. Empty means match","                                            all taint keys. If the key is empty, operator","                                            must be Exists; this combination means","                                            to match all values and all keys.","                                          type: string","                                        operator:","                                          description: Operator represents a key's","                                            relationship to the value. Valid operators","                                            are Exists and Equal. Defaults to Equal.","                                            Exists is equivalent to wildcard for value,","                                            so that a pod can tolerate all taints","                                            of a particular category.","                                          type: string","                                        tolerationSeconds:","                                          description: TolerationSeconds represents","                                            the period of time the toleration (which","                                            must be of effect NoExecute, otherwise","                                            this field is ignored) tolerates the taint.","                                            By default, it is not set, which means","                                            tolerate the taint forever (do not evict).","                                            Zero and negative values will be treated","                                            as 0 (evict immediately) by the system.","                                          format: int64","                                          type: integer","                                        value:","                                          description: Value is the taint value the","                                            toleration matches to. If the operator","                                            is Exists, the value should be empty,","                                            otherwise just a regular string.","                                          type: string","                                      type: object","                                    type: array","                                type: object","                            type: object","                        type: object","                    type: object","                  certificateManagement:","                    description: CertificateManagement configures pods to submit a","                      CertificateSigningRequest to the certificates.k8s.io/v1beta1","                      API in order to obtain TLS certificates. This feature requires","                      that you bring your own CSR signing and approval process, otherwise","                      pods will be stuck during initialization.","                    properties:","                      caCert:","                        description: Certificate of the authority that signs the CertificateSigningRequests","                          in PEM format.","                        format: byte","                        type: string","                      keyAlgorithm:","                        description: 'Specify the algorithm used by pods to generate","                          a key pair that is associated with the X.509 certificate","                          request. Default: RSAWithSize2048'","                        enum:","                        - \"\"","                        - RSAWithSize2048","                        - RSAWithSize4096","                        - RSAWithSize8192","                        - ECDSAWithCurve256","                        - ECDSAWithCurve384","                        - ECDSAWithCurve521","                        type: string","                      signatureAlgorithm:","                        description: 'Specify the algorithm used for the signature","                          of the X.509 certificate request. Default: SHA256WithRSA'","                        enum:","                        - \"\"","                        - SHA256WithRSA","                        - SHA384WithRSA","                        - SHA512WithRSA","                        - ECDSAWithSHA256","                        - ECDSAWithSHA384","                        - ECDSAWithSHA512","                        type: string","                      signerName:","                        description: 'When a CSR is issued to the certificates.k8s.io","                          API, the signerName is added to the request in order to","                          accommodate for clusters with multiple signers. Must be","                          formatted as: `\u003cmy-domain\u003e/\u003cmy-signername\u003e`.'","                        type: string","                    required:","                    - caCert","                    - signerName","                    type: object","                  cni:","                    description: CNI specifies the CNI that will be used by this installation.","                    properties:","                      ipam:","                        description: IPAM specifies the pod IP address management","                          that will be used in the Calico or Calico Enterprise installation.","                        properties:","                          type:","                            description: \"Specifies the IPAM plugin that will be used","                              in the Calico or Calico Enterprise installation. * For","                              CNI Plugin Calico, this field defaults to Calico. *","                              For CNI Plugin GKE, this field defaults to HostLocal.","                              * For CNI Plugin AzureVNET, this field defaults to AzureVNET.","                              * For CNI Plugin AmazonVPC, this field defaults to AmazonVPC.","                              \\n The IPAM plugin is installed and configured only","                              if the CNI plugin is set to Calico, for all other values","                              of the CNI plugin the plugin binaries and CNI config","                              is a dependency that is expected to be installed separately.","                              \\n Default: Calico\"","                            enum:","                            - Calico","                            - HostLocal","                            - AmazonVPC","                            - AzureVNET","                            type: string","                        required:","                        - type","                        type: object","                      type:","                        description: \"Specifies the CNI plugin that will be used in","                          the Calico or Calico Enterprise installation. * For KubernetesProvider","                          GKE, this field defaults to GKE. * For KubernetesProvider","                          AKS, this field defaults to AzureVNET. * For KubernetesProvider","                          EKS, this field defaults to AmazonVPC. * If aws-node daemonset","                          exists in kube-system when the Installation resource is","                          created, this field defaults to AmazonVPC. * For all other","                          cases this field defaults to Calico. \\n For the value Calico,","                          the CNI plugin binaries and CNI config will be installed","                          as part of deployment, for all other values the CNI plugin","                          binaries and CNI config is a dependency that is expected","                          to be installed separately. \\n Default: Calico\"","                        enum:","                        - Calico","                        - GKE","                        - AmazonVPC","                        - AzureVNET","                        type: string","                    required:","                    - type","                    type: object","                  componentResources:","                    description: Deprecated. Please use CalicoNodeDaemonSet, TyphaDeployment,","                      and KubeControllersDeployment. ComponentResources can be used","                      to customize the resource requirements for each component. Node,","                      Typha, and KubeControllers are supported for installations.","                    items:","                      description: Deprecated. Please use component resource config","                        fields in Installation.Spec instead. The ComponentResource","                        struct associates a ResourceRequirements with a component","                        by name","                      properties:","                        componentName:","                          description: ComponentName is an enum which identifies the","                            component","                          enum:","                          - Node","                          - Typha","                          - KubeControllers","                          type: string","                        resourceRequirements:","                          description: ResourceRequirements allows customization of","                            limits and requests for compute resources such as cpu","                            and memory.","                          properties:","                            claims:","                              description: \"Claims lists the names of resources, defined","                                in spec.resourceClaims, that are used by this container.","                                \\n This is an alpha field and requires enabling the","                                DynamicResourceAllocation feature gate. \\n This field","                                is immutable. It can only be set for containers.\"","                              items:","                                description: ResourceClaim references one entry in","                                  PodSpec.ResourceClaims.","                                properties:","                                  name:","                                    description: Name must match the name of one entry","                                      in pod.spec.resourceClaims of the Pod where","                                      this field is used. It makes that resource available","                                      inside a container.","                                    type: string","                                required:","                                - name","                                type: object","                              type: array","                              x-kubernetes-list-map-keys:","                              - name","                              x-kubernetes-list-type: map","                            limits:","                              additionalProperties:","                                anyOf:","                                - type: integer","                                - type: string","                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                x-kubernetes-int-or-string: true","                              description: 'Limits describes the maximum amount of","                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                              type: object","                            requests:","                              additionalProperties:","                                anyOf:","                                - type: integer","                                - type: string","                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                x-kubernetes-int-or-string: true","                              description: 'Requests describes the minimum amount","                                of compute resources required. If Requests is omitted","                                for a container, it defaults to Limits if that is","                                explicitly specified, otherwise to an implementation-defined","                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                              type: object","                          type: object","                      required:","                      - componentName","                      - resourceRequirements","                      type: object","                    type: array","                  controlPlaneNodeSelector:","                    additionalProperties:","                      type: string","                    description: ControlPlaneNodeSelector is used to select control","                      plane nodes on which to run Calico components. This is globally","                      applied to all resources created by the operator excluding daemonsets.","                    type: object","                  controlPlaneReplicas:","                    description: ControlPlaneReplicas defines how many replicas of","                      the control plane core components will be deployed. This field","                      applies to all control plane components that support High Availability.","                      Defaults to 2.","                    format: int32","                    type: integer","                  controlPlaneTolerations:","                    description: ControlPlaneTolerations specify tolerations which","                      are then globally applied to all resources created by the operator.","                    items:","                      description: The pod this Toleration is attached to tolerates","                        any taint that matches the triple \u003ckey,value,effect\u003e using","                        the matching operator \u003coperator\u003e.","                      properties:","                        effect:","                          description: Effect indicates the taint effect to match.","                            Empty means match all taint effects. When specified, allowed","                            values are NoSchedule, PreferNoSchedule and NoExecute.","                          type: string","                        key:","                          description: Key is the taint key that the toleration applies","                            to. Empty means match all taint keys. If the key is empty,","                            operator must be Exists; this combination means to match","                            all values and all keys.","                          type: string","                        operator:","                          description: Operator represents a key's relationship to","                            the value. Valid operators are Exists and Equal. Defaults","                            to Equal. Exists is equivalent to wildcard for value,","                            so that a pod can tolerate all taints of a particular","                            category.","                          type: string","                        tolerationSeconds:","                          description: TolerationSeconds represents the period of","                            time the toleration (which must be of effect NoExecute,","                            otherwise this field is ignored) tolerates the taint.","                            By default, it is not set, which means tolerate the taint","                            forever (do not evict). Zero and negative values will","                            be treated as 0 (evict immediately) by the system.","                          format: int64","                          type: integer","                        value:","                          description: Value is the taint value the toleration matches","                            to. If the operator is Exists, the value should be empty,","                            otherwise just a regular string.","                          type: string","                      type: object","                    type: array","                  csiNodeDriverDaemonSet:","                    description: CSINodeDriverDaemonSet configures the csi-node-driver","                      DaemonSet.","                    properties:","                      metadata:","                        description: Metadata is a subset of a Kubernetes object's","                          metadata that is added to the DaemonSet.","                        properties:","                          annotations:","                            additionalProperties:","                              type: string","                            description: Annotations is a map of arbitrary non-identifying","                              metadata. Each of these key/value pairs are added to","                              the object's annotations provided the key does not already","                              exist in the object's annotations.","                            type: object","                          labels:","                            additionalProperties:","                              type: string","                            description: Labels is a map of string keys and values","                              that may match replicaset and service selectors. Each","                              of these key/value pairs are added to the object's labels","                              provided the key does not already exist in the object's","                              labels.","                            type: object","                        type: object","                      spec:","                        description: Spec is the specification of the csi-node-driver","                          DaemonSet.","                        properties:","                          minReadySeconds:","                            description: MinReadySeconds is the minimum number of","                              seconds for which a newly created DaemonSet pod should","                              be ready without any of its container crashing, for","                              it to be considered available. If specified, this overrides","                              any minReadySeconds value that may be set on the csi-node-driver","                              DaemonSet. If omitted, the csi-node-driver DaemonSet","                              will use its default value for minReadySeconds.","                            format: int32","                            maximum: 2147483647","                            minimum: 0","                            type: integer","                          template:","                            description: Template describes the csi-node-driver DaemonSet","                              pod that will be created.","                            properties:","                              metadata:","                                description: Metadata is a subset of a Kubernetes","                                  object's metadata that is added to the pod's metadata.","                                properties:","                                  annotations:","                                    additionalProperties:","                                      type: string","                                    description: Annotations is a map of arbitrary","                                      non-identifying metadata. Each of these key/value","                                      pairs are added to the object's annotations","                                      provided the key does not already exist in the","                                      object's annotations.","                                    type: object","                                  labels:","                                    additionalProperties:","                                      type: string","                                    description: Labels is a map of string keys and","                                      values that may match replicaset and service","                                      selectors. Each of these key/value pairs are","                                      added to the object's labels provided the key","                                      does not already exist in the object's labels.","                                    type: object","                                type: object","                              spec:","                                description: Spec is the csi-node-driver DaemonSet's","                                  PodSpec.","                                properties:","                                  affinity:","                                    description: 'Affinity is a group of affinity","                                      scheduling rules for the csi-node-driver pods.","                                      If specified, this overrides any affinity that","                                      may be set on the csi-node-driver DaemonSet.","                                      If omitted, the csi-node-driver DaemonSet will","                                      use its default value for affinity. WARNING:","                                      Please note that this field will override the","                                      default csi-node-driver DaemonSet affinity.'","                                    properties:","                                      nodeAffinity:","                                        description: Describes node affinity scheduling","                                          rules for the pod.","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the affinity expressions specified by","                                              this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node matches the corresponding","                                              matchExpressions; the node(s) with the","                                              highest sum are the most preferred.","                                            items:","                                              description: An empty preferred scheduling","                                                term matches all objects with implicit","                                                weight 0 (i.e. it's a no-op). A null","                                                preferred scheduling term matches","                                                no objects (i.e. is also a no-op).","                                              properties:","                                                preference:","                                                  description: A node selector term,","                                                    associated with the corresponding","                                                    weight.","                                                  properties:","                                                    matchExpressions:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        labels.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchFields:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        fields.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                weight:","                                                  description: Weight associated with","                                                    matching the corresponding nodeSelectorTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - preference","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to an update),","                                              the system may or may not try to eventually","                                              evict the pod from its node.","                                            properties:","                                              nodeSelectorTerms:","                                                description: Required. A list of node","                                                  selector terms. The terms are ORed.","                                                items:","                                                  description: A null or empty node","                                                    selector term matches no objects.","                                                    The requirements of them are ANDed.","                                                    The TopologySelectorTerm type","                                                    implements a subset of the NodeSelectorTerm.","                                                  properties:","                                                    matchExpressions:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        labels.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchFields:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        fields.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                type: array","                                            required:","                                            - nodeSelectorTerms","                                            type: object","                                            x-kubernetes-map-type: atomic","                                        type: object","                                      podAffinity:","                                        description: Describes pod affinity scheduling","                                          rules (e.g. co-locate this pod in the same","                                          node, zone, etc. as some other pod(s)).","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the affinity expressions specified by","                                              this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node has pods which matches the","                                              corresponding podAffinityTerm; the node(s)","                                              with the highest sum are the most preferred.","                                            items:","                                              description: The weights of all of the","                                                matched WeightedPodAffinityTerm fields","                                                are added per-node to find the most","                                                preferred node(s)","                                              properties:","                                                podAffinityTerm:","                                                  description: Required. A pod affinity","                                                    term, associated with the corresponding","                                                    weight.","                                                  properties:","                                                    labelSelector:","                                                      description: A label query over","                                                        a set of resources, in this","                                                        case pods.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaceSelector:","                                                      description: A label query over","                                                        the set of namespaces that","                                                        the term applies to. The term","                                                        is applied to the union of","                                                        the namespaces selected by","                                                        this field and the ones listed","                                                        in the namespaces field. null","                                                        selector and null or empty","                                                        namespaces list means \"this","                                                        pod's namespace\". An empty","                                                        selector ({}) matches all","                                                        namespaces.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaces:","                                                      description: namespaces specifies","                                                        a static list of namespace","                                                        names that the term applies","                                                        to. The term is applied to","                                                        the union of the namespaces","                                                        listed in this field and the","                                                        ones selected by namespaceSelector.","                                                        null or empty namespaces list","                                                        and null namespaceSelector","                                                        means \"this pod's namespace\".","                                                      items:","                                                        type: string","                                                      type: array","                                                    topologyKey:","                                                      description: This pod should","                                                        be co-located (affinity) or","                                                        not co-located (anti-affinity)","                                                        with the pods matching the","                                                        labelSelector in the specified","                                                        namespaces, where co-located","                                                        is defined as running on a","                                                        node whose value of the label","                                                        with key topologyKey matches","                                                        that of any node on which","                                                        any of the selected pods is","                                                        running. Empty topologyKey","                                                        is not allowed.","                                                      type: string","                                                  required:","                                                  - topologyKey","                                                  type: object","                                                weight:","                                                  description: weight associated with","                                                    matching the corresponding podAffinityTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - podAffinityTerm","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to a pod label","                                              update), the system may or may not try","                                              to eventually evict the pod from its","                                              node. When there are multiple elements,","                                              the lists of nodes corresponding to","                                              each podAffinityTerm are intersected,","                                              i.e. all terms must be satisfied.","                                            items:","                                              description: Defines a set of pods (namely","                                                those matching the labelSelector relative","                                                to the given namespace(s)) that this","                                                pod should be co-located (affinity)","                                                or not co-located (anti-affinity)","                                                with, where co-located is defined","                                                as running on a node whose value of","                                                the label with key \u003ctopologyKey\u003e matches","                                                that of any node on which a pod of","                                                the set of pods is running","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            type: array","                                        type: object","                                      podAntiAffinity:","                                        description: Describes pod anti-affinity scheduling","                                          rules (e.g. avoid putting this pod in the","                                          same node, zone, etc. as some other pod(s)).","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the anti-affinity expressions specified","                                              by this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling anti-affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node has pods which matches the","                                              corresponding podAffinityTerm; the node(s)","                                              with the highest sum are the most preferred.","                                            items:","                                              description: The weights of all of the","                                                matched WeightedPodAffinityTerm fields","                                                are added per-node to find the most","                                                preferred node(s)","                                              properties:","                                                podAffinityTerm:","                                                  description: Required. A pod affinity","                                                    term, associated with the corresponding","                                                    weight.","                                                  properties:","                                                    labelSelector:","                                                      description: A label query over","                                                        a set of resources, in this","                                                        case pods.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaceSelector:","                                                      description: A label query over","                                                        the set of namespaces that","                                                        the term applies to. The term","                                                        is applied to the union of","                                                        the namespaces selected by","                                                        this field and the ones listed","                                                        in the namespaces field. null","                                                        selector and null or empty","                                                        namespaces list means \"this","                                                        pod's namespace\". An empty","                                                        selector ({}) matches all","                                                        namespaces.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaces:","                                                      description: namespaces specifies","                                                        a static list of namespace","                                                        names that the term applies","                                                        to. The term is applied to","                                                        the union of the namespaces","                                                        listed in this field and the","                                                        ones selected by namespaceSelector.","                                                        null or empty namespaces list","                                                        and null namespaceSelector","                                                        means \"this pod's namespace\".","                                                      items:","                                                        type: string","                                                      type: array","                                                    topologyKey:","                                                      description: This pod should","                                                        be co-located (affinity) or","                                                        not co-located (anti-affinity)","                                                        with the pods matching the","                                                        labelSelector in the specified","                                                        namespaces, where co-located","                                                        is defined as running on a","                                                        node whose value of the label","                                                        with key topologyKey matches","                                                        that of any node on which","                                                        any of the selected pods is","                                                        running. Empty topologyKey","                                                        is not allowed.","                                                      type: string","                                                  required:","                                                  - topologyKey","                                                  type: object","                                                weight:","                                                  description: weight associated with","                                                    matching the corresponding podAffinityTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - podAffinityTerm","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the anti-affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the anti-affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to a pod label","                                              update), the system may or may not try","                                              to eventually evict the pod from its","                                              node. When there are multiple elements,","                                              the lists of nodes corresponding to","                                              each podAffinityTerm are intersected,","                                              i.e. all terms must be satisfied.","                                            items:","                                              description: Defines a set of pods (namely","                                                those matching the labelSelector relative","                                                to the given namespace(s)) that this","                                                pod should be co-located (affinity)","                                                or not co-located (anti-affinity)","                                                with, where co-located is defined","                                                as running on a node whose value of","                                                the label with key \u003ctopologyKey\u003e matches","                                                that of any node on which a pod of","                                                the set of pods is running","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            type: array","                                        type: object","                                    type: object","                                  containers:","                                    description: Containers is a list of csi-node-driver","                                      containers. If specified, this overrides the","                                      specified csi-node-driver DaemonSet containers.","                                      If omitted, the csi-node-driver DaemonSet will","                                      use its default values for its containers.","                                    items:","                                      description: CSINodeDriverDaemonSetContainer","                                        is a csi-node-driver DaemonSet container.","                                      properties:","                                        name:","                                          description: Name is an enum which identifies","                                            the csi-node-driver DaemonSet container","                                            by name.","                                          enum:","                                          - csi-node-driver","                                          type: string","                                        resources:","                                          description: Resources allows customization","                                            of limits and requests for compute resources","                                            such as cpu and memory. If specified,","                                            this overrides the named csi-node-driver","                                            DaemonSet container's resources. If omitted,","                                            the csi-node-driver DaemonSet will use","                                            its default value for this container's","                                            resources.","                                          properties:","                                            claims:","                                              description: \"Claims lists the names","                                                of resources, defined in spec.resourceClaims,","                                                that are used by this container. \\n","                                                This is an alpha field and requires","                                                enabling the DynamicResourceAllocation","                                                feature gate. \\n This field is immutable.","                                                It can only be set for containers.\"","                                              items:","                                                description: ResourceClaim references","                                                  one entry in PodSpec.ResourceClaims.","                                                properties:","                                                  name:","                                                    description: Name must match the","                                                      name of one entry in pod.spec.resourceClaims","                                                      of the Pod where this field","                                                      is used. It makes that resource","                                                      available inside a container.","                                                    type: string","                                                required:","                                                - name","                                                type: object","                                              type: array","                                              x-kubernetes-list-map-keys:","                                              - name","                                              x-kubernetes-list-type: map","                                            limits:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Limits describes the maximum","                                                amount of compute resources allowed.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                            requests:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Requests describes the","                                                minimum amount of compute resources","                                                required. If Requests is omitted for","                                                a container, it defaults to Limits","                                                if that is explicitly specified, otherwise","                                                to an implementation-defined value.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                          type: object","                                      required:","                                      - name","                                      type: object","                                    type: array","                                  nodeSelector:","                                    additionalProperties:","                                      type: string","                                    description: 'NodeSelector is the csi-node-driver","                                      pod''s scheduling constraints. If specified,","                                      each of the key/value pairs are added to the","                                      csi-node-driver DaemonSet nodeSelector provided","                                      the key does not already exist in the object''s","                                      nodeSelector. If omitted, the csi-node-driver","                                      DaemonSet will use its default value for nodeSelector.","                                      WARNING: Please note that this field will modify","                                      the default csi-node-driver DaemonSet nodeSelector.'","                                    type: object","                                  tolerations:","                                    description: 'Tolerations is the csi-node-driver","                                      pod''s tolerations. If specified, this overrides","                                      any tolerations that may be set on the csi-node-driver","                                      DaemonSet. If omitted, the csi-node-driver DaemonSet","                                      will use its default value for tolerations.","                                      WARNING: Please note that this field will override","                                      the default csi-node-driver DaemonSet tolerations.'","                                    items:","                                      description: The pod this Toleration is attached","                                        to tolerates any taint that matches the triple","                                        \u003ckey,value,effect\u003e using the matching operator","                                        \u003coperator\u003e.","                                      properties:","                                        effect:","                                          description: Effect indicates the taint","                                            effect to match. Empty means match all","                                            taint effects. When specified, allowed","                                            values are NoSchedule, PreferNoSchedule","                                            and NoExecute.","                                          type: string","                                        key:","                                          description: Key is the taint key that the","                                            toleration applies to. Empty means match","                                            all taint keys. If the key is empty, operator","                                            must be Exists; this combination means","                                            to match all values and all keys.","                                          type: string","                                        operator:","                                          description: Operator represents a key's","                                            relationship to the value. Valid operators","                                            are Exists and Equal. Defaults to Equal.","                                            Exists is equivalent to wildcard for value,","                                            so that a pod can tolerate all taints","                                            of a particular category.","                                          type: string","                                        tolerationSeconds:","                                          description: TolerationSeconds represents","                                            the period of time the toleration (which","                                            must be of effect NoExecute, otherwise","                                            this field is ignored) tolerates the taint.","                                            By default, it is not set, which means","                                            tolerate the taint forever (do not evict).","                                            Zero and negative values will be treated","                                            as 0 (evict immediately) by the system.","                                          format: int64","                                          type: integer","                                        value:","                                          description: Value is the taint value the","                                            toleration matches to. If the operator","                                            is Exists, the value should be empty,","                                            otherwise just a regular string.","                                          type: string","                                      type: object","                                    type: array","                                type: object","                            type: object","                        type: object","                    type: object","                  fipsMode:","                    description: 'FIPSMode uses images and features only that are","                      using FIPS 140-2 validated cryptographic modules and standards.","                      Default: Disabled'","                    enum:","                    - Enabled","                    - Disabled","                    type: string","                  flexVolumePath:","                    description: FlexVolumePath optionally specifies a custom path","                      for FlexVolume. If not specified, FlexVolume will be enabled","                      by default. If set to 'None', FlexVolume will be disabled. The","                      default is based on the kubernetesProvider.","                    type: string","                  imagePath:","                    description: \"ImagePath allows for the path part of an image to","                      be specified. If specified then the specified value will be","                      used as the image path for each image. If not specified or empty,","                      the default for each image will be used. A special case value,","                      UseDefault, is supported to explicitly specify the default image","                      path will be used for each image. \\n Image format: `\u003cregistry\u003e\u003cimagePath\u003e/\u003cimagePrefix\u003e\u003cimageName\u003e:\u003cimage-tag\u003e`","                      \\n This option allows configuring the `\u003cimagePath\u003e` portion","                      of the above format.\"","                    type: string","                  imagePrefix:","                    description: \"ImagePrefix allows for the prefix part of an image","                      to be specified. If specified then the given value will be used","                      as a prefix on each image. If not specified or empty, no prefix","                      will be used. A special case value, UseDefault, is supported","                      to explicitly specify the default image prefix will be used","                      for each image. \\n Image format: `\u003cregistry\u003e\u003cimagePath\u003e/\u003cimagePrefix\u003e\u003cimageName\u003e:\u003cimage-tag\u003e`","                      \\n This option allows configuring the `\u003cimagePrefix\u003e` portion","                      of the above format.\"","                    type: string","                  imagePullSecrets:","                    description: ImagePullSecrets is an array of references to container","                      registry pull secrets to use. These are applied to all images","                      to be pulled.","                    items:","                      description: LocalObjectReference contains enough information","                        to let you locate the referenced object inside the same namespace.","                      properties:","                        name:","                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","                            TODO: Add other useful fields. apiVersion, kind, uid?'","                          type: string","                      type: object","                      x-kubernetes-map-type: atomic","                    type: array","                  kubeletVolumePluginPath:","                    description: 'KubeletVolumePluginPath optionally specifies enablement","                      of Calico CSI plugin. If not specified, CSI will be enabled","                      by default. If set to ''None'', CSI will be disabled. Default:","                      /var/lib/kubelet'","                    type: string","                  kubernetesProvider:","                    description: KubernetesProvider specifies a particular provider","                      of the Kubernetes platform and enables provider-specific configuration.","                      If the specified value is empty, the Operator will attempt to","                      automatically determine the current provider. If the specified","                      value is not empty, the Operator will still attempt auto-detection,","                      but will additionally compare the auto-detected value to the","                      specified value to confirm they match.","                    enum:","                    - \"\"","                    - EKS","                    - GKE","                    - AKS","                    - OpenShift","                    - DockerEnterprise","                    - RKE2","                    type: string","                  logging:","                    description: Logging Configuration for Components","                    properties:","                      cni:","                        description: Customized logging specification for calico-cni","                          plugin","                        properties:","                          logFileMaxAgeDays:","                            description: 'Default: 30 (days)'","                            format: int32","                            type: integer","                          logFileMaxCount:","                            description: 'Default: 10'","                            format: int32","                            type: integer","                          logFileMaxSize:","                            anyOf:","                            - type: integer","                            - type: string","                            description: 'Default: 100Mi'","                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                            x-kubernetes-int-or-string: true","                          logSeverity:","                            description: 'Default: Info'","                            enum:","                            - Error","                            - Warning","                            - Debug","                            - Info","                            type: string","                        type: object","                    type: object","                  nodeMetricsPort:","                    description: NodeMetricsPort specifies which port calico/node","                      serves prometheus metrics on. By default, metrics are not enabled.","                      If specified, this overrides any FelixConfiguration resources","                      which may exist. If omitted, then prometheus metrics may still","                      be configured through FelixConfiguration.","                    format: int32","                    type: integer","                  nodeUpdateStrategy:","                    description: NodeUpdateStrategy can be used to customize the desired","                      update strategy, such as the MaxUnavailable field.","                    properties:","                      rollingUpdate:","                        description: 'Rolling update config params. Present only if","                          type = \"RollingUpdate\". --- TODO: Update this to follow","                          our convention for oneOf, whatever we decide it to be. Same","                          as Deployment `strategy.rollingUpdate`. See https://github.com/kubernetes/kubernetes/issues/35345'","                        properties:","                          maxSurge:","                            anyOf:","                            - type: integer","                            - type: string","                            description: 'The maximum number of nodes with an existing","                              available DaemonSet pod that can have an updated DaemonSet","                              pod during during an update. Value can be an absolute","                              number (ex: 5) or a percentage of desired pods (ex:","                              10%). This can not be 0 if MaxUnavailable is 0. Absolute","                              number is calculated from percentage by rounding up","                              to a minimum of 1. Default value is 0. Example: when","                              this is set to 30%, at most 30% of the total number","                              of nodes that should be running the daemon pod (i.e.","                              status.desiredNumberScheduled) can have their a new","                              pod created before the old pod is marked as deleted.","                              The update starts by launching new pods on 30% of nodes.","                              Once an updated pod is available (Ready for at least","                              minReadySeconds) the old DaemonSet pod on that node","                              is marked deleted. If the old pod becomes unavailable","                              for any reason (Ready transitions to false, is evicted,","                              or is drained) an updated pod is immediatedly created","                              on that node without considering surge limits. Allowing","                              surge implies the possibility that the resources consumed","                              by the daemonset on any given node can double if the","                              readiness check fails, and so resource intensive daemonsets","                              should take into account that they may cause evictions","                              during disruption.'","                            x-kubernetes-int-or-string: true","                          maxUnavailable:","                            anyOf:","                            - type: integer","                            - type: string","                            description: 'The maximum number of DaemonSet pods that","                              can be unavailable during the update. Value can be an","                              absolute number (ex: 5) or a percentage of total number","                              of DaemonSet pods at the start of the update (ex: 10%).","                              Absolute number is calculated from percentage by rounding","                              up. This cannot be 0 if MaxSurge is 0 Default value","                              is 1. Example: when this is set to 30%, at most 30%","                              of the total number of nodes that should be running","                              the daemon pod (i.e. status.desiredNumberScheduled)","                              can have their pods stopped for an update at any given","                              time. The update starts by stopping at most 30% of those","                              DaemonSet pods and then brings up new DaemonSet pods","                              in their place. Once the new pods are available, it","                              then proceeds onto other DaemonSet pods, thus ensuring","                              that at least 70% of original number of DaemonSet pods","                              are available at all times during the update.'","                            x-kubernetes-int-or-string: true","                        type: object","                      type:","                        description: Type of daemon set update. Can be \"RollingUpdate\"","                          or \"OnDelete\". Default is RollingUpdate.","                        type: string","                    type: object","                  nonPrivileged:","                    description: NonPrivileged configures Calico to be run in non-privileged","                      containers as non-root users where possible.","                    type: string","                  registry:","                    description: \"Registry is the default Docker registry used for","                      component Docker images. If specified then the given value must","                      end with a slash character (`/`) and all images will be pulled","                      from this registry. If not specified then the default registries","                      will be used. A special case value, UseDefault, is supported","                      to explicitly specify the default registries will be used. \\n","                      Image format: `\u003cregistry\u003e\u003cimagePath\u003e/\u003cimagePrefix\u003e\u003cimageName\u003e:\u003cimage-tag\u003e`","                      \\n This option allows configuring the `\u003cregistry\u003e` portion of","                      the above format.\"","                    type: string","                  typhaAffinity:","                    description: Deprecated. Please use Installation.Spec.TyphaDeployment","                      instead. TyphaAffinity allows configuration of node affinity","                      characteristics for Typha pods.","                    properties:","                      nodeAffinity:","                        description: NodeAffinity describes node affinity scheduling","                          rules for typha.","                        properties:","                          preferredDuringSchedulingIgnoredDuringExecution:","                            description: The scheduler will prefer to schedule pods","                              to nodes that satisfy the affinity expressions specified","                              by this field, but it may choose a node that violates","                              one or more of the expressions.","                            items:","                              description: An empty preferred scheduling term matches","                                all objects with implicit weight 0 (i.e. it's a no-op).","                                A null preferred scheduling term matches no objects","                                (i.e. is also a no-op).","                              properties:","                                preference:","                                  description: A node selector term, associated with","                                    the corresponding weight.","                                  properties:","                                    matchExpressions:","                                      description: A list of node selector requirements","                                        by node's labels.","                                      items:","                                        description: A node selector requirement is","                                          a selector that contains values, a key,","                                          and an operator that relates the key and","                                          values.","                                        properties:","                                          key:","                                            description: The label key that the selector","                                              applies to.","                                            type: string","                                          operator:","                                            description: Represents a key's relationship","                                              to a set of values. Valid operators","                                              are In, NotIn, Exists, DoesNotExist.","                                              Gt, and Lt.","                                            type: string","                                          values:","                                            description: An array of string values.","                                              If the operator is In or NotIn, the","                                              values array must be non-empty. If the","                                              operator is Exists or DoesNotExist,","                                              the values array must be empty. If the","                                              operator is Gt or Lt, the values array","                                              must have a single element, which will","                                              be interpreted as an integer. This array","                                              is replaced during a strategic merge","                                              patch.","                                            items:","                                              type: string","                                            type: array","                                        required:","                                        - key","                                        - operator","                                        type: object","                                      type: array","                                    matchFields:","                                      description: A list of node selector requirements","                                        by node's fields.","                                      items:","                                        description: A node selector requirement is","                                          a selector that contains values, a key,","                                          and an operator that relates the key and","                                          values.","                                        properties:","                                          key:","                                            description: The label key that the selector","                                              applies to.","                                            type: string","                                          operator:","                                            description: Represents a key's relationship","                                              to a set of values. Valid operators","                                              are In, NotIn, Exists, DoesNotExist.","                                              Gt, and Lt.","                                            type: string","                                          values:","                                            description: An array of string values.","                                              If the operator is In or NotIn, the","                                              values array must be non-empty. If the","                                              operator is Exists or DoesNotExist,","                                              the values array must be empty. If the","                                              operator is Gt or Lt, the values array","                                              must have a single element, which will","                                              be interpreted as an integer. This array","                                              is replaced during a strategic merge","                                              patch.","                                            items:","                                              type: string","                                            type: array","                                        required:","                                        - key","                                        - operator","                                        type: object","                                      type: array","                                  type: object","                                  x-kubernetes-map-type: atomic","                                weight:","                                  description: Weight associated with matching the","                                    corresponding nodeSelectorTerm, in the range 1-100.","                                  format: int32","                                  type: integer","                              required:","                              - preference","                              - weight","                              type: object","                            type: array","                          requiredDuringSchedulingIgnoredDuringExecution:","                            description: 'WARNING: Please note that if the affinity","                              requirements specified by this field are not met at","                              scheduling time, the pod will NOT be scheduled onto","                              the node. There is no fallback to another affinity rules","                              with this setting. This may cause networking disruption","                              or even catastrophic failure! PreferredDuringSchedulingIgnoredDuringExecution","                              should be used for affinity unless there is a specific","                              well understood reason to use RequiredDuringSchedulingIgnoredDuringExecution","                              and you can guarantee that the RequiredDuringSchedulingIgnoredDuringExecution","                              will always have sufficient nodes to satisfy the requirement.","                              NOTE: RequiredDuringSchedulingIgnoredDuringExecution","                              is set by default for AKS nodes, to avoid scheduling","                              Typhas on virtual-nodes. If the affinity requirements","                              specified by this field cease to be met at some point","                              during pod execution (e.g. due to an update), the system","                              may or may not try to eventually evict the pod from","                              its node.'","                            properties:","                              nodeSelectorTerms:","                                description: Required. A list of node selector terms.","                                  The terms are ORed.","                                items:","                                  description: A null or empty node selector term","                                    matches no objects. The requirements of them are","                                    ANDed. The TopologySelectorTerm type implements","                                    a subset of the NodeSelectorTerm.","                                  properties:","                                    matchExpressions:","                                      description: A list of node selector requirements","                                        by node's labels.","                                      items:","                                        description: A node selector requirement is","                                          a selector that contains values, a key,","                                          and an operator that relates the key and","                                          values.","                                        properties:","                                          key:","                                            description: The label key that the selector","                                              applies to.","                                            type: string","                                          operator:","                                            description: Represents a key's relationship","                                              to a set of values. Valid operators","                                              are In, NotIn, Exists, DoesNotExist.","                                              Gt, and Lt.","                                            type: string","                                          values:","                                            description: An array of string values.","                                              If the operator is In or NotIn, the","                                              values array must be non-empty. If the","                                              operator is Exists or DoesNotExist,","                                              the values array must be empty. If the","                                              operator is Gt or Lt, the values array","                                              must have a single element, which will","                                              be interpreted as an integer. This array","                                              is replaced during a strategic merge","                                              patch.","                                            items:","                                              type: string","                                            type: array","                                        required:","                                        - key","                                        - operator","                                        type: object","                                      type: array","                                    matchFields:","                                      description: A list of node selector requirements","                                        by node's fields.","                                      items:","                                        description: A node selector requirement is","                                          a selector that contains values, a key,","                                          and an operator that relates the key and","                                          values.","                                        properties:","                                          key:","                                            description: The label key that the selector","                                              applies to.","                                            type: string","                                          operator:","                                            description: Represents a key's relationship","                                              to a set of values. Valid operators","                                              are In, NotIn, Exists, DoesNotExist.","                                              Gt, and Lt.","                                            type: string","                                          values:","                                            description: An array of string values.","                                              If the operator is In or NotIn, the","                                              values array must be non-empty. If the","                                              operator is Exists or DoesNotExist,","                                              the values array must be empty. If the","                                              operator is Gt or Lt, the values array","                                              must have a single element, which will","                                              be interpreted as an integer. This array","                                              is replaced during a strategic merge","                                              patch.","                                            items:","                                              type: string","                                            type: array","                                        required:","                                        - key","                                        - operator","                                        type: object","                                      type: array","                                  type: object","                                  x-kubernetes-map-type: atomic","                                type: array","                            required:","                            - nodeSelectorTerms","                            type: object","                            x-kubernetes-map-type: atomic","                        type: object","                    type: object","                  typhaDeployment:","                    description: TyphaDeployment configures the typha Deployment.","                      If used in conjunction with the deprecated ComponentResources","                      or TyphaAffinity, then these overrides take precedence.","                    properties:","                      metadata:","                        description: Metadata is a subset of a Kubernetes object's","                          metadata that is added to the Deployment.","                        properties:","                          annotations:","                            additionalProperties:","                              type: string","                            description: Annotations is a map of arbitrary non-identifying","                              metadata. Each of these key/value pairs are added to","                              the object's annotations provided the key does not already","                              exist in the object's annotations.","                            type: object","                          labels:","                            additionalProperties:","                              type: string","                            description: Labels is a map of string keys and values","                              that may match replicaset and service selectors. Each","                              of these key/value pairs are added to the object's labels","                              provided the key does not already exist in the object's","                              labels.","                            type: object","                        type: object","                      spec:","                        description: Spec is the specification of the typha Deployment.","                        properties:","                          minReadySeconds:","                            description: MinReadySeconds is the minimum number of","                              seconds for which a newly created Deployment pod should","                              be ready without any of its container crashing, for","                              it to be considered available. If specified, this overrides","                              any minReadySeconds value that may be set on the typha","                              Deployment. If omitted, the typha Deployment will use","                              its default value for minReadySeconds.","                            format: int32","                            maximum: 2147483647","                            minimum: 0","                            type: integer","                          strategy:","                            description: The deployment strategy to use to replace","                              existing pods with new ones.","                            properties:","                              rollingUpdate:","                                description: Rolling update config params. Present","                                  only if DeploymentStrategyType = RollingUpdate.","                                  to be.","                                properties:","                                  maxSurge:","                                    anyOf:","                                    - type: integer","                                    - type: string","                                    description: 'The maximum number of pods that","                                      can be scheduled above the desired number of","                                      pods. Value can be an absolute number (ex: 5)","                                      or a percentage of desired pods (ex: 10%). This","                                      can not be 0 if MaxUnavailable is 0. Absolute","                                      number is calculated from percentage by rounding","                                      up. Defaults to 25%. Example: when this is set","                                      to 30%, the new ReplicaSet can be scaled up","                                      immediately when the rolling update starts,","                                      such that the total number of old and new pods","                                      do not exceed 130% of desired pods. Once old","                                      pods have been killed, new ReplicaSet can be","                                      scaled up further, ensuring that total number","                                      of pods running at any time during the update","                                      is at most 130% of desired pods.'","                                    x-kubernetes-int-or-string: true","                                  maxUnavailable:","                                    anyOf:","                                    - type: integer","                                    - type: string","                                    description: 'The maximum number of pods that","                                      can be unavailable during the update. Value","                                      can be an absolute number (ex: 5) or a percentage","                                      of desired pods (ex: 10%). Absolute number is","                                      calculated from percentage by rounding down.","                                      This can not be 0 if MaxSurge is 0. Defaults","                                      to 25%. Example: when this is set to 30%, the","                                      old ReplicaSet can be scaled down to 70% of","                                      desired pods immediately when the rolling update","                                      starts. Once new pods are ready, old ReplicaSet","                                      can be scaled down further, followed by scaling","                                      up the new ReplicaSet, ensuring that the total","                                      number of pods available at all times during","                                      the update is at least 70% of desired pods.'","                                    x-kubernetes-int-or-string: true","                                type: object","                            type: object","                          template:","                            description: Template describes the typha Deployment pod","                              that will be created.","                            properties:","                              metadata:","                                description: Metadata is a subset of a Kubernetes","                                  object's metadata that is added to the pod's metadata.","                                properties:","                                  annotations:","                                    additionalProperties:","                                      type: string","                                    description: Annotations is a map of arbitrary","                                      non-identifying metadata. Each of these key/value","                                      pairs are added to the object's annotations","                                      provided the key does not already exist in the","                                      object's annotations.","                                    type: object","                                  labels:","                                    additionalProperties:","                                      type: string","                                    description: Labels is a map of string keys and","                                      values that may match replicaset and service","                                      selectors. Each of these key/value pairs are","                                      added to the object's labels provided the key","                                      does not already exist in the object's labels.","                                    type: object","                                type: object","                              spec:","                                description: Spec is the typha Deployment's PodSpec.","                                properties:","                                  affinity:","                                    description: 'Affinity is a group of affinity","                                      scheduling rules for the typha pods. If specified,","                                      this overrides any affinity that may be set","                                      on the typha Deployment. If omitted, the typha","                                      Deployment will use its default value for affinity.","                                      If used in conjunction with the deprecated TyphaAffinity,","                                      then this value takes precedence. WARNING: Please","                                      note that this field will override the default","                                      calico-typha Deployment affinity.'","                                    properties:","                                      nodeAffinity:","                                        description: Describes node affinity scheduling","                                          rules for the pod.","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the affinity expressions specified by","                                              this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node matches the corresponding","                                              matchExpressions; the node(s) with the","                                              highest sum are the most preferred.","                                            items:","                                              description: An empty preferred scheduling","                                                term matches all objects with implicit","                                                weight 0 (i.e. it's a no-op). A null","                                                preferred scheduling term matches","                                                no objects (i.e. is also a no-op).","                                              properties:","                                                preference:","                                                  description: A node selector term,","                                                    associated with the corresponding","                                                    weight.","                                                  properties:","                                                    matchExpressions:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        labels.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchFields:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        fields.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                weight:","                                                  description: Weight associated with","                                                    matching the corresponding nodeSelectorTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - preference","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to an update),","                                              the system may or may not try to eventually","                                              evict the pod from its node.","                                            properties:","                                              nodeSelectorTerms:","                                                description: Required. A list of node","                                                  selector terms. The terms are ORed.","                                                items:","                                                  description: A null or empty node","                                                    selector term matches no objects.","                                                    The requirements of them are ANDed.","                                                    The TopologySelectorTerm type","                                                    implements a subset of the NodeSelectorTerm.","                                                  properties:","                                                    matchExpressions:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        labels.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchFields:","                                                      description: A list of node","                                                        selector requirements by node's","                                                        fields.","                                                      items:","                                                        description: A node selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: The label","                                                              key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: Represents","                                                              a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists, DoesNotExist.","                                                              Gt, and Lt.","                                                            type: string","                                                          values:","                                                            description: An array","                                                              of string values. If","                                                              the operator is In or","                                                              NotIn, the values array","                                                              must be non-empty. If","                                                              the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. If the operator","                                                              is Gt or Lt, the values","                                                              array must have a single","                                                              element, which will","                                                              be interpreted as an","                                                              integer. This array","                                                              is replaced during a","                                                              strategic merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                type: array","                                            required:","                                            - nodeSelectorTerms","                                            type: object","                                            x-kubernetes-map-type: atomic","                                        type: object","                                      podAffinity:","                                        description: Describes pod affinity scheduling","                                          rules (e.g. co-locate this pod in the same","                                          node, zone, etc. as some other pod(s)).","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the affinity expressions specified by","                                              this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node has pods which matches the","                                              corresponding podAffinityTerm; the node(s)","                                              with the highest sum are the most preferred.","                                            items:","                                              description: The weights of all of the","                                                matched WeightedPodAffinityTerm fields","                                                are added per-node to find the most","                                                preferred node(s)","                                              properties:","                                                podAffinityTerm:","                                                  description: Required. A pod affinity","                                                    term, associated with the corresponding","                                                    weight.","                                                  properties:","                                                    labelSelector:","                                                      description: A label query over","                                                        a set of resources, in this","                                                        case pods.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaceSelector:","                                                      description: A label query over","                                                        the set of namespaces that","                                                        the term applies to. The term","                                                        is applied to the union of","                                                        the namespaces selected by","                                                        this field and the ones listed","                                                        in the namespaces field. null","                                                        selector and null or empty","                                                        namespaces list means \"this","                                                        pod's namespace\". An empty","                                                        selector ({}) matches all","                                                        namespaces.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaces:","                                                      description: namespaces specifies","                                                        a static list of namespace","                                                        names that the term applies","                                                        to. The term is applied to","                                                        the union of the namespaces","                                                        listed in this field and the","                                                        ones selected by namespaceSelector.","                                                        null or empty namespaces list","                                                        and null namespaceSelector","                                                        means \"this pod's namespace\".","                                                      items:","                                                        type: string","                                                      type: array","                                                    topologyKey:","                                                      description: This pod should","                                                        be co-located (affinity) or","                                                        not co-located (anti-affinity)","                                                        with the pods matching the","                                                        labelSelector in the specified","                                                        namespaces, where co-located","                                                        is defined as running on a","                                                        node whose value of the label","                                                        with key topologyKey matches","                                                        that of any node on which","                                                        any of the selected pods is","                                                        running. Empty topologyKey","                                                        is not allowed.","                                                      type: string","                                                  required:","                                                  - topologyKey","                                                  type: object","                                                weight:","                                                  description: weight associated with","                                                    matching the corresponding podAffinityTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - podAffinityTerm","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to a pod label","                                              update), the system may or may not try","                                              to eventually evict the pod from its","                                              node. When there are multiple elements,","                                              the lists of nodes corresponding to","                                              each podAffinityTerm are intersected,","                                              i.e. all terms must be satisfied.","                                            items:","                                              description: Defines a set of pods (namely","                                                those matching the labelSelector relative","                                                to the given namespace(s)) that this","                                                pod should be co-located (affinity)","                                                or not co-located (anti-affinity)","                                                with, where co-located is defined","                                                as running on a node whose value of","                                                the label with key \u003ctopologyKey\u003e matches","                                                that of any node on which a pod of","                                                the set of pods is running","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            type: array","                                        type: object","                                      podAntiAffinity:","                                        description: Describes pod anti-affinity scheduling","                                          rules (e.g. avoid putting this pod in the","                                          same node, zone, etc. as some other pod(s)).","                                        properties:","                                          preferredDuringSchedulingIgnoredDuringExecution:","                                            description: The scheduler will prefer","                                              to schedule pods to nodes that satisfy","                                              the anti-affinity expressions specified","                                              by this field, but it may choose a node","                                              that violates one or more of the expressions.","                                              The node that is most preferred is the","                                              one with the greatest sum of weights,","                                              i.e. for each node that meets all of","                                              the scheduling requirements (resource","                                              request, requiredDuringScheduling anti-affinity","                                              expressions, etc.), compute a sum by","                                              iterating through the elements of this","                                              field and adding \"weight\" to the sum","                                              if the node has pods which matches the","                                              corresponding podAffinityTerm; the node(s)","                                              with the highest sum are the most preferred.","                                            items:","                                              description: The weights of all of the","                                                matched WeightedPodAffinityTerm fields","                                                are added per-node to find the most","                                                preferred node(s)","                                              properties:","                                                podAffinityTerm:","                                                  description: Required. A pod affinity","                                                    term, associated with the corresponding","                                                    weight.","                                                  properties:","                                                    labelSelector:","                                                      description: A label query over","                                                        a set of resources, in this","                                                        case pods.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaceSelector:","                                                      description: A label query over","                                                        the set of namespaces that","                                                        the term applies to. The term","                                                        is applied to the union of","                                                        the namespaces selected by","                                                        this field and the ones listed","                                                        in the namespaces field. null","                                                        selector and null or empty","                                                        namespaces list means \"this","                                                        pod's namespace\". An empty","                                                        selector ({}) matches all","                                                        namespaces.","                                                      properties:","                                                        matchExpressions:","                                                          description: matchExpressions","                                                            is a list of label selector","                                                            requirements. The requirements","                                                            are ANDed.","                                                          items:","                                                            description: A label selector","                                                              requirement is a selector","                                                              that contains values,","                                                              a key, and an operator","                                                              that relates the key","                                                              and values.","                                                            properties:","                                                              key:","                                                                description: key is","                                                                  the label key that","                                                                  the selector applies","                                                                  to.","                                                                type: string","                                                              operator:","                                                                description: operator","                                                                  represents a key's","                                                                  relationship to","                                                                  a set of values.","                                                                  Valid operators","                                                                  are In, NotIn, Exists","                                                                  and DoesNotExist.","                                                                type: string","                                                              values:","                                                                description: values","                                                                  is an array of string","                                                                  values. If the operator","                                                                  is In or NotIn,","                                                                  the values array","                                                                  must be non-empty.","                                                                  If the operator","                                                                  is Exists or DoesNotExist,","                                                                  the values array","                                                                  must be empty. This","                                                                  array is replaced","                                                                  during a strategic","                                                                  merge patch.","                                                                items:","                                                                  type: string","                                                                type: array","                                                            required:","                                                            - key","                                                            - operator","                                                            type: object","                                                          type: array","                                                        matchLabels:","                                                          additionalProperties:","                                                            type: string","                                                          description: matchLabels","                                                            is a map of {key,value}","                                                            pairs. A single {key,value}","                                                            in the matchLabels map","                                                            is equivalent to an element","                                                            of matchExpressions, whose","                                                            key field is \"key\", the","                                                            operator is \"In\", and","                                                            the values array contains","                                                            only \"value\". The requirements","                                                            are ANDed.","                                                          type: object","                                                      type: object","                                                      x-kubernetes-map-type: atomic","                                                    namespaces:","                                                      description: namespaces specifies","                                                        a static list of namespace","                                                        names that the term applies","                                                        to. The term is applied to","                                                        the union of the namespaces","                                                        listed in this field and the","                                                        ones selected by namespaceSelector.","                                                        null or empty namespaces list","                                                        and null namespaceSelector","                                                        means \"this pod's namespace\".","                                                      items:","                                                        type: string","                                                      type: array","                                                    topologyKey:","                                                      description: This pod should","                                                        be co-located (affinity) or","                                                        not co-located (anti-affinity)","                                                        with the pods matching the","                                                        labelSelector in the specified","                                                        namespaces, where co-located","                                                        is defined as running on a","                                                        node whose value of the label","                                                        with key topologyKey matches","                                                        that of any node on which","                                                        any of the selected pods is","                                                        running. Empty topologyKey","                                                        is not allowed.","                                                      type: string","                                                  required:","                                                  - topologyKey","                                                  type: object","                                                weight:","                                                  description: weight associated with","                                                    matching the corresponding podAffinityTerm,","                                                    in the range 1-100.","                                                  format: int32","                                                  type: integer","                                              required:","                                              - podAffinityTerm","                                              - weight","                                              type: object","                                            type: array","                                          requiredDuringSchedulingIgnoredDuringExecution:","                                            description: If the anti-affinity requirements","                                              specified by this field are not met","                                              at scheduling time, the pod will not","                                              be scheduled onto the node. If the anti-affinity","                                              requirements specified by this field","                                              cease to be met at some point during","                                              pod execution (e.g. due to a pod label","                                              update), the system may or may not try","                                              to eventually evict the pod from its","                                              node. When there are multiple elements,","                                              the lists of nodes corresponding to","                                              each podAffinityTerm are intersected,","                                              i.e. all terms must be satisfied.","                                            items:","                                              description: Defines a set of pods (namely","                                                those matching the labelSelector relative","                                                to the given namespace(s)) that this","                                                pod should be co-located (affinity)","                                                or not co-located (anti-affinity)","                                                with, where co-located is defined","                                                as running on a node whose value of","                                                the label with key \u003ctopologyKey\u003e matches","                                                that of any node on which a pod of","                                                the set of pods is running","                                              properties:","                                                labelSelector:","                                                  description: A label query over","                                                    a set of resources, in this case","                                                    pods.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaceSelector:","                                                  description: A label query over","                                                    the set of namespaces that the","                                                    term applies to. The term is applied","                                                    to the union of the namespaces","                                                    selected by this field and the","                                                    ones listed in the namespaces","                                                    field. null selector and null","                                                    or empty namespaces list means","                                                    \"this pod's namespace\". An empty","                                                    selector ({}) matches all namespaces.","                                                  properties:","                                                    matchExpressions:","                                                      description: matchExpressions","                                                        is a list of label selector","                                                        requirements. The requirements","                                                        are ANDed.","                                                      items:","                                                        description: A label selector","                                                          requirement is a selector","                                                          that contains values, a","                                                          key, and an operator that","                                                          relates the key and values.","                                                        properties:","                                                          key:","                                                            description: key is the","                                                              label key that the selector","                                                              applies to.","                                                            type: string","                                                          operator:","                                                            description: operator","                                                              represents a key's relationship","                                                              to a set of values.","                                                              Valid operators are","                                                              In, NotIn, Exists and","                                                              DoesNotExist.","                                                            type: string","                                                          values:","                                                            description: values is","                                                              an array of string values.","                                                              If the operator is In","                                                              or NotIn, the values","                                                              array must be non-empty.","                                                              If the operator is Exists","                                                              or DoesNotExist, the","                                                              values array must be","                                                              empty. This array is","                                                              replaced during a strategic","                                                              merge patch.","                                                            items:","                                                              type: string","                                                            type: array","                                                        required:","                                                        - key","                                                        - operator","                                                        type: object","                                                      type: array","                                                    matchLabels:","                                                      additionalProperties:","                                                        type: string","                                                      description: matchLabels is","                                                        a map of {key,value} pairs.","                                                        A single {key,value} in the","                                                        matchLabels map is equivalent","                                                        to an element of matchExpressions,","                                                        whose key field is \"key\",","                                                        the operator is \"In\", and","                                                        the values array contains","                                                        only \"value\". The requirements","                                                        are ANDed.","                                                      type: object","                                                  type: object","                                                  x-kubernetes-map-type: atomic","                                                namespaces:","                                                  description: namespaces specifies","                                                    a static list of namespace names","                                                    that the term applies to. The","                                                    term is applied to the union of","                                                    the namespaces listed in this","                                                    field and the ones selected by","                                                    namespaceSelector. null or empty","                                                    namespaces list and null namespaceSelector","                                                    means \"this pod's namespace\".","                                                  items:","                                                    type: string","                                                  type: array","                                                topologyKey:","                                                  description: This pod should be","                                                    co-located (affinity) or not co-located","                                                    (anti-affinity) with the pods","                                                    matching the labelSelector in","                                                    the specified namespaces, where","                                                    co-located is defined as running","                                                    on a node whose value of the label","                                                    with key topologyKey matches that","                                                    of any node on which any of the","                                                    selected pods is running. Empty","                                                    topologyKey is not allowed.","                                                  type: string","                                              required:","                                              - topologyKey","                                              type: object","                                            type: array","                                        type: object","                                    type: object","                                  containers:","                                    description: Containers is a list of typha containers.","                                      If specified, this overrides the specified typha","                                      Deployment containers. If omitted, the typha","                                      Deployment will use its default values for its","                                      containers.","                                    items:","                                      description: TyphaDeploymentContainer is a typha","                                        Deployment container.","                                      properties:","                                        name:","                                          description: Name is an enum which identifies","                                            the typha Deployment container by name.","                                          enum:","                                          - calico-typha","                                          type: string","                                        resources:","                                          description: Resources allows customization","                                            of limits and requests for compute resources","                                            such as cpu and memory. If specified,","                                            this overrides the named typha Deployment","                                            container's resources. If omitted, the","                                            typha Deployment will use its default","                                            value for this container's resources.","                                            If used in conjunction with the deprecated","                                            ComponentResources, then this value takes","                                            precedence.","                                          properties:","                                            claims:","                                              description: \"Claims lists the names","                                                of resources, defined in spec.resourceClaims,","                                                that are used by this container. \\n","                                                This is an alpha field and requires","                                                enabling the DynamicResourceAllocation","                                                feature gate. \\n This field is immutable.","                                                It can only be set for containers.\"","                                              items:","                                                description: ResourceClaim references","                                                  one entry in PodSpec.ResourceClaims.","                                                properties:","                                                  name:","                                                    description: Name must match the","                                                      name of one entry in pod.spec.resourceClaims","                                                      of the Pod where this field","                                                      is used. It makes that resource","                                                      available inside a container.","                                                    type: string","                                                required:","                                                - name","                                                type: object","                                              type: array","                                              x-kubernetes-list-map-keys:","                                              - name","                                              x-kubernetes-list-type: map","                                            limits:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Limits describes the maximum","                                                amount of compute resources allowed.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                            requests:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Requests describes the","                                                minimum amount of compute resources","                                                required. If Requests is omitted for","                                                a container, it defaults to Limits","                                                if that is explicitly specified, otherwise","                                                to an implementation-defined value.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                          type: object","                                      required:","                                      - name","                                      type: object","                                    type: array","                                  initContainers:","                                    description: InitContainers is a list of typha","                                      init containers. If specified, this overrides","                                      the specified typha Deployment init containers.","                                      If omitted, the typha Deployment will use its","                                      default values for its init containers.","                                    items:","                                      description: TyphaDeploymentInitContainer is","                                        a typha Deployment init container.","                                      properties:","                                        name:","                                          description: Name is an enum which identifies","                                            the typha Deployment init container by","                                            name.","                                          enum:","                                          - typha-certs-key-cert-provisioner","                                          type: string","                                        resources:","                                          description: Resources allows customization","                                            of limits and requests for compute resources","                                            such as cpu and memory. If specified,","                                            this overrides the named typha Deployment","                                            init container's resources. If omitted,","                                            the typha Deployment will use its default","                                            value for this init container's resources.","                                            If used in conjunction with the deprecated","                                            ComponentResources, then this value takes","                                            precedence.","                                          properties:","                                            claims:","                                              description: \"Claims lists the names","                                                of resources, defined in spec.resourceClaims,","                                                that are used by this container. \\n","                                                This is an alpha field and requires","                                                enabling the DynamicResourceAllocation","                                                feature gate. \\n This field is immutable.","                                                It can only be set for containers.\"","                                              items:","                                                description: ResourceClaim references","                                                  one entry in PodSpec.ResourceClaims.","                                                properties:","                                                  name:","                                                    description: Name must match the","                                                      name of one entry in pod.spec.resourceClaims","                                                      of the Pod where this field","                                                      is used. It makes that resource","                                                      available inside a container.","                                                    type: string","                                                required:","                                                - name","                                                type: object","                                              type: array","                                              x-kubernetes-list-map-keys:","                                              - name","                                              x-kubernetes-list-type: map","                                            limits:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Limits describes the maximum","                                                amount of compute resources allowed.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                            requests:","                                              additionalProperties:","                                                anyOf:","                                                - type: integer","                                                - type: string","                                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","                                                x-kubernetes-int-or-string: true","                                              description: 'Requests describes the","                                                minimum amount of compute resources","                                                required. If Requests is omitted for","                                                a container, it defaults to Limits","                                                if that is explicitly specified, otherwise","                                                to an implementation-defined value.","                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'","                                              type: object","                                          type: object","                                      required:","                                      - name","                                      type: object","                                    type: array","                                  nodeSelector:","                                    additionalProperties:","                                      type: string","                                    description: 'NodeSelector is the calico-typha","                                      pod''s scheduling constraints. If specified,","                                      each of the key/value pairs are added to the","                                      calico-typha Deployment nodeSelector provided","                                      the key does not already exist in the object''s","                                      nodeSelector. If omitted, the calico-typha Deployment","                                      will use its default value for nodeSelector.","                                      WARNING: Please note that this field will modify","                                      the default calico-typha Deployment nodeSelector.'","                                    type: object","                                  terminationGracePeriodSeconds:","                                    description: Optional duration in seconds the","                                      pod needs to terminate gracefully. May be decreased","                                      in delete request. Value must be non-negative","                                      integer. The value zero indicates stop immediately","                                      via the kill signal (no opportunity to shut","                                      down). If this value is nil, the default grace","                                      period will be used instead. The grace period","                                      is the duration in seconds after the processes","                                      running in the pod are sent a termination signal","                                      and the time when the processes are forcibly","                                      halted with a kill signal. Set this value longer","                                      than the expected cleanup time for your process.","                                      Defaults to 30 seconds.","                                    format: int64","                                    type: integer","                                  tolerations:","                                    description: 'Tolerations is the typha pod''s","                                      tolerations. If specified, this overrides any","                                      tolerations that may be set on the typha Deployment.","                                      If omitted, the typha Deployment will use its","                                      default value for tolerations. WARNING: Please","                                      note that this field will override the default","                                      calico-typha Deployment tolerations.'","                                    items:","                                      description: The pod this Toleration is attached","                                        to tolerates any taint that matches the triple","                                        \u003ckey,value,effect\u003e using the matching operator","                                        \u003coperator\u003e.","                                      properties:","                                        effect:","                                          description: Effect indicates the taint","                                            effect to match. Empty means match all","                                            taint effects. When specified, allowed","                                            values are NoSchedule, PreferNoSchedule","                                            and NoExecute.","                                          type: string","                                        key:","                                          description: Key is the taint key that the","                                            toleration applies to. Empty means match","                                            all taint keys. If the key is empty, operator","                                            must be Exists; this combination means","                                            to match all values and all keys.","                                          type: string","                                        operator:","                                          description: Operator represents a key's","                                            relationship to the value. Valid operators","                                            are Exists and Equal. Defaults to Equal.","                                            Exists is equivalent to wildcard for value,","                                            so that a pod can tolerate all taints","                                            of a particular category.","                                          type: string","                                        tolerationSeconds:","                                          description: TolerationSeconds represents","                                            the period of time the toleration (which","                                            must be of effect NoExecute, otherwise","                                            this field is ignored) tolerates the taint.","                                            By default, it is not set, which means","                                            tolerate the taint forever (do not evict).","                                            Zero and negative values will be treated","                                            as 0 (evict immediately) by the system.","                                          format: int64","                                          type: integer","                                        value:","                                          description: Value is the taint value the","                                            toleration matches to. If the operator","                                            is Exists, the value should be empty,","                                            otherwise just a regular string.","                                          type: string","                                      type: object","                                    type: array","                                  topologySpreadConstraints:","                                    description: TopologySpreadConstraints describes","                                      how a group of pods ought to spread across topology","                                      domains. Scheduler will schedule pods in a way","                                      which abides by the constraints. All topologySpreadConstraints","                                      are ANDed.","                                    items:","                                      description: TopologySpreadConstraint specifies","                                        how to spread matching pods among the given","                                        topology.","                                      properties:","                                        labelSelector:","                                          description: LabelSelector is used to find","                                            matching pods. Pods that match this label","                                            selector are counted to determine the","                                            number of pods in their corresponding","                                            topology domain.","                                          properties:","                                            matchExpressions:","                                              description: matchExpressions is a list","                                                of label selector requirements. The","                                                requirements are ANDed.","                                              items:","                                                description: A label selector requirement","                                                  is a selector that contains values,","                                                  a key, and an operator that relates","                                                  the key and values.","                                                properties:","                                                  key:","                                                    description: key is the label","                                                      key that the selector applies","                                                      to.","                                                    type: string","                                                  operator:","                                                    description: operator represents","                                                      a key's relationship to a set","                                                      of values. Valid operators are","                                                      In, NotIn, Exists and DoesNotExist.","                                                    type: string","                                                  values:","                                                    description: values is an array","                                                      of string values. If the operator","                                                      is In or NotIn, the values array","                                                      must be non-empty. If the operator","                                                      is Exists or DoesNotExist, the","                                                      values array must be empty.","                                                      This array is replaced during","                                                      a strategic merge patch.","                                                    items:","                                                      type: string","                                                    type: array","                                                required:","                                                - key","                                                - operator","                                                type: object","                                              type: array","                                            matchLabels:","                                              additionalProperties:","                                                type: string","                                              description: matchLabels is a map of","                                                {key,value} pairs. A single {key,value}","                                                in the matchLabels map is equivalent","                                                to an element of matchExpressions,","                                                whose key field is \"key\", the operator","                                                is \"In\", and the values array contains","                                                only \"value\". The requirements are","                                                ANDed.","                                              type: object","                                          type: object","                                          x-kubernetes-map-type: atomic","                                        matchLabelKeys:","                                          description: MatchLabelKeys is a set of","                                            pod label keys to select the pods over","                                            which spreading will be calculated. The","                                            keys are used to lookup values from the","                                            incoming pod labels, those key-value labels","                                            are ANDed with labelSelector to select","                                            the group of existing pods over which","                                            spreading will be calculated for the incoming","                                            pod. Keys that don't exist in the incoming","                                            pod labels will be ignored. A null or","                                            empty list means only match against labelSelector.","                                          items:","                                            type: string","                                          type: array","                                          x-kubernetes-list-type: atomic","                                        maxSkew:","                                          description: 'MaxSkew describes the degree","                                            to which pods may be unevenly distributed.","                                            When `whenUnsatisfiable=DoNotSchedule`,","                                            it is the maximum permitted difference","                                            between the number of matching pods in","                                            the target topology and the global minimum.","                                            The global minimum is the minimum number","                                            of matching pods in an eligible domain","                                            or zero if the number of eligible domains","                                            is less than MinDomains. For example,","                                            in a 3-zone cluster, MaxSkew is set to","                                            1, and pods with the same labelSelector","                                            spread as 2/2/1: In this case, the global","                                            minimum is 1. | zone1 | zone2 | zone3","                                            | |  P P  |  P P  |   P   | - if MaxSkew","                                            is 1, incoming pod can only be scheduled","                                            to zone3 to become 2/2/2; scheduling it","                                            onto zone1(zone2) would make the ActualSkew(3-1)","                                            on zone1(zone2) violate MaxSkew(1). -","                                            if MaxSkew is 2, incoming pod can be scheduled","                                            onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,","                                            it is used to give higher precedence to","                                            topologies that satisfy it. It''s a required","                                            field. Default value is 1 and 0 is not","                                            allowed.'","                                          format: int32","                                          type: integer","                                        minDomains:","                                          description: \"MinDomains indicates a minimum","                                            number of eligible domains. When the number","                                            of eligible domains with matching topology","                                            keys is less than minDomains, Pod Topology","                                            Spread treats \\\"global minimum\\\" as 0,","                                            and then the calculation of Skew is performed.","                                            And when the number of eligible domains","                                            with matching topology keys equals or","                                            greater than minDomains, this value has","                                            no effect on scheduling. As a result,","                                            when the number of eligible domains is","                                            less than minDomains, scheduler won't","                                            schedule more than maxSkew Pods to those","                                            domains. If value is nil, the constraint","                                            behaves as if MinDomains is equal to 1.","                                            Valid values are integers greater than","                                            0. When value is not nil, WhenUnsatisfiable","                                            must be DoNotSchedule. \\n For example,","                                            in a 3-zone cluster, MaxSkew is set to","                                            2, MinDomains is set to 5 and pods with","                                            the same labelSelector spread as 2/2/2:","                                            | zone1 | zone2 | zone3 | |  P P  |  P","                                            P  |  P P  | The number of domains is","                                            less than 5(MinDomains), so \\\"global minimum\\\"","                                            is treated as 0. In this situation, new","                                            pod with the same labelSelector cannot","                                            be scheduled, because computed skew will","                                            be 3(3 - 0) if new Pod is scheduled to","                                            any of the three zones, it will violate","                                            MaxSkew. \\n This is a beta field and requires","                                            the MinDomainsInPodTopologySpread feature","                                            gate to be enabled (enabled by default).\"","                                          format: int32","                                          type: integer","                                        nodeAffinityPolicy:","                                          description: \"NodeAffinityPolicy indicates","                                            how we will treat Pod's nodeAffinity/nodeSelector","                                            when calculating pod topology spread skew.","                                            Options are: - Honor: only nodes matching","                                            nodeAffinity/nodeSelector are included","                                            in the calculations. - Ignore: nodeAffinity/nodeSelector","                                            are ignored. All nodes are included in","                                            the calculations. \\n If this value is","                                            nil, the behavior is equivalent to the","                                            Honor policy. This is a beta-level feature","                                            default enabled by the NodeInclusionPolicyInPodTopologySpread","                                            feature flag.\"","                                          type: string","                                        nodeTaintsPolicy:","                                          description: \"NodeTaintsPolicy indicates","                                            how we will treat node taints when calculating","                                            pod topology spread skew. Options are:","                                            - Honor: nodes without taints, along with","                                            tainted nodes for which the incoming pod","                                            has a toleration, are included. - Ignore:","                                            node taints are ignored. All nodes are","                                            included. \\n If this value is nil, the","                                            behavior is equivalent to the Ignore policy.","                                            This is a beta-level feature default enabled","                                            by the NodeInclusionPolicyInPodTopologySpread","                                            feature flag.\"","                                          type: string","                                        topologyKey:","                                          description: TopologyKey is the key of node","                                            labels. Nodes that have a label with this","                                            key and identical values are considered","                                            to be in the same topology. We consider","                                            each \u003ckey, value\u003e as a \"bucket\", and try","                                            to put balanced number of pods into each","                                            bucket. We define a domain as a particular","                                            instance of a topology. Also, we define","                                            an eligible domain as a domain whose nodes","                                            meet the requirements of nodeAffinityPolicy","                                            and nodeTaintsPolicy. e.g. If TopologyKey","                                            is \"kubernetes.io/hostname\", each Node","                                            is a domain of that topology. And, if","                                            TopologyKey is \"topology.kubernetes.io/zone\",","                                            each zone is a domain of that topology.","                                            It's a required field.","                                          type: string","                                        whenUnsatisfiable:","                                          description: 'WhenUnsatisfiable indicates","                                            how to deal with a pod if it doesn''t","                                            satisfy the spread constraint. - DoNotSchedule","                                            (default) tells the scheduler not to schedule","                                            it. - ScheduleAnyway tells the scheduler","                                            to schedule the pod in any location, but","                                            giving higher precedence to topologies","                                            that would help reduce the skew. A constraint","                                            is considered \"Unsatisfiable\" for an incoming","                                            pod if and only if every possible node","                                            assignment for that pod would violate","                                            \"MaxSkew\" on some topology. For example,","                                            in a 3-zone cluster, MaxSkew is set to","                                            1, and pods with the same labelSelector","                                            spread as 3/1/1: | zone1 | zone2 | zone3","                                            | | P P P |   P   |   P   | If WhenUnsatisfiable","                                            is set to DoNotSchedule, incoming pod","                                            can only be scheduled to zone2(zone3)","                                            to become 3/2/1(3/1/2) as ActualSkew(2-1)","                                            on zone2(zone3) satisfies MaxSkew(1).","                                            In other words, the cluster can still","                                            be imbalanced, but scheduler won''t make","                                            it *more* imbalanced. It''s a required","                                            field.'","                                          type: string","                                      required:","                                      - maxSkew","                                      - topologyKey","                                      - whenUnsatisfiable","                                      type: object","                                    type: array","                                type: object","                            type: object","                        type: object","                    type: object","                  typhaMetricsPort:","                    description: TyphaMetricsPort specifies which port calico/typha","                      serves prometheus metrics on. By default, metrics are not enabled.","                    format: int32","                    type: integer","                  variant:","                    description: 'Variant is the product to install - one of Calico","                      or TigeraSecureEnterprise Default: Calico'","                    enum:","                    - Calico","                    - TigeraSecureEnterprise","                    type: string","                type: object","              conditions:","                description: Conditions represents the latest observed set of conditions","                  for the component. A component may be one or more of Ready, Progressing,","                  Degraded or other customer types.","                items:","                  description: \"Condition contains details for one aspect of the current","                    state of this API Resource. --- This struct is intended for direct","                    use as an array at the field path .status.conditions.  For example,","                    \\n type FooStatus struct{ // Represents the observations of a","                    foo's current state. // Known .status.conditions.type are: \\\"Available\\\",","                    \\\"Progressing\\\", and \\\"Degraded\\\" // +patchMergeKey=type // +patchStrategy=merge","                    // +listType=map // +listMapKey=type Conditions []metav1.Condition","                    `json:\\\"conditions,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\"","                    protobuf:\\\"bytes,1,rep,name=conditions\\\"` \\n // other fields }\"","                  properties:","                    lastTransitionTime:","                      description: lastTransitionTime is the last time the condition","                        transitioned from one status to another. This should be when","                        the underlying condition changed.  If that is not known, then","                        using the time when the API field changed is acceptable.","                      format: date-time","                      type: string","                    message:","                      description: message is a human readable message indicating","                        details about the transition. This may be an empty string.","                      maxLength: 32768","                      type: string","                    observedGeneration:","                      description: observedGeneration represents the .metadata.generation","                        that the condition was set based upon. For instance, if .metadata.generation","                        is currently 12, but the .status.conditions[x].observedGeneration","                        is 9, the condition is out of date with respect to the current","                        state of the instance.","                      format: int64","                      minimum: 0","                      type: integer","                    reason:","                      description: reason contains a programmatic identifier indicating","                        the reason for the condition's last transition. Producers","                        of specific condition types may define expected values and","                        meanings for this field, and whether the values are considered","                        a guaranteed API. The value should be a CamelCase string.","                        This field may not be empty.","                      maxLength: 1024","                      minLength: 1","                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","                      type: string","                    status:","                      description: status of the condition, one of True, False, Unknown.","                      enum:","                      - \"True\"","                      - \"False\"","                      - Unknown","                      type: string","                    type:","                      description: type of condition in CamelCase or in foo.example.com/CamelCase.","                        --- Many .condition.type values are consistent across resources","                        like Available, but because arbitrary conditions can be useful","                        (see .node.status.conditions), the ability to deconflict is","                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","                      maxLength: 316","                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","                      type: string","                  required:","                  - lastTransitionTime","                  - message","                  - reason","                  - status","                  - type","                  type: object","                type: array","              imageSet:","                description: ImageSet is the name of the ImageSet being used, if there","                  is an ImageSet that is being used. If an ImageSet is not being used","                  then this will not be set.","                type: string","              mtu:","                description: MTU is the most recently observed value for pod network","                  MTU. This may be an explicitly configured value, or based on Calico's","                  native auto-detetion.","                format: int32","                type: integer","              variant:","                description: Variant is the most recently observed installed variant","                  - one of Calico or TigeraSecureEnterprise","                enum:","                - Calico","                - TigeraSecureEnterprise","                type: string","            type: object","        type: object","    served: true","    storage: true","    subresources:","      status: {}","","---","# Source: crds/operator.tigera.io_tigerastatuses_crd.yaml","apiVersion: apiextensions.k8s.io/v1","kind: CustomResourceDefinition","metadata:","  annotations:","    controller-gen.kubebuilder.io/version: v0.11.3","  name: tigerastatuses.operator.tigera.io","spec:","  group: operator.tigera.io","  names:","    kind: TigeraStatus","    listKind: TigeraStatusList","    plural: tigerastatuses","    singular: tigerastatus","  scope: Cluster","  versions:","  - additionalPrinterColumns:","    - description: Whether the component running and stable.","      jsonPath: .status.conditions[?(@.type=='Available')].status","      name: Available","      type: string","    - description: Whether the component is processing changes.","      jsonPath: .status.conditions[?(@.type=='Progressing')].status","      name: Progressing","      type: string","    - description: Whether the component is degraded.","      jsonPath: .status.conditions[?(@.type=='Degraded')].status","      name: Degraded","      type: string","    - description: The time the component's Available status last changed.","      jsonPath: .status.conditions[?(@.type=='Available')].lastTransitionTime","      name: Since","      type: date","    name: v1","    schema:","      openAPIV3Schema:","        description: TigeraStatus represents the most recently observed status for","          Calico or a Calico Enterprise functional area.","        properties:","          apiVersion:","            description: 'APIVersion defines the versioned schema of this representation","              of an object. Servers should convert recognized schemas to the latest","              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'","            type: string","          kind:","            description: 'Kind is a string value representing the REST resource this","              object represents. Servers may infer this from the endpoint the client","              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'","            type: string","          metadata:","            type: object","          spec:","            description: TigeraStatusSpec defines the desired state of TigeraStatus","            type: object","          status:","            description: TigeraStatusStatus defines the observed state of TigeraStatus","            properties:","              conditions:","                description: Conditions represents the latest observed set of conditions","                  for this component. A component may be one or more of Available,","                  Progressing, or Degraded.","                items:","                  description: TigeraStatusCondition represents a condition attached","                    to a particular component.","                  properties:","                    lastTransitionTime:","                      description: The timestamp representing the start time for the","                        current status.","                      format: date-time","                      type: string","                    message:","                      description: Optionally, a detailed message providing additional","                        context.","                      type: string","                    observedGeneration:","                      description: observedGeneration represents the generation that","                        the condition was set based upon. For instance, if generation","                        is currently 12, but the .status.conditions[x].observedGeneration","                        is 9, the condition is out of date with respect to the current","                        state of the instance.","                      format: int64","                      type: integer","                    reason:","                      description: A brief reason explaining the condition.","                      type: string","                    status:","                      description: The status of the condition. May be True, False,","                        or Unknown.","                      type: string","                    type:","                      description: The type of condition. May be Available, Progressing,","                        or Degraded.","                      type: string","                  required:","                  - lastTransitionTime","                  - status","                  - type","                  type: object","                type: array","            required:","            - conditions","            type: object","        type: object","    served: true","    storage: true","    subresources:","      status: {}","","---","# Source: tigera-operator/templates/tigera-operator/02-serviceaccount-tigera-operator.yaml","apiVersion: v1","kind: ServiceAccount","metadata:","  name: tigera-operator","  namespace: tigera-operator","imagePullSecrets:","  []","---","# Source: tigera-operator/templates/tigera-operator/02-role-tigera-operator.yaml","# Permissions required when running the operator for a Calico cluster.","apiVersion: rbac.authorization.k8s.io/v1","kind: ClusterRole","metadata:","  name: tigera-operator","rules:","  - apiGroups:","      - \"\"","    resources:","      - namespaces","      - pods","      - podtemplates","      - services","      - endpoints","      - events","      - configmaps","      - secrets","      - serviceaccounts","    verbs:","      - create","      - get","      - list","      - update","      - delete","      - watch","  - apiGroups:","      - \"\"","    resources:","      - resourcequotas","    verbs:","      - list","      - get","      - watch","  - apiGroups:","      - \"\"","    resources:","      - resourcequotas","    verbs:","      - create","      - get","      - list","      - update","      - delete","      - watch","    resourceNames:","      - calico-critical-pods","      - tigera-critical-pods","  - apiGroups:","      - \"\"","    resources:","      - nodes","    verbs:","      # Need to update node labels when migrating nodes.","      - get","      - patch","      - list","      # We need this for Typha autoscaling","      - watch","  - apiGroups:","      - rbac.authorization.k8s.io","    resources:","      - clusterroles","      - clusterrolebindings","      - rolebindings","      - roles","    verbs:","      - create","      - get","      - list","      - update","      - delete","      - watch","      - bind","      - escalate","  - apiGroups:","      - apps","    resources:","      - deployments","      - daemonsets","      - statefulsets","    verbs:","      - create","      - get","      - list","      - patch","      - update","      - delete","      - watch","  - apiGroups:","      - apps","    resourceNames:","      - tigera-operator","    resources:","      - deployments/finalizers","    verbs:","      - update","  - apiGroups:","      - operator.tigera.io","    resources:","      - '*'","    verbs:","      - create","      - get","      - list","      - update","      - patch","      - delete","      - watch","  - apiGroups:","    - networking.k8s.io","    resources:","    - networkpolicies","    verbs:","      - create","      - update","      - delete","      - get","      - list","      - watch","  - apiGroups:","    - crd.projectcalico.org","    resources:","    - felixconfigurations","    verbs:","    - create","    - patch","    - list","    - get","    - watch","  - apiGroups:","    - crd.projectcalico.org","    resources:","    - ippools","    - kubecontrollersconfigurations","    - bgpconfigurations","    verbs:","    - get","    - list","    - watch","  - apiGroups:","      - scheduling.k8s.io","    resources:","      - priorityclasses","    verbs:","      - create","      - get","      - list","      - update","      - delete","      - watch","  - apiGroups:","      - policy","    resources:","      - poddisruptionbudgets","    verbs:","      - create","      - get","      - list","      - update","      - delete","      - watch","  - apiGroups:","      - apiregistration.k8s.io","    resources:","      - apiservices","    verbs:","      - list","      - watch","      - create","      - update","  # Needed for operator lock","  - apiGroups:","      - coordination.k8s.io","    resources:","      - leases","    verbs:","      - create","      - get","      - list","      - update","      - delete","      - watch","  - apiGroups:","      - storage.k8s.io","    resources:","      - csidrivers","    verbs:","      - list","      - watch","      - update","      - get","      - create","      - delete","  # Add the appropriate pod security policy permissions","  - apiGroups:","      - policy","    resources:","      - podsecuritypolicies","    resourceNames:","      - tigera-operator","    verbs:","      - use","  - apiGroups:","      - policy","    resources:","      - podsecuritypolicies","    verbs:","      - get","      - list","      - watch","      - create","      - update","      - delete","# Add the permissions to monitor the status of certificatesigningrequests when certificate management is enabled.","  - apiGroups:","      - certificates.k8s.io","    resources:","      - certificatesigningrequests","    verbs:","      - list","      - watch","---","# Source: tigera-operator/templates/tigera-operator/02-rolebinding-tigera-operator.yaml","kind: ClusterRoleBinding","apiVersion: rbac.authorization.k8s.io/v1","metadata:","  name: tigera-operator","subjects:","- kind: ServiceAccount","  name: tigera-operator","  namespace: tigera-operator","roleRef:","  kind: ClusterRole","  name: tigera-operator","  apiGroup: rbac.authorization.k8s.io","---","# Source: tigera-operator/templates/tigera-operator/02-tigera-operator.yaml","apiVersion: apps/v1","kind: Deployment","metadata:","  name: tigera-operator","  namespace: tigera-operator","  labels:","    k8s-app: tigera-operator","spec:","  replicas: 1","  selector:","    matchLabels:","      name: tigera-operator","  template:","    metadata:","      labels:","        name: tigera-operator","        k8s-app: tigera-operator","    spec:","      nodeSelector:","        kubernetes.io/os: linux","      tolerations:","        - effect: NoExecute","          operator: Exists","        - effect: NoSchedule","          operator: Exists","      serviceAccountName: tigera-operator","      hostNetwork: true","      # This must be set when hostNetwork is true or else the cluster services won't resolve","      dnsPolicy: ClusterFirstWithHostNet","      containers:","        - name: tigera-operator","          image: quay.io/tigera/operator:v1.30.11","          imagePullPolicy: IfNotPresent","          command:","            - operator","          volumeMounts:","            - name: var-lib-calico","              readOnly: true","              mountPath: /var/lib/calico","          env:","            - name: WATCH_NAMESPACE","              value: \"\"","            - name: POD_NAME","              valueFrom:","                fieldRef:","                  fieldPath: metadata.name","            - name: OPERATOR_NAME","              value: \"tigera-operator\"","            - name: TIGERA_OPERATOR_INIT_IMAGE_VERSION","              value: v1.30.11","          envFrom:","            - configMapRef:","                name: kubernetes-services-endpoint","                optional: true","      volumes:","        - name: var-lib-calico","          hostPath:","            path: /var/lib/calico"],"stylingDirectives":[[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-c1"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":15,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":23,"c":"pl-s"}],[{"s":2,"e":8,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":25,"c":"pl-s"}],[],[{"s":0,"e":66,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":47,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":26,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":34,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":29,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":30,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":19,"c":"pl-ent"},{"s":21,"e":85,"c":"pl-s"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":91,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":89,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":25,"c":"pl-s"},{"s":24,"e":25,"c":"pl-pds"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":55,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":53,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":83,"c":"pl-s"}],[{"s":20,"e":33,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":65,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":81,"c":"pl-s"}],[{"s":24,"e":81,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-s"},{"s":24,"e":25,"c":"pl-pds"},{"s":27,"e":28,"c":"pl-pds"},{"s":29,"e":82,"c":"pl-s"}],[{"s":24,"e":83,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-s"},{"s":24,"e":25,"c":"pl-pds"},{"s":27,"e":28,"c":"pl-pds"},{"s":29,"e":82,"c":"pl-s"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":64,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":66,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":24,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":33,"c":"pl-s"}],[{"s":16,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":16,"e":23,"c":"pl-ent"},{"s":25,"e":26,"c":"pl-c1"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":58,"c":"pl-s"},{"s":57,"e":58,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":96,"c":"pl-s"}],[{"s":18,"e":86,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":42,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":30,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":55,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":30,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":25,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":45,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":149,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":80,"c":"pl-s"},{"s":79,"e":80,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":33,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":25,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":55,"c":"pl-s"},{"s":54,"e":55,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":34,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":32,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":86,"c":"pl-s"}],[{"s":20,"e":43,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":82,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":31,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":81,"c":"pl-s"}],[{"s":24,"e":83,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-s"},{"s":24,"e":25,"c":"pl-pds"},{"s":30,"e":31,"c":"pl-pds"},{"s":32,"e":82,"c":"pl-s"}],[{"s":24,"e":83,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-s"},{"s":24,"e":25,"c":"pl-pds"},{"s":27,"e":28,"c":"pl-pds"},{"s":29,"e":84,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-s"},{"s":24,"e":25,"c":"pl-pds"},{"s":27,"e":28,"c":"pl-pds"},{"s":29,"e":51,"c":"pl-s"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":33,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":86,"c":"pl-s"}],[{"s":18,"e":65,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":90,"c":"pl-s"}],[{"s":20,"e":31,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":32,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":68,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":81,"c":"pl-s"}],[{"s":20,"e":43,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"}],[{"s":18,"e":90,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":85,"c":"pl-s"}],[{"s":20,"e":47,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":59,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":13,"c":"pl-ent"}],[{"s":4,"e":41,"c":"pl-ent"},{"s":43,"e":50,"c":"pl-s"}],[{"s":2,"e":19,"c":"pl-ent"},{"s":21,"e":25,"c":"pl-c1"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":40,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":19,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":27,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":22,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":23,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":81,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":35,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":83,"c":"pl-s"}],[{"s":20,"e":79,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":33,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":20,"e":33,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":35,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":83,"c":"pl-s"}],[{"s":20,"e":79,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":33,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":20,"e":33,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":37,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":83,"c":"pl-s"}],[{"s":20,"e":79,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":33,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":20,"e":33,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":37,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":83,"c":"pl-s"}],[{"s":20,"e":79,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":33,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":20,"e":33,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":57,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":38,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":17,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":25,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":20,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":21,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":87,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":55,"c":"pl-s"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":33,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":93,"c":"pl-s"}],[{"s":18,"e":67,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":28,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":90,"c":"pl-s"}],[{"s":18,"e":51,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":18,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":60,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":67,"c":"pl-s"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":35,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":30,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":25,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":45,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":149,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":80,"c":"pl-s"},{"s":79,"e":80,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":33,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":25,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":20,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":96,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":88,"c":"pl-s"}],[{"s":18,"e":73,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":88,"c":"pl-s"}],[{"s":18,"e":86,"c":"pl-s"}],[{"s":18,"e":95,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":59,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":62,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":29,"c":"pl-s"},{"s":18,"e":19,"c":"pl-pds"},{"s":28,"e":29,"c":"pl-pds"},{"s":30,"e":91,"c":"pl-s"}],[{"s":18,"e":58,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":66,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":64,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":45,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":23,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":31,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":27,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":27,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":89,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":18,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":89,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":58,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":18,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":19,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":12,"e":20,"c":"pl-ent"}],[{"s":14,"e":18,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-s"}],[{"s":14,"e":18,"c":"pl-s"}],[{"s":14,"e":19,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":67,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":13,"c":"pl-ent"}],[{"s":4,"e":41,"c":"pl-ent"},{"s":43,"e":50,"c":"pl-s"}],[{"s":2,"e":19,"c":"pl-ent"},{"s":21,"e":25,"c":"pl-c1"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":48,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":26,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":34,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":30,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":30,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":95,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":55,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":18,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":33,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":51,"c":"pl-s"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":16,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":95,"c":"pl-s"}],[{"s":14,"e":76,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":19,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":66,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":24,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":34,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":81,"c":"pl-s"}],[{"s":26,"e":47,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":45,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":96,"c":"pl-s"}],[{"s":26,"e":47,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":60,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":65,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":29,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":62,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":24,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":34,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":81,"c":"pl-s"}],[{"s":26,"e":47,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":45,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":96,"c":"pl-s"}],[{"s":26,"e":47,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":60,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":65,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":29,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":62,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":17,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":55,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":37,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":18,"e":37,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":18,"e":40,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":18,"e":40,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":18,"e":25,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":86,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":82,"c":"pl-s"}],[{"s":24,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":30,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":78,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":70,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":85,"c":"pl-s"}],[{"s":28,"e":83,"c":"pl-s"}],[{"s":28,"e":52,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":31,"c":"pl-s"}],[{"s":18,"e":25,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":86,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":82,"c":"pl-s"}],[{"s":24,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":30,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":78,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":70,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":85,"c":"pl-s"}],[{"s":28,"e":83,"c":"pl-s"}],[{"s":28,"e":52,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":31,"c":"pl-s"}],[{"s":16,"e":24,"c":"pl-ent"}],[{"s":18,"e":37,"c":"pl-s"}],[{"s":18,"e":37,"c":"pl-s"}],[{"s":18,"e":40,"c":"pl-s"}],[{"s":18,"e":40,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":45,"c":"pl-s"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":33,"c":"pl-s"}],[{"s":16,"e":24,"c":"pl-ent"},{"s":26,"e":30,"c":"pl-c1"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":20,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":30,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":77,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":64,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":67,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":33,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":68,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":56,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":34,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":83,"c":"pl-s"}],[{"s":32,"e":78,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":86,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":46,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":31,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":77,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":64,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":67,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":33,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":68,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":56,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":34,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":83,"c":"pl-s"}],[{"s":32,"e":78,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":86,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":46,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":31,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":68,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":49,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":28,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":36,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":31,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":32,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":19,"c":"pl-ent"},{"s":21,"e":82,"c":"pl-s"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":81,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":67,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":74,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":28,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":91,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":42,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":68,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":49,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":28,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":36,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":31,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":32,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":19,"c":"pl-ent"},{"s":21,"e":78,"c":"pl-s"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":95,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":43,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":35,"c":"pl-s"},{"s":34,"e":35,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":44,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":35,"c":"pl-s"},{"s":34,"e":35,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":28,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":89,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":29,"c":"pl-s"},{"s":28,"e":29,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"}],[{"s":18,"e":27,"c":"pl-s"}],[{"s":18,"e":24,"c":"pl-s"}],[{"s":18,"e":25,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":48,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":99,"c":"pl-s"}],[{"s":0,"e":24,"c":"pl-s"},{"s":23,"e":24,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":65,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":33,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":88,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":33,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":113,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":44,"e":46,"c":"pl-cce"}],[{"s":0,"e":76,"c":"pl-s"},{"s":55,"e":57,"c":"pl-cce"},{"s":75,"e":76,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":24,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":35,"c":"pl-s"},{"s":34,"e":35,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":25,"c":"pl-s"},{"s":24,"e":25,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":37,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":38,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":90,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":60,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":44,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":47,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":48,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"},{"s":90,"e":92,"c":"pl-cce"}],[{"s":0,"e":99,"c":"pl-s"}],[{"s":0,"e":24,"c":"pl-s"},{"s":23,"e":24,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":39,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"},{"s":73,"e":75,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":52,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":55,"c":"pl-s"},{"s":54,"e":55,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":33,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":36,"c":"pl-s"},{"s":35,"e":36,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":30,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":88,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":64,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":47,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":34,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":53,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":70,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":31,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":56,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":16,"e":23,"c":"pl-ent"},{"s":25,"e":28,"c":"pl-s"}],[{"s":16,"e":42,"c":"pl-ent"},{"s":44,"e":48,"c":"pl-c1"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":56,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"},{"s":85,"e":87,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"},{"s":42,"e":44,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":68,"c":"pl-s"},{"s":67,"e":68,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":60,"e":62,"c":"pl-cce"}],[{"s":0,"e":57,"c":"pl-s"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":37,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":45,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":45,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":41,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":34,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":33,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"}],[{"s":18,"e":78,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":63,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":42,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":63,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":42,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":99,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":43,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"},{"s":84,"e":85,"c":"pl-pds"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":84,"c":"pl-s"}],[{"s":20,"e":56,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":23,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":39,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"},{"s":52,"e":54,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":44,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":84,"c":"pl-s"}],[{"s":20,"e":56,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":23,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":143,"c":"pl-s"}],[{"s":18,"e":95,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":101,"c":"pl-s"}],[{"s":18,"e":86,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":73,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"}],[{"s":18,"e":25,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"},{"s":26,"e":28,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":51,"e":53,"c":"pl-cce"}],[{"s":0,"e":50,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":24,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":24,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":89,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":67,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":27,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":20,"e":27,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":30,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":69,"e":71,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":33,"e":35,"c":"pl-cce"},{"s":36,"e":38,"c":"pl-cce"},{"s":66,"e":68,"c":"pl-cce"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"},{"s":68,"e":70,"c":"pl-cce"}],[{"s":0,"e":61,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"},{"s":35,"e":37,"c":"pl-cce"},{"s":60,"e":61,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":90,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":39,"e":41,"c":"pl-cce"},{"s":45,"e":47,"c":"pl-cce"}],[{"s":0,"e":58,"c":"pl-s"},{"s":27,"e":29,"c":"pl-cce"},{"s":32,"e":34,"c":"pl-cce"},{"s":57,"e":58,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":56,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":73,"c":"pl-s"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":50,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":90,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":31,"e":33,"c":"pl-cce"}],[{"s":0,"e":23,"c":"pl-s"},{"s":22,"e":23,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":47,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":39,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":55,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":34,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"},{"s":85,"e":87,"c":"pl-cce"}],[{"s":0,"e":79,"c":"pl-s"},{"s":78,"e":79,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":39,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":66,"c":"pl-s"},{"s":65,"e":66,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":33,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":68,"c":"pl-s"},{"s":67,"e":68,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":39,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":30,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":48,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":44,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"},{"s":83,"e":85,"c":"pl-cce"}],[{"s":0,"e":59,"c":"pl-s"},{"s":58,"e":59,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":37,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":48,"e":50,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":62,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":32,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":51,"c":"pl-s"},{"s":50,"e":51,"c":"pl-pds"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":23,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":25,"c":"pl-ent"},{"s":27,"e":30,"c":"pl-s"}],[{"s":18,"e":44,"c":"pl-ent"},{"s":46,"e":50,"c":"pl-c1"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":93,"c":"pl-s"}],[{"s":18,"e":58,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"},{"s":84,"e":85,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":54,"c":"pl-s"},{"s":53,"e":54,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":60,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":58,"c":"pl-s"},{"s":57,"e":58,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":28,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":24,"c":"pl-s"},{"s":23,"e":24,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":29,"c":"pl-s"},{"s":28,"e":29,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"},{"s":60,"e":62,"c":"pl-cce"},{"s":66,"e":68,"c":"pl-cce"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":83,"e":84,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":89,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":32,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":91,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":87,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":31,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":56,"c":"pl-s"}],[{"s":16,"e":23,"c":"pl-ent"},{"s":25,"e":28,"c":"pl-s"}],[{"s":16,"e":42,"c":"pl-ent"},{"s":44,"e":48,"c":"pl-c1"}],[{"s":14,"e":28,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":89,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":49,"c":"pl-s"},{"s":48,"e":49,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":34,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":35,"c":"pl-s"},{"s":34,"e":35,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":40,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":51,"c":"pl-s"},{"s":50,"e":51,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":67,"c":"pl-s"},{"s":66,"e":67,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":66,"c":"pl-s"},{"s":65,"e":66,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":65,"c":"pl-s"},{"s":64,"e":65,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":45,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":51,"c":"pl-s"},{"s":50,"e":51,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":47,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":60,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":34,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":91,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":57,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":59,"c":"pl-s"},{"s":58,"e":59,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":49,"c":"pl-s"},{"s":48,"e":49,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":34,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":89,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":44,"e":46,"c":"pl-cce"}],[{"s":0,"e":33,"c":"pl-s"},{"s":32,"e":33,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":88,"e":89,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":21,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":18,"e":21,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":16,"e":24,"c":"pl-ent"}],[{"s":18,"e":21,"c":"pl-s"}],[{"s":18,"e":21,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":30,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":99,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":23,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":23,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":23,"c":"pl-s"}],[{"s":20,"e":23,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"},{"s":46,"e":48,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":24,"c":"pl-s"},{"s":23,"e":24,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":40,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":48,"c":"pl-s"},{"s":47,"e":48,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":24,"c":"pl-s"},{"s":23,"e":24,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":40,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":63,"c":"pl-s"},{"s":62,"e":63,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":57,"c":"pl-s"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":40,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":88,"e":89,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":24,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":30,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":35,"c":"pl-s"},{"s":34,"e":35,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":32,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":35,"c":"pl-s"},{"s":34,"e":35,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":44,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":71,"c":"pl-s"},{"s":70,"e":71,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":74,"c":"pl-s"},{"s":73,"e":74,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":70,"c":"pl-s"},{"s":69,"e":70,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":32,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":57,"c":"pl-s"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":54,"c":"pl-s"},{"s":53,"e":54,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":59,"c":"pl-s"},{"s":58,"e":59,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":65,"c":"pl-s"},{"s":64,"e":65,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":28,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":65,"c":"pl-s"},{"s":64,"e":65,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":42,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":71,"c":"pl-s"},{"s":70,"e":71,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":60,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":24,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":55,"c":"pl-s"},{"s":54,"e":55,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":32,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":24,"e":26,"c":"pl-cce"}],[{"s":0,"e":42,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":70,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":51,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":29,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":37,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":33,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":33,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":28,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"}],[{"s":18,"e":37,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":24,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"}],[{"s":18,"e":88,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":88,"c":"pl-s"}],[{"s":18,"e":65,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":20,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":82,"c":"pl-s"},{"s":31,"e":32,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":48,"e":50,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":70,"c":"pl-s"},{"s":69,"e":70,"c":"pl-pds"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":31,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":85,"c":"pl-s"}],[{"s":24,"e":46,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":41,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":28,"e":56,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":89,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":38,"e":40,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":73,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":67,"e":69,"c":"pl-cce"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":45,"e":47,"c":"pl-cce"},{"s":48,"e":50,"c":"pl-cce"},{"s":61,"e":63,"c":"pl-cce"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":55,"e":57,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":30,"e":32,"c":"pl-cce"},{"s":45,"e":47,"c":"pl-cce"}],[{"s":0,"e":94,"c":"pl-s"},{"s":46,"e":48,"c":"pl-cce"},{"s":81,"e":83,"c":"pl-cce"},{"s":91,"e":93,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":39,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":90,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":84,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":66,"c":"pl-s"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":87,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":83,"c":"pl-s"}],[{"s":32,"e":39,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":82,"c":"pl-s"}],[{"s":32,"e":49,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":37,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":83,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":63,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":82,"c":"pl-s"}],[{"s":24,"e":33,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":68,"e":70,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":57,"c":"pl-s"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":46,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":83,"c":"pl-s"}],[{"s":24,"e":87,"c":"pl-s"}],[{"s":24,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":86,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":66,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":29,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":65,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":46,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":65,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":27,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":86,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":66,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":31,"c":"pl-ent"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":85,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-s"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":34,"c":"pl-s"}],[{"s":22,"e":48,"c":"pl-ent"},{"s":50,"e":54,"c":"pl-c1"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"},{"s":35,"e":36,"c":"pl-pds"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":32,"e":34,"c":"pl-cce"},{"s":37,"e":39,"c":"pl-cce"},{"s":41,"e":43,"c":"pl-cce"},{"s":46,"e":48,"c":"pl-cce"},{"s":50,"e":52,"c":"pl-cce"},{"s":56,"e":58,"c":"pl-cce"},{"s":60,"e":62,"c":"pl-cce"},{"s":68,"e":70,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"},{"s":78,"e":80,"c":"pl-cce"}],[{"s":0,"e":70,"c":"pl-s"},{"s":24,"e":26,"c":"pl-cce"},{"s":33,"e":35,"c":"pl-cce"},{"s":69,"e":70,"c":"pl-pds"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":34,"c":"pl-s"}],[{"s":22,"e":48,"c":"pl-ent"},{"s":50,"e":54,"c":"pl-c1"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":83,"c":"pl-s"}],[{"s":24,"e":38,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":41,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":28,"e":56,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":89,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":38,"e":40,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":73,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":67,"e":69,"c":"pl-cce"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":45,"e":47,"c":"pl-cce"},{"s":48,"e":50,"c":"pl-cce"},{"s":61,"e":63,"c":"pl-cce"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":55,"e":57,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":30,"e":32,"c":"pl-cce"},{"s":45,"e":47,"c":"pl-cce"}],[{"s":0,"e":94,"c":"pl-s"},{"s":46,"e":48,"c":"pl-cce"},{"s":81,"e":83,"c":"pl-cce"},{"s":91,"e":93,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":39,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":90,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":84,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":66,"c":"pl-s"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":87,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":83,"c":"pl-s"}],[{"s":32,"e":39,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":82,"c":"pl-s"}],[{"s":32,"e":49,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":37,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":83,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":63,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":82,"c":"pl-s"},{"s":31,"e":32,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":48,"e":50,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":70,"c":"pl-s"},{"s":69,"e":70,"c":"pl-pds"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":31,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":85,"c":"pl-s"}],[{"s":24,"e":46,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":41,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":28,"e":56,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":89,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":38,"e":40,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":73,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":67,"e":69,"c":"pl-cce"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":45,"e":47,"c":"pl-cce"},{"s":48,"e":50,"c":"pl-cce"},{"s":61,"e":63,"c":"pl-cce"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":55,"e":57,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":30,"e":32,"c":"pl-cce"},{"s":45,"e":47,"c":"pl-cce"}],[{"s":0,"e":94,"c":"pl-s"},{"s":46,"e":48,"c":"pl-cce"},{"s":81,"e":83,"c":"pl-cce"},{"s":91,"e":93,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":39,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":90,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":84,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":66,"c":"pl-s"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":87,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":83,"c":"pl-s"}],[{"s":32,"e":39,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":82,"c":"pl-s"}],[{"s":32,"e":49,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":37,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":83,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":63,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":82,"c":"pl-s"}],[{"s":24,"e":33,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":68,"e":70,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":57,"c":"pl-s"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":46,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":83,"c":"pl-s"}],[{"s":24,"e":87,"c":"pl-s"}],[{"s":24,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":86,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":66,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":29,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":65,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":46,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":65,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":27,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":86,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":66,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":31,"c":"pl-ent"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":85,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-s"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":34,"c":"pl-s"}],[{"s":22,"e":48,"c":"pl-ent"},{"s":50,"e":54,"c":"pl-c1"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"},{"s":35,"e":36,"c":"pl-pds"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":32,"e":34,"c":"pl-cce"},{"s":37,"e":39,"c":"pl-cce"},{"s":41,"e":43,"c":"pl-cce"},{"s":46,"e":48,"c":"pl-cce"},{"s":50,"e":52,"c":"pl-cce"},{"s":56,"e":58,"c":"pl-cce"},{"s":60,"e":62,"c":"pl-cce"},{"s":68,"e":70,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"},{"s":78,"e":80,"c":"pl-cce"}],[{"s":0,"e":70,"c":"pl-s"},{"s":24,"e":26,"c":"pl-cce"},{"s":33,"e":35,"c":"pl-cce"},{"s":69,"e":70,"c":"pl-pds"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":34,"c":"pl-s"}],[{"s":22,"e":48,"c":"pl-ent"},{"s":50,"e":54,"c":"pl-c1"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":83,"c":"pl-s"}],[{"s":24,"e":38,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":41,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":28,"e":56,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":89,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":38,"e":40,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":73,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":67,"e":69,"c":"pl-cce"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":45,"e":47,"c":"pl-cce"},{"s":48,"e":50,"c":"pl-cce"},{"s":61,"e":63,"c":"pl-cce"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":55,"e":57,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":30,"e":32,"c":"pl-cce"},{"s":45,"e":47,"c":"pl-cce"}],[{"s":0,"e":94,"c":"pl-s"},{"s":46,"e":48,"c":"pl-cce"},{"s":81,"e":83,"c":"pl-cce"},{"s":91,"e":93,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":39,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":90,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":84,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":66,"c":"pl-s"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":87,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":83,"c":"pl-s"}],[{"s":32,"e":39,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":82,"c":"pl-s"}],[{"s":32,"e":49,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":37,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":83,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":63,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":59,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":19,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":87,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":95,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":39,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"}],[{"s":18,"e":27,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"},{"s":70,"e":72,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"},{"s":53,"e":55,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":94,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"},{"s":53,"e":55,"c":"pl-cce"},{"s":62,"e":64,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":76,"e":78,"c":"pl-cce"},{"s":92,"e":94,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"},{"s":73,"e":75,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":20,"e":22,"c":"pl-cce"},{"s":23,"e":25,"c":"pl-cce"},{"s":27,"e":29,"c":"pl-cce"},{"s":30,"e":32,"c":"pl-cce"},{"s":34,"e":36,"c":"pl-cce"},{"s":37,"e":39,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":25,"e":27,"c":"pl-cce"},{"s":28,"e":30,"c":"pl-cce"},{"s":32,"e":34,"c":"pl-cce"},{"s":35,"e":37,"c":"pl-cce"},{"s":39,"e":41,"c":"pl-cce"},{"s":42,"e":44,"c":"pl-cce"},{"s":45,"e":47,"c":"pl-cce"},{"s":62,"e":64,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"},{"s":76,"e":78,"c":"pl-cce"},{"s":79,"e":81,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":72,"e":74,"c":"pl-cce"},{"s":75,"e":77,"c":"pl-cce"},{"s":79,"e":81,"c":"pl-cce"},{"s":82,"e":84,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"},{"s":21,"e":23,"c":"pl-cce"},{"s":24,"e":26,"c":"pl-cce"},{"s":76,"e":78,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":38,"e":40,"c":"pl-cce"},{"s":75,"e":77,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"},{"s":47,"e":49,"c":"pl-cce"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"},{"s":66,"e":68,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":41,"e":43,"c":"pl-cce"},{"s":44,"e":46,"c":"pl-cce"},{"s":54,"e":56,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":21,"e":23,"c":"pl-cce"},{"s":27,"e":29,"c":"pl-cce"},{"s":30,"e":32,"c":"pl-cce"},{"s":41,"e":43,"c":"pl-cce"},{"s":51,"e":53,"c":"pl-cce"},{"s":55,"e":57,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":68,"e":70,"c":"pl-cce"}],[{"s":0,"e":46,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"},{"s":23,"e":25,"c":"pl-cce"},{"s":26,"e":28,"c":"pl-cce"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":90,"c":"pl-s"}],[{"s":18,"e":65,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":19,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"},{"s":30,"e":32,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":79,"e":81,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":24,"e":26,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"},{"s":49,"e":51,"c":"pl-cce"}],[{"s":0,"e":80,"c":"pl-s"},{"s":79,"e":80,"c":"pl-pds"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":90,"c":"pl-s"}],[{"s":20,"e":32,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":66,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":47,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":26,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":34,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":29,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":30,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":19,"c":"pl-ent"},{"s":21,"e":87,"c":"pl-s"}],[{"s":10,"e":86,"c":"pl-s"}],[{"s":10,"e":49,"c":"pl-s"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":89,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":18,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":77,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":62,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":43,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":22,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":30,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":25,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":26,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":87,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"},{"s":21,"e":23,"c":"pl-cce"},{"s":36,"e":38,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":34,"e":36,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"},{"s":67,"e":69,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":31,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"},{"s":30,"e":31,"c":"pl-pds"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"},{"s":37,"e":39,"c":"pl-cce"},{"s":40,"e":42,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"},{"s":49,"e":51,"c":"pl-cce"},{"s":52,"e":54,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":43,"e":45,"c":"pl-cce"},{"s":49,"e":51,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"},{"s":35,"e":37,"c":"pl-cce"},{"s":62,"e":64,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":21,"e":23,"c":"pl-cce"},{"s":27,"e":29,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"},{"s":73,"e":75,"c":"pl-cce"},{"s":76,"e":78,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":43,"c":"pl-s"},{"s":42,"e":43,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":18,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":80,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":19,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":57,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":34,"c":"pl-s"}],[{"s":22,"e":48,"c":"pl-ent"},{"s":50,"e":54,"c":"pl-c1"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":95,"c":"pl-s"}],[{"s":18,"e":34,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":59,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":40,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":19,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":27,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":22,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":23,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":82,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":42,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":24,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":31,"c":"pl-s"}],[{"s":18,"e":93,"c":"pl-c"},{"s":18,"e":19,"c":"pl-c"}],[{"s":18,"e":53,"c":"pl-c"},{"s":18,"e":19,"c":"pl-c"}],[{"s":18,"e":26,"c":"pl-ent"},{"s":28,"e":32,"c":"pl-c1"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":24,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":91,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":60,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":29,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":29,"c":"pl-ent"}],[{"s":22,"e":42,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":18,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":46,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":91,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":28,"c":"pl-ent"}],[{"s":16,"e":23,"c":"pl-ent"},{"s":25,"e":26,"c":"pl-c1"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":41,"c":"pl-ent"}],[{"s":16,"e":36,"c":"pl-ent"}],[{"s":18,"e":24,"c":"pl-ent"},{"s":26,"e":31,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":31,"c":"pl-s"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":80,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":28,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":36,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":31,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":12,"e":20,"c":"pl-ent"}],[{"s":14,"e":25,"c":"pl-s"}],[{"s":14,"e":24,"c":"pl-s"}],[{"s":14,"e":18,"c":"pl-s"}],[{"s":14,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":60,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":41,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":20,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":28,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":23,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":24,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":32,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":30,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"}],[{"s":18,"e":50,"c":"pl-s"}],[{"s":16,"e":23,"c":"pl-ent"},{"s":25,"e":35,"c":"pl-c1"}],[{"s":16,"e":23,"c":"pl-ent"},{"s":25,"e":26,"c":"pl-c1"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":28,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":12,"e":20,"c":"pl-ent"}],[{"s":14,"e":32,"c":"pl-s"}],[{"s":14,"e":28,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":60,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":41,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":20,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":28,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":23,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":24,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":19,"c":"pl-ent"}],[{"s":16,"e":36,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":31,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":12,"e":20,"c":"pl-ent"}],[{"s":14,"e":19,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":56,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":37,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":16,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":24,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":19,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":86,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"}],[{"s":18,"e":99,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":70,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":18,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":43,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":30,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"},{"s":72,"e":74,"c":"pl-cce"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":89,"c":"pl-s"}],[{"s":18,"e":33,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":18,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":41,"c":"pl-s"},{"s":40,"e":41,"c":"pl-pds"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":25,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":82,"c":"pl-s"}],[{"s":22,"e":74,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":98,"c":"pl-s"}],[{"s":22,"e":82,"c":"pl-s"}],[{"s":22,"e":90,"c":"pl-s"}],[{"s":22,"e":82,"c":"pl-s"}],[{"s":22,"e":84,"c":"pl-s"}],[{"s":22,"e":53,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":90,"c":"pl-s"}],[{"s":18,"e":31,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":41,"c":"pl-s"},{"s":40,"e":41,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":89,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":33,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":27,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":41,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":12,"e":20,"c":"pl-ent"}],[{"s":14,"e":18,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":63,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":13,"c":"pl-ent"}],[{"s":4,"e":41,"c":"pl-ent"},{"s":43,"e":50,"c":"pl-s"}],[{"s":2,"e":19,"c":"pl-ent"},{"s":21,"e":25,"c":"pl-c1"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":44,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":23,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":31,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":26,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":27,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":90,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":69,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":78,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":59,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":38,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":46,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":41,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":42,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"}],[{"s":14,"e":51,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":29,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":27,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":91,"c":"pl-s"}],[{"s":22,"e":64,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":38,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":94,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":67,"c":"pl-s"},{"s":66,"e":67,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"}],[{"s":22,"e":64,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":34,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":91,"c":"pl-s"}],[{"s":26,"e":69,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":82,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"},{"s":80,"e":81,"c":"pl-pds"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":37,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":90,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":75,"c":"pl-s"},{"s":74,"e":75,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":38,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":94,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":67,"c":"pl-s"},{"s":66,"e":67,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":84,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":74,"c":"pl-s"},{"s":73,"e":74,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":24,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":85,"c":"pl-s"}],[{"s":22,"e":64,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":38,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":94,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":67,"c":"pl-s"},{"s":66,"e":67,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":32,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":82,"c":"pl-s"}],[{"s":22,"e":84,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":38,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":94,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":67,"c":"pl-s"},{"s":66,"e":67,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":34,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":85,"c":"pl-s"}],[{"s":22,"e":85,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":38,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":94,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":67,"c":"pl-s"},{"s":66,"e":67,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":30,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":79,"c":"pl-s"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":75,"c":"pl-s"},{"s":74,"e":75,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":44,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":31,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":58,"c":"pl-s"},{"s":57,"e":58,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"},{"s":85,"e":86,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":12,"e":20,"c":"pl-ent"}],[{"s":14,"e":25,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":16,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":81,"c":"pl-s"}],[{"s":14,"e":87,"c":"pl-s"}],[{"s":14,"e":85,"c":"pl-s"}],[{"s":14,"e":46,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":36,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":73,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":44,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":89,"c":"pl-s"}],[{"s":22,"e":33,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":31,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":80,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":42,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":34,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":68,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":38,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":84,"c":"pl-s"}],[{"s":30,"e":84,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":40,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":83,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"},{"s":87,"e":88,"c":"pl-pds"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":41,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":35,"c":"pl-s"},{"s":34,"e":35,"c":"pl-pds"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":42,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":34,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":88,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":78,"c":"pl-s"},{"s":77,"e":78,"c":"pl-pds"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":89,"c":"pl-s"}],[{"s":26,"e":68,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":42,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":34,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":36,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":86,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":42,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":34,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":38,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":89,"c":"pl-s"}],[{"s":26,"e":89,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":42,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":34,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":34,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":85,"c":"pl-s"}],[{"s":22,"e":83,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"},{"s":28,"e":33,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":18,"e":40,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":85,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":79,"c":"pl-s"},{"s":78,"e":79,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":30,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":85,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":48,"c":"pl-s"},{"s":47,"e":48,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":35,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":67,"c":"pl-s"},{"s":66,"e":67,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":39,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":91,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":28,"c":"pl-s"},{"s":27,"e":28,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":16,"e":24,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":64,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":45,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":23,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":31,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":27,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":27,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":19,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":20,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":82,"c":"pl-s"},{"s":31,"e":32,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":48,"e":50,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":70,"c":"pl-s"},{"s":69,"e":70,"c":"pl-pds"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":31,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":85,"c":"pl-s"}],[{"s":24,"e":46,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":41,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":28,"e":56,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":89,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":38,"e":40,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":73,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":67,"e":69,"c":"pl-cce"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":45,"e":47,"c":"pl-cce"},{"s":48,"e":50,"c":"pl-cce"},{"s":61,"e":63,"c":"pl-cce"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":55,"e":57,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":30,"e":32,"c":"pl-cce"},{"s":45,"e":47,"c":"pl-cce"}],[{"s":0,"e":94,"c":"pl-s"},{"s":46,"e":48,"c":"pl-cce"},{"s":81,"e":83,"c":"pl-cce"},{"s":91,"e":93,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":39,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":90,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":84,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":66,"c":"pl-s"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":87,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":83,"c":"pl-s"}],[{"s":32,"e":39,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":82,"c":"pl-s"}],[{"s":32,"e":49,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":37,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":83,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":63,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":82,"c":"pl-s"}],[{"s":24,"e":33,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":68,"e":70,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":57,"c":"pl-s"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":46,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":83,"c":"pl-s"}],[{"s":24,"e":87,"c":"pl-s"}],[{"s":24,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":86,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":66,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":29,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":65,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":46,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":65,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":27,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":86,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":66,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":31,"c":"pl-ent"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":85,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-s"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":34,"c":"pl-s"}],[{"s":22,"e":48,"c":"pl-ent"},{"s":50,"e":54,"c":"pl-c1"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"},{"s":35,"e":36,"c":"pl-pds"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":32,"e":34,"c":"pl-cce"},{"s":37,"e":39,"c":"pl-cce"},{"s":41,"e":43,"c":"pl-cce"},{"s":46,"e":48,"c":"pl-cce"},{"s":50,"e":52,"c":"pl-cce"},{"s":56,"e":58,"c":"pl-cce"},{"s":60,"e":62,"c":"pl-cce"},{"s":68,"e":70,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"},{"s":78,"e":80,"c":"pl-cce"}],[{"s":0,"e":70,"c":"pl-s"},{"s":24,"e":26,"c":"pl-cce"},{"s":33,"e":35,"c":"pl-cce"},{"s":69,"e":70,"c":"pl-pds"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":34,"c":"pl-s"}],[{"s":22,"e":48,"c":"pl-ent"},{"s":50,"e":54,"c":"pl-c1"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":83,"c":"pl-s"}],[{"s":24,"e":38,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":41,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":28,"e":56,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":89,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":38,"e":40,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":73,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":67,"e":69,"c":"pl-cce"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":45,"e":47,"c":"pl-cce"},{"s":48,"e":50,"c":"pl-cce"},{"s":61,"e":63,"c":"pl-cce"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":55,"e":57,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":30,"e":32,"c":"pl-cce"},{"s":45,"e":47,"c":"pl-cce"}],[{"s":0,"e":94,"c":"pl-s"},{"s":46,"e":48,"c":"pl-cce"},{"s":81,"e":83,"c":"pl-cce"},{"s":91,"e":93,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":39,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":90,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":84,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":66,"c":"pl-s"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":87,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":83,"c":"pl-s"}],[{"s":32,"e":39,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":82,"c":"pl-s"}],[{"s":32,"e":49,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":37,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":83,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":63,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":82,"c":"pl-s"},{"s":31,"e":32,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":48,"e":50,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":70,"c":"pl-s"},{"s":69,"e":70,"c":"pl-pds"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":31,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":85,"c":"pl-s"}],[{"s":24,"e":46,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":41,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":28,"e":56,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":89,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":38,"e":40,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":73,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":67,"e":69,"c":"pl-cce"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":45,"e":47,"c":"pl-cce"},{"s":48,"e":50,"c":"pl-cce"},{"s":61,"e":63,"c":"pl-cce"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":55,"e":57,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":30,"e":32,"c":"pl-cce"},{"s":45,"e":47,"c":"pl-cce"}],[{"s":0,"e":94,"c":"pl-s"},{"s":46,"e":48,"c":"pl-cce"},{"s":81,"e":83,"c":"pl-cce"},{"s":91,"e":93,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":39,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":90,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":84,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":66,"c":"pl-s"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":87,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":83,"c":"pl-s"}],[{"s":32,"e":39,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":82,"c":"pl-s"}],[{"s":32,"e":49,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":37,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":83,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":63,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":82,"c":"pl-s"}],[{"s":24,"e":33,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":68,"e":70,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":57,"c":"pl-s"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":46,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":83,"c":"pl-s"}],[{"s":24,"e":87,"c":"pl-s"}],[{"s":24,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":86,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":66,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":29,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":65,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":46,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":65,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":27,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":86,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":66,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":31,"c":"pl-ent"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":85,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-s"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":34,"c":"pl-s"}],[{"s":22,"e":48,"c":"pl-ent"},{"s":50,"e":54,"c":"pl-c1"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"},{"s":35,"e":36,"c":"pl-pds"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":32,"e":34,"c":"pl-cce"},{"s":37,"e":39,"c":"pl-cce"},{"s":41,"e":43,"c":"pl-cce"},{"s":46,"e":48,"c":"pl-cce"},{"s":50,"e":52,"c":"pl-cce"},{"s":56,"e":58,"c":"pl-cce"},{"s":60,"e":62,"c":"pl-cce"},{"s":68,"e":70,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"},{"s":78,"e":80,"c":"pl-cce"}],[{"s":0,"e":70,"c":"pl-s"},{"s":24,"e":26,"c":"pl-cce"},{"s":33,"e":35,"c":"pl-cce"},{"s":69,"e":70,"c":"pl-pds"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":34,"c":"pl-s"}],[{"s":22,"e":48,"c":"pl-ent"},{"s":50,"e":54,"c":"pl-c1"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":83,"c":"pl-s"}],[{"s":24,"e":38,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":41,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":28,"e":56,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":89,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":38,"e":40,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":73,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":40,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":67,"e":69,"c":"pl-cce"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":45,"e":47,"c":"pl-cce"},{"s":48,"e":50,"c":"pl-cce"},{"s":61,"e":63,"c":"pl-cce"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":55,"e":57,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":30,"e":32,"c":"pl-cce"},{"s":45,"e":47,"c":"pl-cce"}],[{"s":0,"e":94,"c":"pl-s"},{"s":46,"e":48,"c":"pl-cce"},{"s":81,"e":83,"c":"pl-cce"},{"s":91,"e":93,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":39,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":90,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":84,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":66,"c":"pl-s"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":87,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":82,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":83,"c":"pl-s"}],[{"s":32,"e":39,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":82,"c":"pl-s"}],[{"s":32,"e":49,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":37,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":83,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":32,"e":63,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":19,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"}],[{"s":18,"e":87,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":95,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":39,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":81,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"},{"s":70,"e":72,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"},{"s":53,"e":55,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":94,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"},{"s":53,"e":55,"c":"pl-cce"},{"s":62,"e":64,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":76,"e":78,"c":"pl-cce"},{"s":92,"e":94,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"},{"s":73,"e":75,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":20,"e":22,"c":"pl-cce"},{"s":23,"e":25,"c":"pl-cce"},{"s":27,"e":29,"c":"pl-cce"},{"s":30,"e":32,"c":"pl-cce"},{"s":34,"e":36,"c":"pl-cce"},{"s":37,"e":39,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":25,"e":27,"c":"pl-cce"},{"s":28,"e":30,"c":"pl-cce"},{"s":32,"e":34,"c":"pl-cce"},{"s":35,"e":37,"c":"pl-cce"},{"s":39,"e":41,"c":"pl-cce"},{"s":42,"e":44,"c":"pl-cce"},{"s":45,"e":47,"c":"pl-cce"},{"s":62,"e":64,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":69,"e":71,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"},{"s":76,"e":78,"c":"pl-cce"},{"s":79,"e":81,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":72,"e":74,"c":"pl-cce"},{"s":75,"e":77,"c":"pl-cce"},{"s":79,"e":81,"c":"pl-cce"},{"s":82,"e":84,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"},{"s":21,"e":23,"c":"pl-cce"},{"s":24,"e":26,"c":"pl-cce"},{"s":76,"e":78,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":38,"e":40,"c":"pl-cce"},{"s":75,"e":77,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"},{"s":47,"e":49,"c":"pl-cce"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"},{"s":66,"e":68,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":41,"e":43,"c":"pl-cce"},{"s":44,"e":46,"c":"pl-cce"},{"s":54,"e":56,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":21,"e":23,"c":"pl-cce"},{"s":27,"e":29,"c":"pl-cce"},{"s":30,"e":32,"c":"pl-cce"},{"s":41,"e":43,"c":"pl-cce"},{"s":51,"e":53,"c":"pl-cce"},{"s":55,"e":57,"c":"pl-cce"},{"s":64,"e":66,"c":"pl-cce"},{"s":68,"e":70,"c":"pl-cce"}],[{"s":0,"e":46,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"},{"s":23,"e":25,"c":"pl-cce"},{"s":26,"e":28,"c":"pl-cce"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":90,"c":"pl-s"}],[{"s":18,"e":65,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":19,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":22,"e":24,"c":"pl-cce"}],[{"s":0,"e":91,"c":"pl-s"},{"s":68,"e":70,"c":"pl-cce"}],[{"s":0,"e":93,"c":"pl-s"},{"s":68,"e":70,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"}],[{"s":0,"e":55,"c":"pl-s"},{"s":54,"e":55,"c":"pl-pds"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":90,"c":"pl-s"}],[{"s":20,"e":32,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":60,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":41,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":30,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":20,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":28,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":23,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":24,"c":"pl-s"}],[{"s":2,"e":23,"c":"pl-ent"},{"s":25,"e":30,"c":"pl-c1"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":19,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":19,"c":"pl-ent"},{"s":21,"e":85,"c":"pl-s"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":83,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":18,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":77,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":0,"e":6,"c":"pl-ent"}],[{"s":2,"e":15,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-s"},{"s":10,"e":11,"c":"pl-pds"},{"s":11,"e":12,"c":"pl-pds"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-s"},{"s":12,"e":13,"c":"pl-pds"},{"s":13,"e":14,"c":"pl-pds"}],[{"s":2,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[{"s":2,"e":16,"c":"pl-ent"},{"s":18,"e":20,"c":"pl-s"}],[],[],[{"s":0,"e":53,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":13,"c":"pl-ent"}],[{"s":4,"e":41,"c":"pl-ent"},{"s":43,"e":50,"c":"pl-s"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":37,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":27,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":19,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":27,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":22,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":23,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":19,"c":"pl-ent"},{"s":21,"e":84,"c":"pl-s"}],[{"s":10,"e":88,"c":"pl-s"}],[{"s":10,"e":29,"c":"pl-s"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":86,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":33,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":86,"c":"pl-s"}],[{"s":18,"e":44,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":22,"e":54,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":86,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":86,"c":"pl-s"}],[{"s":26,"e":54,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":80,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":88,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":37,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":26,"e":85,"c":"pl-s"}],[{"s":26,"e":89,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":42,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":43,"c":"pl-c1"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":34,"c":"pl-c1"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":81,"c":"pl-s"}],[{"s":26,"e":51,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":86,"c":"pl-s"}],[{"s":30,"e":75,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":94,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":80,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":86,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":89,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":54,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":85,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":88,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":66,"c":"pl-s"},{"s":65,"e":66,"c":"pl-pds"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":46,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":83,"c":"pl-s"}],[{"s":38,"e":56,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":94,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":57,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":90,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":91,"c":"pl-s"}],[{"s":48,"e":78,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":70,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":97,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":40,"e":61,"c":"pl-ent"},{"s":63,"e":69,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":86,"c":"pl-s"}],[{"s":38,"e":71,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":69,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":49,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":87,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":77,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":86,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":86,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":40,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":91,"c":"pl-s"}],[{"s":34,"e":87,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":92,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":81,"c":"pl-s"}],[{"s":36,"e":68,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"}],[{"s":40,"e":56,"c":"pl-s"}],[{"s":40,"e":58,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":45,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":91,"c":"pl-s"}],[{"s":40,"e":73,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":72,"c":"pl-s"},{"s":71,"e":72,"c":"pl-pds"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":89,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":50,"e":82,"c":"pl-s"}],[{"s":50,"e":69,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":42,"e":68,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-ent"},{"s":66,"e":69,"c":"pl-s"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":129,"c":"pl-s"},{"s":128,"e":129,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":86,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":141,"c":"pl-s"},{"s":140,"e":141,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":44,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":83,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":84,"c":"pl-s"}],[{"s":34,"e":73,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":82,"c":"pl-s"}],[{"s":36,"e":76,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":45,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":72,"c":"pl-s"},{"s":71,"e":72,"c":"pl-pds"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":89,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":50,"e":82,"c":"pl-s"}],[{"s":50,"e":69,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":42,"e":68,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-ent"},{"s":66,"e":69,"c":"pl-s"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":129,"c":"pl-s"},{"s":128,"e":129,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":86,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":141,"c":"pl-s"},{"s":140,"e":141,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":42,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":83,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":47,"e":49,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":44,"e":46,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":70,"e":72,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":66,"c":"pl-s"},{"s":65,"e":66,"c":"pl-pds"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":82,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"},{"s":79,"e":81,"c":"pl-cce"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":58,"c":"pl-s"},{"s":57,"e":58,"c":"pl-pds"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":42,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":71,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":39,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":53,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":44,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":89,"c":"pl-s"}],[{"s":40,"e":76,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":54,"c":"pl-s"}],[{"s":38,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":90,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":47,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":55,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":84,"c":"pl-s"}],[{"s":34,"e":81,"c":"pl-s"}],[{"s":34,"e":86,"c":"pl-s"}],[{"s":34,"e":90,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":81,"c":"pl-s"}],[{"s":36,"e":89,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":49,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":89,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":79,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":56,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"}],[{"s":44,"e":92,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-s"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":65,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":49,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":81,"c":"pl-s"}],[{"s":50,"e":79,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":82,"c":"pl-s"}],[{"s":50,"e":88,"c":"pl-s"}],[{"s":50,"e":87,"c":"pl-s"}],[{"s":50,"e":67,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":82,"c":"pl-s"}],[{"s":50,"e":83,"c":"pl-s"}],[{"s":50,"e":84,"c":"pl-s"}],[{"s":50,"e":82,"c":"pl-s"}],[{"s":50,"e":84,"c":"pl-s"}],[{"s":50,"e":81,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-s"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":49,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":40,"e":51,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":90,"c":"pl-s"}],[{"s":44,"e":90,"c":"pl-s"}],[{"s":44,"e":96,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":38,"e":59,"c":"pl-ent"},{"s":61,"e":67,"c":"pl-s"}],[{"s":36,"e":50,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":90,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":93,"c":"pl-s"}],[{"s":38,"e":43,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":49,"c":"pl-s"}],[{"s":38,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":36,"e":43,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":112,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"},{"s":59,"e":61,"c":"pl-cce"}],[{"s":0,"e":73,"c":"pl-s"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":38,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":82,"c":"pl-s"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":54,"e":56,"c":"pl-cce"},{"s":70,"e":72,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":40,"e":42,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":40,"e":42,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":88,"e":89,"c":"pl-pds"}],[{"s":38,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":36,"e":54,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":84,"c":"pl-s"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":54,"e":56,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":54,"c":"pl-s"},{"s":53,"e":54,"c":"pl-pds"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":52,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":82,"c":"pl-s"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":64,"e":66,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":54,"c":"pl-s"},{"s":53,"e":54,"c":"pl-pds"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":92,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":88,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":88,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"},{"s":70,"e":72,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":98,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":57,"e":59,"c":"pl-cce"}],[{"s":0,"e":64,"c":"pl-s"},{"s":42,"e":44,"c":"pl-cce"},{"s":63,"e":64,"c":"pl-pds"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":43,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":16,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":81,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":24,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":90,"c":"pl-s"}],[{"s":18,"e":51,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":88,"c":"pl-s"},{"s":31,"e":32,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":20,"e":22,"c":"pl-cce"}],[{"s":0,"e":93,"c":"pl-s"},{"s":79,"e":81,"c":"pl-cce"},{"s":90,"e":92,"c":"pl-cce"}],[{"s":0,"e":100,"c":"pl-s"},{"s":20,"e":22,"c":"pl-cce"},{"s":33,"e":35,"c":"pl-cce"},{"s":41,"e":43,"c":"pl-cce"},{"s":51,"e":53,"c":"pl-cce"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":97,"c":"pl-s"},{"s":26,"e":28,"c":"pl-cce"},{"s":48,"e":50,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"},{"s":89,"e":91,"c":"pl-cce"},{"s":95,"e":97,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":29,"e":31,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"},{"s":62,"e":64,"c":"pl-cce"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":38,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":84,"c":"pl-s"}],[{"s":24,"e":85,"c":"pl-s"}],[{"s":24,"e":80,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"},{"s":30,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":27,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":81,"c":"pl-s"}],[{"s":24,"e":82,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-ent"},{"s":33,"e":38,"c":"pl-c1"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":38,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":89,"c":"pl-s"}],[{"s":24,"e":100,"c":"pl-s"}],[{"s":24,"e":89,"c":"pl-s"}],[{"s":24,"e":86,"c":"pl-s"}],[{"s":24,"e":46,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"},{"s":30,"e":35,"c":"pl-s"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":32,"c":"pl-c1"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":87,"c":"pl-s"}],[{"s":24,"e":81,"c":"pl-s"}],[{"s":24,"e":82,"c":"pl-s"}],[{"s":24,"e":86,"c":"pl-s"}],[{"s":24,"e":81,"c":"pl-s"}],[{"s":24,"e":52,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-ent"},{"s":33,"e":37,"c":"pl-c1"}],[{"s":22,"e":31,"c":"pl-ent"},{"s":33,"e":34,"c":"pl-c1"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":71,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":88,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":30,"c":"pl-s"},{"s":24,"e":25,"c":"pl-pds"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":24,"e":31,"c":"pl-s"},{"s":24,"e":25,"c":"pl-pds"},{"s":30,"e":31,"c":"pl-pds"}],[{"s":24,"e":31,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":98,"c":"pl-s"}],[{"s":24,"e":87,"c":"pl-s"}],[{"s":24,"e":86,"c":"pl-s"}],[{"s":24,"e":83,"c":"pl-s"}],[{"s":24,"e":100,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-ent"},{"s":33,"e":36,"c":"pl-c1"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":142,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":38,"c":"pl-s"}],[{"s":20,"e":27,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":19,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":65,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":4,"e":16,"c":"pl-ent"}],[{"s":6,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[],[],[{"s":0,"e":52,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":13,"c":"pl-ent"}],[{"s":4,"e":41,"c":"pl-ent"},{"s":43,"e":50,"c":"pl-s"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":36,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":27,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":18,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":26,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":21,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":22,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":19,"c":"pl-ent"},{"s":21,"e":82,"c":"pl-s"}],[{"s":10,"e":81,"c":"pl-s"}],[{"s":10,"e":81,"c":"pl-s"}],[{"s":10,"e":88,"c":"pl-s"}],[{"s":10,"e":82,"c":"pl-s"}],[{"s":10,"e":82,"c":"pl-s"}],[{"s":10,"e":38,"c":"pl-s"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":76,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":20,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":66,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":83,"c":"pl-s"}],[{"s":24,"e":81,"c":"pl-s"}],[{"s":24,"e":60,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":82,"c":"pl-s"}],[{"s":24,"e":83,"c":"pl-s"}],[{"s":24,"e":86,"c":"pl-s"}],[{"s":24,"e":109,"c":"pl-s"}],[{"s":24,"e":65,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":4,"e":16,"c":"pl-ent"}],[{"s":6,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[],[],[{"s":0,"e":56,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":13,"c":"pl-ent"}],[{"s":4,"e":41,"c":"pl-ent"},{"s":43,"e":50,"c":"pl-s"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":40,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":27,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":22,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":30,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":25,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":26,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":19,"c":"pl-ent"},{"s":21,"e":92,"c":"pl-s"}],[{"s":10,"e":89,"c":"pl-s"}],[{"s":10,"e":86,"c":"pl-s"}],[{"s":10,"e":58,"c":"pl-s"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":45,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":99,"c":"pl-s"}],[{"s":18,"e":92,"c":"pl-s"}],[{"s":18,"e":55,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":22,"e":54,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":86,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":86,"c":"pl-s"}],[{"s":26,"e":54,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":80,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":89,"c":"pl-s"}],[{"s":22,"e":33,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":37,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":26,"e":85,"c":"pl-s"}],[{"s":26,"e":90,"c":"pl-s"}],[{"s":26,"e":81,"c":"pl-s"}],[{"s":26,"e":68,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":43,"c":"pl-c1"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":34,"c":"pl-c1"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":62,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":86,"c":"pl-s"}],[{"s":30,"e":75,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":94,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":80,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":86,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":89,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":54,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":89,"c":"pl-s"}],[{"s":30,"e":38,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":88,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":104,"c":"pl-s"}],[{"s":0,"e":55,"c":"pl-s"},{"s":54,"e":55,"c":"pl-pds"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":46,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":83,"c":"pl-s"}],[{"s":38,"e":56,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":94,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":57,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":90,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":91,"c":"pl-s"}],[{"s":48,"e":78,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":70,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":97,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":40,"e":61,"c":"pl-ent"},{"s":63,"e":69,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":86,"c":"pl-s"}],[{"s":38,"e":71,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":69,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":49,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":87,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":77,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":86,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":86,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":40,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":92,"c":"pl-s"}],[{"s":34,"e":88,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":81,"c":"pl-s"}],[{"s":34,"e":81,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":87,"c":"pl-s"}],[{"s":36,"e":86,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":88,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"}],[{"s":40,"e":63,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":45,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":72,"c":"pl-s"},{"s":71,"e":72,"c":"pl-pds"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":89,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":50,"e":82,"c":"pl-s"}],[{"s":50,"e":69,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":42,"e":68,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-ent"},{"s":66,"e":69,"c":"pl-s"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":129,"c":"pl-s"},{"s":128,"e":129,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":86,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":141,"c":"pl-s"},{"s":140,"e":141,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":42,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":89,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"},{"s":37,"e":39,"c":"pl-cce"}],[{"s":0,"e":97,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":61,"e":63,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"},{"s":67,"e":69,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":104,"c":"pl-s"},{"s":47,"e":49,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":95,"c":"pl-s"},{"s":94,"e":95,"c":"pl-pds"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":88,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"},{"s":37,"e":39,"c":"pl-cce"}],[{"s":0,"e":96,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":94,"c":"pl-s"},{"s":93,"e":94,"c":"pl-pds"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":42,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":71,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":39,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":53,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":44,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":89,"c":"pl-s"}],[{"s":40,"e":76,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":54,"c":"pl-s"}],[{"s":38,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":90,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":47,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":29,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":21,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"}],[{"s":22,"e":39,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":29,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":39,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":88,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":31,"c":"pl-s"},{"s":30,"e":31,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":29,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":27,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":51,"c":"pl-s"},{"s":50,"e":51,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":29,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":25,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"}],[{"s":22,"e":83,"c":"pl-s"}],[{"s":22,"e":88,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-ent"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":33,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":73,"c":"pl-s"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":26,"e":32,"c":"pl-ent"},{"s":34,"e":39,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":74,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":40,"c":"pl-ent"}],[{"s":26,"e":33,"c":"pl-ent"},{"s":35,"e":40,"c":"pl-c1"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"},{"s":45,"e":47,"c":"pl-cce"}],[{"s":0,"e":34,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":24,"e":37,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"}],[{"s":28,"e":43,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-s"}],[{"s":28,"e":33,"c":"pl-s"}],[{"s":28,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":79,"c":"pl-s"},{"s":78,"e":79,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"}],[{"s":28,"e":35,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":36,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":85,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":76,"c":"pl-s"},{"s":66,"e":68,"c":"pl-cce"},{"s":73,"e":75,"c":"pl-cce"},{"s":75,"e":76,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":31,"c":"pl-s"}],[{"s":18,"e":32,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":85,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":31,"c":"pl-s"},{"s":30,"e":31,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":30,"c":"pl-s"}],[{"s":22,"e":25,"c":"pl-s"}],[{"s":22,"e":25,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":21,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"}],[{"s":22,"e":83,"c":"pl-s"}],[{"s":22,"e":66,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"},{"s":28,"e":33,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":18,"e":36,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":79,"c":"pl-s"},{"s":78,"e":79,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":44,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"}],[{"s":22,"e":84,"c":"pl-s"}],[{"s":22,"e":81,"c":"pl-s"}],[{"s":22,"e":44,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":86,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":39,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":86,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":35,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":90,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":62,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":81,"c":"pl-s"}],[{"s":26,"e":64,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":90,"c":"pl-s"}],[{"s":26,"e":54,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":35,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":74,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":44,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"}],[{"s":22,"e":84,"c":"pl-s"}],[{"s":22,"e":63,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":86,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":39,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":27,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":86,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":35,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":90,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":62,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":81,"c":"pl-s"}],[{"s":26,"e":64,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":90,"c":"pl-s"}],[{"s":26,"e":54,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":35,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":74,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":33,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":50,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":22,"e":53,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":86,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":86,"c":"pl-s"}],[{"s":26,"e":54,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":80,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":88,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":37,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":81,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":26,"e":85,"c":"pl-s"}],[{"s":26,"e":89,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":42,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":43,"c":"pl-c1"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":34,"c":"pl-c1"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":81,"c":"pl-s"}],[{"s":26,"e":51,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":86,"c":"pl-s"}],[{"s":30,"e":75,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":94,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":80,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":86,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":89,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":54,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":85,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":88,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":66,"c":"pl-s"},{"s":65,"e":66,"c":"pl-pds"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":46,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":83,"c":"pl-s"}],[{"s":38,"e":56,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":94,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":57,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":90,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":91,"c":"pl-s"}],[{"s":48,"e":78,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":70,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":97,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":40,"e":61,"c":"pl-ent"},{"s":63,"e":69,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":86,"c":"pl-s"}],[{"s":38,"e":71,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":69,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":49,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":87,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":77,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":86,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":86,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":40,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":92,"c":"pl-s"}],[{"s":34,"e":88,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":91,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":92,"c":"pl-s"}],[{"s":36,"e":56,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":45,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":90,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":68,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":72,"c":"pl-s"},{"s":71,"e":72,"c":"pl-pds"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":89,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":50,"e":82,"c":"pl-s"}],[{"s":50,"e":69,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":42,"e":68,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-ent"},{"s":66,"e":69,"c":"pl-s"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":129,"c":"pl-s"},{"s":128,"e":129,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":86,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":141,"c":"pl-s"},{"s":140,"e":141,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":44,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":84,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":84,"c":"pl-s"}],[{"s":34,"e":73,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":82,"c":"pl-s"}],[{"s":36,"e":75,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-s"}],[{"s":40,"e":53,"c":"pl-s"}],[{"s":40,"e":54,"c":"pl-s"}],[{"s":40,"e":51,"c":"pl-s"}],[{"s":40,"e":71,"c":"pl-s"}],[{"s":40,"e":94,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":45,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":94,"c":"pl-s"}],[{"s":40,"e":73,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":72,"c":"pl-s"},{"s":71,"e":72,"c":"pl-pds"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":89,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":50,"e":82,"c":"pl-s"}],[{"s":50,"e":69,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":42,"e":68,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-ent"},{"s":66,"e":69,"c":"pl-s"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":129,"c":"pl-s"},{"s":128,"e":129,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":86,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":141,"c":"pl-s"},{"s":140,"e":141,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":42,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":84,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"},{"s":47,"e":49,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":83,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":57,"c":"pl-s"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":42,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":71,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":39,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":53,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":44,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":89,"c":"pl-s"}],[{"s":40,"e":76,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":54,"c":"pl-s"}],[{"s":38,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":90,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":47,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":43,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":96,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":22,"e":54,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":86,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":86,"c":"pl-s"}],[{"s":26,"e":54,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":80,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":88,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":37,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":26,"e":85,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":64,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":43,"c":"pl-c1"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":34,"c":"pl-c1"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":61,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":86,"c":"pl-s"}],[{"s":30,"e":75,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":94,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":80,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":86,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":89,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":54,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":87,"c":"pl-s"}],[{"s":30,"e":38,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":88,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":54,"c":"pl-s"},{"s":53,"e":54,"c":"pl-pds"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":46,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":83,"c":"pl-s"}],[{"s":38,"e":56,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":94,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":57,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":90,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":91,"c":"pl-s"}],[{"s":48,"e":78,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":70,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":97,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":40,"e":61,"c":"pl-ent"},{"s":63,"e":69,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":86,"c":"pl-s"}],[{"s":38,"e":71,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":69,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":49,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":87,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":77,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":86,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":86,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":40,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":91,"c":"pl-s"}],[{"s":34,"e":88,"c":"pl-s"}],[{"s":34,"e":81,"c":"pl-s"}],[{"s":34,"e":84,"c":"pl-s"}],[{"s":34,"e":76,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":85,"c":"pl-s"}],[{"s":36,"e":84,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"}],[{"s":40,"e":62,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":45,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":72,"c":"pl-s"},{"s":71,"e":72,"c":"pl-pds"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":89,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":50,"e":82,"c":"pl-s"}],[{"s":50,"e":69,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":42,"e":68,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-ent"},{"s":66,"e":69,"c":"pl-s"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":129,"c":"pl-s"},{"s":128,"e":129,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":86,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":141,"c":"pl-s"},{"s":140,"e":141,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":42,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":88,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"},{"s":37,"e":39,"c":"pl-cce"}],[{"s":0,"e":96,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":61,"e":63,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":80,"e":81,"c":"pl-pds"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":87,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"},{"s":37,"e":39,"c":"pl-cce"}],[{"s":0,"e":95,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"},{"s":91,"e":92,"c":"pl-pds"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":42,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":71,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":39,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":53,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":44,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":89,"c":"pl-s"}],[{"s":40,"e":76,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":54,"c":"pl-s"}],[{"s":38,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":90,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":47,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":35,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":104,"c":"pl-s"}],[{"s":18,"e":93,"c":"pl-s"}],[{"s":18,"e":88,"c":"pl-s"}],[{"s":18,"e":78,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":24,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":103,"c":"pl-s"}],[{"s":22,"e":36,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"},{"s":28,"e":32,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":30,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":82,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":47,"c":"pl-s"},{"s":46,"e":47,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":24,"c":"pl-s"},{"s":22,"e":23,"c":"pl-pds"},{"s":23,"e":24,"c":"pl-pds"}],[{"s":22,"e":37,"c":"pl-s"}],[{"s":22,"e":37,"c":"pl-s"}],[{"s":22,"e":37,"c":"pl-s"}],[{"s":22,"e":39,"c":"pl-s"}],[{"s":22,"e":39,"c":"pl-s"}],[{"s":22,"e":39,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":36,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":76,"c":"pl-s"},{"s":75,"e":76,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":24,"c":"pl-s"},{"s":22,"e":23,"c":"pl-pds"},{"s":23,"e":24,"c":"pl-pds"}],[{"s":22,"e":35,"c":"pl-s"}],[{"s":22,"e":35,"c":"pl-s"}],[{"s":22,"e":35,"c":"pl-s"}],[{"s":22,"e":37,"c":"pl-s"}],[{"s":22,"e":37,"c":"pl-s"}],[{"s":22,"e":37,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":111,"c":"pl-s"},{"s":110,"e":111,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":24,"c":"pl-ent"}],[{"s":18,"e":24,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":17,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":90,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":82,"c":"pl-s"}],[{"s":22,"e":83,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":81,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":26,"e":28,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":71,"e":73,"c":"pl-cce"}],[{"s":0,"e":33,"c":"pl-s"},{"s":32,"e":33,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":32,"c":"pl-s"}],[{"s":26,"e":35,"c":"pl-s"}],[{"s":26,"e":35,"c":"pl-s"}],[{"s":26,"e":35,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":42,"e":44,"c":"pl-cce"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":41,"c":"pl-s"},{"s":22,"e":24,"c":"pl-cce"},{"s":40,"e":41,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":28,"c":"pl-s"}],[{"s":22,"e":25,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":24,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":32,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":89,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":86,"c":"pl-s"}],[{"s":18,"e":70,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":86,"c":"pl-s"}],[{"s":20,"e":89,"c":"pl-s"}],[{"s":20,"e":67,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":33,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":90,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-s"}],[{"s":24,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":40,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":86,"c":"pl-s"}],[{"s":24,"e":82,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":30,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":105,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":42,"e":44,"c":"pl-cce"}],[{"s":0,"e":51,"c":"pl-s"},{"s":50,"e":51,"c":"pl-pds"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":102,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":82,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":81,"c":"pl-s"}],[{"s":34,"e":53,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":26,"e":52,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-s"}],[{"s":26,"e":48,"c":"pl-ent"},{"s":50,"e":53,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-ent"}],[{"s":26,"e":46,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":150,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":86,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":137,"c":"pl-s"},{"s":136,"e":137,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":46,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":150,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":88,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":107,"c":"pl-s"},{"s":106,"e":107,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":33,"c":"pl-s"}],[{"s":20,"e":40,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":38,"c":"pl-ent"}],[{"s":16,"e":36,"c":"pl-ent"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":80,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":34,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":84,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":18,"e":32,"c":"pl-s"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":37,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":81,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":83,"c":"pl-s"}],[{"s":20,"e":87,"c":"pl-s"}],[{"s":20,"e":40,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":85,"c":"pl-s"}],[{"s":24,"e":71,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":23,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":83,"c":"pl-s"}],[{"s":24,"e":82,"c":"pl-s"}],[{"s":24,"e":84,"c":"pl-s"}],[{"s":24,"e":44,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":82,"c":"pl-s"}],[{"s":24,"e":87,"c":"pl-s"}],[{"s":24,"e":81,"c":"pl-s"}],[{"s":24,"e":73,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":37,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":82,"c":"pl-s"}],[{"s":24,"e":84,"c":"pl-s"}],[{"s":24,"e":82,"c":"pl-s"}],[{"s":24,"e":82,"c":"pl-s"}],[{"s":24,"e":84,"c":"pl-s"}],[{"s":24,"e":51,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"},{"s":30,"e":35,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":82,"c":"pl-s"}],[{"s":24,"e":81,"c":"pl-s"}],[{"s":24,"e":56,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":36,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":22,"e":53,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":86,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":86,"c":"pl-s"}],[{"s":26,"e":54,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":80,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":37,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":81,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":26,"e":85,"c":"pl-s"}],[{"s":26,"e":81,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":26,"e":52,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":43,"c":"pl-c1"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":34,"c":"pl-c1"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":51,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":86,"c":"pl-s"}],[{"s":30,"e":75,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":94,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":80,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":86,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":89,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":54,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":89,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":88,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":46,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":83,"c":"pl-s"}],[{"s":38,"e":56,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":94,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":57,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":90,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":91,"c":"pl-s"}],[{"s":48,"e":78,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":70,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":97,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":40,"e":61,"c":"pl-ent"},{"s":63,"e":69,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":86,"c":"pl-s"}],[{"s":38,"e":71,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":69,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":49,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":87,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":77,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":86,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":86,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":40,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":84,"c":"pl-s"}],[{"s":34,"e":88,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":84,"c":"pl-s"}],[{"s":34,"e":60,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":81,"c":"pl-s"}],[{"s":36,"e":74,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"}],[{"s":40,"e":55,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":45,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":94,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":62,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":72,"c":"pl-s"},{"s":71,"e":72,"c":"pl-pds"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":89,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":50,"e":82,"c":"pl-s"}],[{"s":50,"e":69,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":42,"e":68,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-ent"},{"s":66,"e":69,"c":"pl-s"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":129,"c":"pl-s"},{"s":128,"e":129,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":86,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":141,"c":"pl-s"},{"s":140,"e":141,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":42,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":81,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"},{"s":37,"e":39,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":61,"e":63,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":94,"c":"pl-s"}],[{"s":0,"e":58,"c":"pl-s"},{"s":57,"e":58,"c":"pl-pds"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":87,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"},{"s":84,"e":86,"c":"pl-cce"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":96,"c":"pl-s"}],[{"s":0,"e":57,"c":"pl-s"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":42,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":71,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":39,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":53,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":44,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":89,"c":"pl-s"}],[{"s":40,"e":76,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":54,"c":"pl-s"}],[{"s":38,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":90,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":47,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":27,"c":"pl-s"},{"s":26,"e":27,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"}],[{"s":18,"e":25,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":28,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":86,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":44,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":111,"c":"pl-s"},{"s":34,"e":36,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"}],[{"s":0,"e":32,"c":"pl-s"},{"s":31,"e":32,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":25,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":83,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":80,"e":82,"c":"pl-cce"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"}],[{"s":0,"e":36,"c":"pl-s"},{"s":35,"e":36,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":30,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":82,"c":"pl-s"}],[{"s":20,"e":83,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":147,"c":"pl-s"},{"s":35,"e":36,"c":"pl-pds"}],[{"s":0,"e":78,"c":"pl-s"},{"s":77,"e":78,"c":"pl-pds"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":18,"e":39,"c":"pl-ent"},{"s":41,"e":47,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":37,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"},{"s":28,"e":30,"c":"pl-cce"},{"s":34,"e":36,"c":"pl-cce"},{"s":85,"e":86,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":32,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":86,"c":"pl-s"}],[{"s":18,"e":93,"c":"pl-s"}],[{"s":18,"e":86,"c":"pl-s"}],[{"s":18,"e":87,"c":"pl-s"}],[{"s":18,"e":83,"c":"pl-s"}],[{"s":18,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"}],[{"s":18,"e":20,"c":"pl-s"},{"s":18,"e":19,"c":"pl-pds"},{"s":19,"e":20,"c":"pl-pds"}],[{"s":18,"e":21,"c":"pl-s"}],[{"s":18,"e":21,"c":"pl-s"}],[{"s":18,"e":21,"c":"pl-s"}],[{"s":18,"e":27,"c":"pl-s"}],[{"s":18,"e":34,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":65,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":21,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":39,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":57,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":24,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":22,"e":37,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":50,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":24,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":22,"e":36,"c":"pl-ent"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":53,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"},{"s":52,"e":53,"c":"pl-pds"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":146,"c":"pl-s"}],[{"s":24,"e":50,"c":"pl-ent"},{"s":52,"e":56,"c":"pl-c1"}],[{"s":22,"e":33,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":52,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":31,"c":"pl-s"}],[{"s":26,"e":33,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":91,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":37,"c":"pl-s"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":32,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":68,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":31,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":84,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":106,"c":"pl-s"}],[{"s":0,"e":80,"c":"pl-s"},{"s":79,"e":80,"c":"pl-pds"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":75,"c":"pl-s"},{"s":74,"e":75,"c":"pl-pds"}],[{"s":24,"e":50,"c":"pl-ent"},{"s":52,"e":56,"c":"pl-c1"}],[{"s":22,"e":36,"c":"pl-ent"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":100,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":38,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":24,"e":50,"c":"pl-ent"},{"s":52,"e":56,"c":"pl-c1"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":82,"c":"pl-s"}],[{"s":22,"e":62,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":62,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":120,"c":"pl-s"},{"s":43,"e":45,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":18,"e":20,"c":"pl-cce"}],[{"s":0,"e":32,"c":"pl-s"},{"s":31,"e":32,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":94,"c":"pl-s"}],[{"s":18,"e":33,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":30,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":86,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":69,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":50,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":83,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":45,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":84,"c":"pl-s"}],[{"s":32,"e":53,"c":"pl-s"}],[{"s":30,"e":40,"c":"pl-ent"}],[{"s":32,"e":48,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":83,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-s"}],[{"s":34,"e":39,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":79,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":41,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":84,"c":"pl-s"}],[{"s":42,"e":53,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":84,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":45,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":44,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":82,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":44,"c":"pl-ent"}],[{"s":38,"e":41,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":45,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":83,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-s"}],[{"s":34,"e":39,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":79,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":41,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":84,"c":"pl-s"}],[{"s":42,"e":53,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":84,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":45,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":44,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":82,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":44,"c":"pl-ent"}],[{"s":38,"e":41,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":45,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":30,"e":51,"c":"pl-ent"},{"s":53,"e":59,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":92,"c":"pl-s"}],[{"s":32,"e":69,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":38,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":35,"c":"pl-s"}],[{"s":22,"e":68,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":92,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":103,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":66,"c":"pl-s"},{"s":65,"e":66,"c":"pl-pds"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":43,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":81,"c":"pl-s"}],[{"s":30,"e":49,"c":"pl-s"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":85,"c":"pl-s"}],[{"s":32,"e":83,"c":"pl-s"}],[{"s":32,"e":84,"c":"pl-s"}],[{"s":32,"e":49,"c":"pl-s"}],[{"s":30,"e":40,"c":"pl-ent"}],[{"s":32,"e":48,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":83,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-s"}],[{"s":34,"e":39,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":79,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":41,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":84,"c":"pl-s"}],[{"s":42,"e":53,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":84,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":45,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":44,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":82,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":44,"c":"pl-ent"}],[{"s":38,"e":41,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":45,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":83,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-s"}],[{"s":34,"e":39,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":79,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":41,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":84,"c":"pl-s"}],[{"s":42,"e":53,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":84,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":45,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":44,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":82,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":44,"c":"pl-ent"}],[{"s":38,"e":41,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":45,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":30,"e":51,"c":"pl-ent"},{"s":53,"e":59,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":39,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":43,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":24,"e":45,"c":"pl-ent"},{"s":47,"e":53,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":29,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":85,"c":"pl-s"}],[{"s":18,"e":89,"c":"pl-s"}],[{"s":18,"e":55,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":87,"c":"pl-s"}],[{"s":22,"e":54,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":86,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":86,"c":"pl-s"}],[{"s":26,"e":54,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":80,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":37,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":82,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":26,"e":85,"c":"pl-s"}],[{"s":26,"e":84,"c":"pl-s"}],[{"s":26,"e":94,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":43,"c":"pl-c1"}],[{"s":24,"e":31,"c":"pl-ent"},{"s":33,"e":34,"c":"pl-c1"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":87,"c":"pl-s"}],[{"s":26,"e":45,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":39,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"}],[{"s":30,"e":79,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":47,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":81,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":48,"c":"pl-s"},{"s":47,"e":48,"c":"pl-pds"}],[{"s":32,"e":58,"c":"pl-ent"},{"s":60,"e":64,"c":"pl-c1"}],[{"s":30,"e":44,"c":"pl-ent"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":47,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":81,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"},{"s":84,"e":85,"c":"pl-pds"}],[{"s":32,"e":58,"c":"pl-ent"},{"s":60,"e":64,"c":"pl-c1"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":42,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":86,"c":"pl-s"}],[{"s":30,"e":75,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":94,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":80,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":86,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":89,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":54,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":80,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":88,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":44,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":46,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":83,"c":"pl-s"}],[{"s":38,"e":56,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":94,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":57,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":90,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":91,"c":"pl-s"}],[{"s":48,"e":78,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":54,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":70,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":97,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":86,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":92,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":88,"c":"pl-s"}],[{"s":58,"e":94,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":87,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":84,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":89,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":59,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":40,"e":61,"c":"pl-ent"},{"s":63,"e":69,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":86,"c":"pl-s"}],[{"s":38,"e":71,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":69,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":49,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":87,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":77,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":85,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":81,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":87,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":86,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":88,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":67,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":86,"c":"pl-s"}],[{"s":42,"e":91,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":85,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":90,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":66,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":57,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":83,"c":"pl-s"}],[{"s":48,"e":80,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":61,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":91,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":64,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":82,"c":"pl-s"}],[{"s":52,"e":90,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":82,"c":"pl-s"}],[{"s":54,"e":69,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":88,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":90,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":71,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":60,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":81,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":93,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":87,"c":"pl-s"}],[{"s":58,"e":82,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-s"}],[{"s":56,"e":61,"c":"pl-ent"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":67,"c":"pl-s"}],[{"s":52,"e":60,"c":"pl-ent"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":54,"e":62,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":70,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"},{"s":56,"e":87,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":46,"e":67,"c":"pl-ent"},{"s":69,"e":75,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":90,"c":"pl-s"}],[{"s":48,"e":77,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":92,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":40,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":86,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":89,"c":"pl-s"}],[{"s":34,"e":81,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":82,"c":"pl-s"}],[{"s":36,"e":57,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":79,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"}],[{"s":40,"e":52,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":45,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":88,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":72,"c":"pl-s"},{"s":71,"e":72,"c":"pl-pds"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":89,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":50,"e":82,"c":"pl-s"}],[{"s":50,"e":69,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":42,"e":68,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-ent"},{"s":66,"e":69,"c":"pl-s"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":129,"c":"pl-s"},{"s":128,"e":129,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":86,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":141,"c":"pl-s"},{"s":140,"e":141,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":44,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":83,"c":"pl-s"}],[{"s":34,"e":88,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":54,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":86,"c":"pl-s"}],[{"s":36,"e":62,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"}],[{"s":40,"e":72,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":45,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":91,"c":"pl-s"}],[{"s":40,"e":73,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":77,"e":79,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":72,"c":"pl-s"},{"s":71,"e":72,"c":"pl-pds"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":89,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":50,"e":82,"c":"pl-s"}],[{"s":50,"e":69,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":42,"e":68,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-ent"},{"s":66,"e":69,"c":"pl-s"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":129,"c":"pl-s"},{"s":128,"e":129,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":51,"c":"pl-ent"},{"s":53,"e":166,"c":"pl-s"}],[{"s":44,"e":70,"c":"pl-ent"},{"s":72,"e":76,"c":"pl-c1"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":86,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":141,"c":"pl-s"},{"s":140,"e":141,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":40,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":42,"c":"pl-ent"}],[{"s":32,"e":52,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":85,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"},{"s":82,"e":84,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"},{"s":47,"e":49,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":83,"e":84,"c":"pl-pds"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":59,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":81,"c":"pl-s"}],[{"s":34,"e":81,"c":"pl-s"}],[{"s":34,"e":88,"c":"pl-s"}],[{"s":34,"e":83,"c":"pl-s"}],[{"s":34,"e":84,"c":"pl-s"}],[{"s":34,"e":85,"c":"pl-s"}],[{"s":34,"e":86,"c":"pl-s"}],[{"s":34,"e":81,"c":"pl-s"}],[{"s":34,"e":86,"c":"pl-s"}],[{"s":34,"e":82,"c":"pl-s"}],[{"s":34,"e":81,"c":"pl-s"}],[{"s":34,"e":71,"c":"pl-s"}],[{"s":32,"e":38,"c":"pl-ent"},{"s":40,"e":45,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":45,"c":"pl-s"}],[{"s":30,"e":41,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":90,"c":"pl-s"},{"s":45,"e":46,"c":"pl-pds"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":47,"c":"pl-s"},{"s":46,"e":47,"c":"pl-pds"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":82,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":42,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":71,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":39,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":53,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":44,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":89,"c":"pl-s"}],[{"s":40,"e":76,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":54,"c":"pl-s"}],[{"s":38,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":90,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":47,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":55,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":84,"c":"pl-s"}],[{"s":34,"e":81,"c":"pl-s"}],[{"s":34,"e":86,"c":"pl-s"}],[{"s":34,"e":90,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":81,"c":"pl-s"}],[{"s":36,"e":89,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":49,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":89,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":79,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":56,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"}],[{"s":44,"e":92,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-s"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":65,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":49,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":81,"c":"pl-s"}],[{"s":50,"e":79,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":82,"c":"pl-s"}],[{"s":50,"e":88,"c":"pl-s"}],[{"s":50,"e":87,"c":"pl-s"}],[{"s":50,"e":67,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":82,"c":"pl-s"}],[{"s":50,"e":83,"c":"pl-s"}],[{"s":50,"e":84,"c":"pl-s"}],[{"s":50,"e":82,"c":"pl-s"}],[{"s":50,"e":84,"c":"pl-s"}],[{"s":50,"e":81,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-s"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":49,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":40,"e":51,"c":"pl-ent"}],[{"s":42,"e":62,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":90,"c":"pl-s"}],[{"s":44,"e":90,"c":"pl-s"}],[{"s":44,"e":96,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":38,"e":59,"c":"pl-ent"},{"s":61,"e":67,"c":"pl-s"}],[{"s":36,"e":50,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":90,"c":"pl-s"}],[{"s":40,"e":87,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":85,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":93,"c":"pl-s"}],[{"s":38,"e":43,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":49,"c":"pl-s"}],[{"s":38,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":36,"e":43,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":112,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"},{"s":59,"e":61,"c":"pl-cce"}],[{"s":0,"e":73,"c":"pl-s"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":38,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":82,"c":"pl-s"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":54,"e":56,"c":"pl-cce"},{"s":70,"e":72,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":40,"e":42,"c":"pl-cce"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":40,"e":42,"c":"pl-cce"}],[{"s":0,"e":87,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":88,"e":89,"c":"pl-pds"}],[{"s":38,"e":44,"c":"pl-ent"},{"s":46,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":36,"e":54,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":84,"c":"pl-s"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":54,"e":56,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":54,"c":"pl-s"},{"s":53,"e":54,"c":"pl-pds"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":52,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":82,"c":"pl-s"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":64,"e":66,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":54,"c":"pl-s"},{"s":53,"e":54,"c":"pl-pds"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":81,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":40,"e":92,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":88,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":88,"c":"pl-s"}],[{"s":40,"e":84,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"},{"s":70,"e":72,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":98,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":57,"e":59,"c":"pl-cce"}],[{"s":0,"e":64,"c":"pl-s"},{"s":42,"e":44,"c":"pl-cce"},{"s":63,"e":64,"c":"pl-pds"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":43,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-s"}],[{"s":36,"e":53,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":30,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"}],[{"s":18,"e":77,"c":"pl-s"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":0,"e":57,"c":"pl-s"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":16,"e":20,"c":"pl-ent"}],[{"s":18,"e":24,"c":"pl-s"}],[{"s":18,"e":40,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":16,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":89,"c":"pl-s"}],[{"s":14,"e":27,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":27,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":87,"c":"pl-s"}],[{"s":18,"e":86,"c":"pl-s"}],[{"s":18,"e":27,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":82,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-s"}],[{"s":16,"e":26,"c":"pl-ent"}],[{"s":18,"e":49,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":103,"c":"pl-s"}],[{"s":22,"e":96,"c":"pl-s"}],[{"s":22,"e":59,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":67,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"}],[{"s":28,"e":48,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":90,"c":"pl-s"}],[{"s":30,"e":82,"c":"pl-s"}],[{"s":30,"e":88,"c":"pl-s"}],[{"s":30,"e":64,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":32,"c":"pl-ent"}],[{"s":28,"e":48,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":82,"c":"pl-s"}],[{"s":30,"e":83,"c":"pl-s"}],[{"s":30,"e":87,"c":"pl-s"}],[{"s":30,"e":85,"c":"pl-s"}],[{"s":30,"e":37,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":93,"c":"pl-s"}],[{"s":26,"e":37,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":41,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":81,"c":"pl-s"}],[{"s":30,"e":85,"c":"pl-s"}],[{"s":30,"e":81,"c":"pl-s"}],[{"s":30,"e":89,"c":"pl-s"}],[{"s":30,"e":102,"c":"pl-s"}],[{"s":30,"e":81,"c":"pl-s"}],[{"s":30,"e":88,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":47,"c":"pl-c1"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":38,"c":"pl-c1"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":41,"c":"pl-s"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":87,"c":"pl-s"}],[{"s":30,"e":66,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":81,"c":"pl-s"}],[{"s":34,"e":88,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":87,"c":"pl-s"}],[{"s":38,"e":81,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":59,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":40,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":83,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":83,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":93,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":48,"c":"pl-s"},{"s":47,"e":48,"c":"pl-pds"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":50,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":87,"c":"pl-s"}],[{"s":42,"e":60,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":84,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":96,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":58,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":74,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":63,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":85,"c":"pl-s"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":87,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":96,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":63,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":44,"e":65,"c":"pl-ent"},{"s":67,"e":73,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":49,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":86,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":90,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":84,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":87,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":65,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":69,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":87,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":91,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":71,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":95,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":79,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":53,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":91,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":86,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":93,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":90,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":84,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":87,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":65,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":69,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":87,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":91,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":71,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":95,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":90,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":94,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":79,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":96,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":89,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":49,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":91,"c":"pl-s"}],[{"s":40,"e":90,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":87,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":62,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"}],[{"s":44,"e":67,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":49,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":85,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":92,"c":"pl-s"}],[{"s":44,"e":89,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":91,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":72,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":84,"c":"pl-s"}],[{"s":54,"e":98,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":85,"c":"pl-s"}],[{"s":54,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":48,"e":56,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":46,"e":72,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-s"}],[{"s":46,"e":68,"c":"pl-ent"},{"s":70,"e":73,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":34,"e":46,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":93,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"},{"s":41,"e":43,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":44,"e":46,"c":"pl-cce"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":60,"e":62,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"},{"s":57,"e":59,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":95,"c":"pl-s"},{"s":94,"e":95,"c":"pl-pds"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":92,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"},{"s":41,"e":43,"c":"pl-cce"}],[{"s":0,"e":100,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":51,"c":"pl-s"},{"s":50,"e":51,"c":"pl-pds"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":51,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":43,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":89,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":77,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":82,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":69,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":83,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":42,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":55,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":83,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":76,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":31,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"}],[{"s":22,"e":41,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":25,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":43,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":33,"c":"pl-s"}],[{"s":26,"e":34,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":43,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":81,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":44,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":33,"c":"pl-s"}],[{"s":26,"e":34,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":62,"c":"pl-s"},{"s":61,"e":62,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":33,"c":"pl-s"}],[{"s":26,"e":34,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":29,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":83,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":37,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":86,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":30,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":82,"c":"pl-s"}],[{"s":32,"e":81,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":44,"c":"pl-ent"}],[{"s":30,"e":37,"c":"pl-ent"},{"s":39,"e":44,"c":"pl-c1"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":85,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":0,"e":89,"c":"pl-s"},{"s":49,"e":51,"c":"pl-cce"}],[{"s":0,"e":38,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":28,"e":41,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":85,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":37,"c":"pl-s"},{"s":36,"e":37,"c":"pl-pds"}],[{"s":30,"e":34,"c":"pl-ent"}],[{"s":32,"e":47,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-s"}],[{"s":32,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":88,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":30,"e":34,"c":"pl-ent"}],[{"s":32,"e":39,"c":"pl-s"}],[{"s":32,"e":40,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":40,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":84,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"},{"s":75,"e":77,"c":"pl-cce"},{"s":82,"e":84,"c":"pl-cce"},{"s":84,"e":85,"c":"pl-pds"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":35,"c":"pl-s"}],[{"s":22,"e":36,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":84,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":50,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":34,"c":"pl-s"}],[{"s":26,"e":29,"c":"pl-s"}],[{"s":26,"e":29,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":25,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"}],[{"s":26,"e":87,"c":"pl-s"}],[{"s":26,"e":74,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-ent"},{"s":32,"e":37,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":37,"c":"pl-s"}],[{"s":22,"e":40,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":87,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-s"}],[{"s":26,"e":32,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":48,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":26,"e":85,"c":"pl-s"}],[{"s":26,"e":48,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":81,"c":"pl-s"}],[{"s":30,"e":82,"c":"pl-s"}],[{"s":30,"e":57,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":81,"c":"pl-s"}],[{"s":30,"e":89,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-s"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":39,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"}],[{"s":30,"e":87,"c":"pl-s"}],[{"s":30,"e":76,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":41,"c":"pl-s"}],[{"s":26,"e":35,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":82,"c":"pl-s"}],[{"s":30,"e":71,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":84,"c":"pl-s"}],[{"s":30,"e":68,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":39,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":86,"c":"pl-s"}],[{"s":30,"e":78,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":48,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":88,"c":"pl-s"}],[{"s":26,"e":67,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":81,"c":"pl-s"}],[{"s":30,"e":82,"c":"pl-s"}],[{"s":30,"e":57,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":31,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":81,"c":"pl-s"}],[{"s":30,"e":89,"c":"pl-s"}],[{"s":30,"e":36,"c":"pl-s"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":39,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"}],[{"s":30,"e":87,"c":"pl-s"}],[{"s":30,"e":76,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":41,"c":"pl-s"}],[{"s":26,"e":35,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":82,"c":"pl-s"}],[{"s":30,"e":71,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":84,"c":"pl-s"}],[{"s":30,"e":68,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":39,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":86,"c":"pl-s"}],[{"s":30,"e":78,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":37,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":90,"c":"pl-s"}],[{"s":22,"e":84,"c":"pl-s"}],[{"s":22,"e":59,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":66,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"}],[{"s":28,"e":48,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":90,"c":"pl-s"}],[{"s":30,"e":82,"c":"pl-s"}],[{"s":30,"e":88,"c":"pl-s"}],[{"s":30,"e":64,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":32,"c":"pl-ent"}],[{"s":28,"e":48,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":82,"c":"pl-s"}],[{"s":30,"e":83,"c":"pl-s"}],[{"s":30,"e":87,"c":"pl-s"}],[{"s":30,"e":85,"c":"pl-s"}],[{"s":30,"e":37,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":81,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":41,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":81,"c":"pl-s"}],[{"s":30,"e":84,"c":"pl-s"}],[{"s":30,"e":81,"c":"pl-s"}],[{"s":30,"e":89,"c":"pl-s"}],[{"s":30,"e":90,"c":"pl-s"}],[{"s":30,"e":83,"c":"pl-s"}],[{"s":30,"e":72,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":47,"c":"pl-c1"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":38,"c":"pl-c1"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":41,"c":"pl-s"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":85,"c":"pl-s"}],[{"s":30,"e":55,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":81,"c":"pl-s"}],[{"s":34,"e":88,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":87,"c":"pl-s"}],[{"s":38,"e":81,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":59,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":40,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":83,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":83,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":89,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":70,"c":"pl-s"},{"s":69,"e":70,"c":"pl-pds"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":50,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":87,"c":"pl-s"}],[{"s":42,"e":60,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":84,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":96,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":58,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":74,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":63,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":85,"c":"pl-s"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":87,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":96,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":63,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":44,"e":65,"c":"pl-ent"},{"s":67,"e":73,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":49,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":86,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":90,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":84,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":87,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":65,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":69,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":87,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":91,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":71,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":95,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":79,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":53,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":91,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":86,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":93,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":90,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":84,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":87,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":65,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":69,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":87,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":91,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":71,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":95,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":90,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":94,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":79,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":84,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":81,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":76,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":82,"c":"pl-s"}],[{"s":40,"e":74,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":87,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":49,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":85,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":90,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":84,"c":"pl-s"}],[{"s":54,"e":98,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":85,"c":"pl-s"}],[{"s":54,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":48,"e":56,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":46,"e":72,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-s"}],[{"s":46,"e":68,"c":"pl-ent"},{"s":70,"e":73,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":34,"e":48,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":88,"c":"pl-s"}],[{"s":38,"e":83,"c":"pl-s"}],[{"s":38,"e":90,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":81,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":83,"c":"pl-s"}],[{"s":40,"e":82,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":87,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":44,"e":57,"c":"pl-s"}],[{"s":44,"e":58,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":44,"e":75,"c":"pl-s"}],[{"s":44,"e":98,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":49,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":85,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":90,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":89,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":84,"c":"pl-s"}],[{"s":54,"e":98,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":85,"c":"pl-s"}],[{"s":54,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":48,"e":56,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":46,"e":72,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-s"}],[{"s":46,"e":68,"c":"pl-ent"},{"s":70,"e":73,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":34,"e":46,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"},{"s":41,"e":43,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"},{"s":82,"e":84,"c":"pl-cce"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"},{"s":85,"e":86,"c":"pl-pds"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":87,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"},{"s":84,"e":86,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"},{"s":84,"e":85,"c":"pl-pds"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":51,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":43,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":89,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":77,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":82,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":69,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":83,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":42,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":55,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":83,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":76,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":47,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":100,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":67,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"}],[{"s":28,"e":48,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":90,"c":"pl-s"}],[{"s":30,"e":82,"c":"pl-s"}],[{"s":30,"e":88,"c":"pl-s"}],[{"s":30,"e":64,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":32,"c":"pl-ent"}],[{"s":28,"e":48,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":82,"c":"pl-s"}],[{"s":30,"e":83,"c":"pl-s"}],[{"s":30,"e":87,"c":"pl-s"}],[{"s":30,"e":85,"c":"pl-s"}],[{"s":30,"e":37,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":92,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":41,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":81,"c":"pl-s"}],[{"s":30,"e":85,"c":"pl-s"}],[{"s":30,"e":81,"c":"pl-s"}],[{"s":30,"e":89,"c":"pl-s"}],[{"s":30,"e":101,"c":"pl-s"}],[{"s":30,"e":89,"c":"pl-s"}],[{"s":30,"e":77,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":47,"c":"pl-c1"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":38,"c":"pl-c1"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":41,"c":"pl-s"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":86,"c":"pl-s"}],[{"s":30,"e":65,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":81,"c":"pl-s"}],[{"s":34,"e":88,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":87,"c":"pl-s"}],[{"s":38,"e":81,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":59,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":40,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":83,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":83,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":91,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":48,"c":"pl-s"},{"s":47,"e":48,"c":"pl-pds"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":50,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":87,"c":"pl-s"}],[{"s":42,"e":60,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":84,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":96,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":58,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":74,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":63,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":85,"c":"pl-s"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":87,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":96,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":63,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":44,"e":65,"c":"pl-ent"},{"s":67,"e":73,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":49,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":86,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":90,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":84,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":87,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":65,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":69,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":87,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":91,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":71,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":95,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":79,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":53,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":91,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":86,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":93,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":90,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":84,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":87,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":65,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":69,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":87,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":91,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":71,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":95,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":90,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":94,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":79,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":95,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":92,"c":"pl-s"}],[{"s":38,"e":86,"c":"pl-s"}],[{"s":38,"e":85,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":89,"c":"pl-s"}],[{"s":40,"e":88,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":87,"c":"pl-s"}],[{"s":44,"e":90,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"}],[{"s":44,"e":66,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":49,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":85,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":91,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":84,"c":"pl-s"}],[{"s":54,"e":98,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":85,"c":"pl-s"}],[{"s":54,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":48,"e":56,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":46,"e":72,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-s"}],[{"s":46,"e":68,"c":"pl-ent"},{"s":70,"e":73,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":34,"e":46,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":92,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"},{"s":41,"e":43,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":100,"c":"pl-s"},{"s":44,"e":46,"c":"pl-cce"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":52,"c":"pl-s"},{"s":51,"e":52,"c":"pl-pds"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":91,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"},{"s":41,"e":43,"c":"pl-cce"}],[{"s":0,"e":99,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":51,"c":"pl-s"},{"s":50,"e":51,"c":"pl-pds"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":51,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":43,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":89,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":77,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":82,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":69,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":83,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":42,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":55,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":83,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":76,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":39,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":82,"c":"pl-s"}],[{"s":22,"e":82,"c":"pl-s"}],[{"s":22,"e":84,"c":"pl-s"}],[{"s":22,"e":89,"c":"pl-s"}],[{"s":22,"e":63,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":28,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":107,"c":"pl-s"}],[{"s":26,"e":40,"c":"pl-s"}],[{"s":24,"e":30,"c":"pl-ent"},{"s":32,"e":36,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":34,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":84,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":60,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":28,"c":"pl-s"},{"s":26,"e":27,"c":"pl-pds"},{"s":27,"e":28,"c":"pl-pds"}],[{"s":26,"e":41,"c":"pl-s"}],[{"s":26,"e":41,"c":"pl-s"}],[{"s":26,"e":41,"c":"pl-s"}],[{"s":26,"e":43,"c":"pl-s"}],[{"s":26,"e":43,"c":"pl-s"}],[{"s":26,"e":43,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":40,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":28,"c":"pl-s"},{"s":26,"e":27,"c":"pl-pds"},{"s":27,"e":28,"c":"pl-pds"}],[{"s":26,"e":39,"c":"pl-s"}],[{"s":26,"e":39,"c":"pl-s"}],[{"s":26,"e":39,"c":"pl-s"}],[{"s":26,"e":41,"c":"pl-s"}],[{"s":26,"e":41,"c":"pl-s"}],[{"s":26,"e":41,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":71,"c":"pl-s"},{"s":70,"e":71,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":28,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":21,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":94,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":81,"c":"pl-s"}],[{"s":26,"e":92,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":85,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":30,"e":32,"c":"pl-cce"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":49,"c":"pl-s"},{"s":30,"e":32,"c":"pl-cce"},{"s":48,"e":49,"c":"pl-pds"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":36,"c":"pl-s"}],[{"s":30,"e":39,"c":"pl-s"}],[{"s":30,"e":39,"c":"pl-s"}],[{"s":30,"e":39,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":30,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":96,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"},{"s":63,"e":65,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":73,"c":"pl-s"},{"s":54,"e":56,"c":"pl-cce"},{"s":72,"e":73,"c":"pl-pds"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":32,"c":"pl-s"}],[{"s":26,"e":29,"c":"pl-s"}],[{"s":26,"e":35,"c":"pl-s"}],[{"s":26,"e":35,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":28,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":36,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":93,"c":"pl-s"}],[{"s":22,"e":83,"c":"pl-s"}],[{"s":22,"e":86,"c":"pl-s"}],[{"s":22,"e":81,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":83,"c":"pl-s"}],[{"s":24,"e":82,"c":"pl-s"}],[{"s":24,"e":81,"c":"pl-s"}],[{"s":24,"e":31,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":37,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":84,"c":"pl-s"}],[{"s":28,"e":37,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"}],[{"s":28,"e":32,"c":"pl-s"}],[{"s":28,"e":33,"c":"pl-s"}],[{"s":28,"e":43,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":44,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":83,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-ent"}],[{"s":28,"e":34,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":88,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":32,"e":34,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"},{"s":72,"e":74,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":80,"e":81,"c":"pl-pds"}],[{"s":30,"e":35,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":82,"c":"pl-s"}],[{"s":34,"e":57,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":86,"c":"pl-s"}],[{"s":38,"e":81,"c":"pl-s"}],[{"s":38,"e":90,"c":"pl-s"}],[{"s":38,"e":57,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":40,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":30,"e":56,"c":"pl-ent"}],[{"s":32,"e":36,"c":"pl-s"}],[{"s":30,"e":52,"c":"pl-ent"},{"s":54,"e":57,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-ent"}],[{"s":30,"e":50,"c":"pl-ent"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":47,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":39,"c":"pl-ent"},{"s":41,"e":154,"c":"pl-s"}],[{"s":32,"e":58,"c":"pl-ent"},{"s":60,"e":64,"c":"pl-c1"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":82,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":0,"e":149,"c":"pl-s"},{"s":148,"e":149,"c":"pl-pds"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-ent"}],[{"s":30,"e":50,"c":"pl-ent"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":47,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":32,"e":39,"c":"pl-ent"},{"s":41,"e":154,"c":"pl-s"}],[{"s":32,"e":58,"c":"pl-ent"},{"s":60,"e":64,"c":"pl-c1"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":81,"c":"pl-s"},{"s":43,"e":44,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":129,"c":"pl-s"},{"s":128,"e":129,"c":"pl-pds"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":37,"c":"pl-s"}],[{"s":24,"e":44,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":31,"c":"pl-s"}],[{"s":18,"e":42,"c":"pl-ent"}],[{"s":20,"e":40,"c":"pl-ent"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"}],[{"s":22,"e":85,"c":"pl-s"}],[{"s":22,"e":92,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":38,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":82,"c":"pl-s"}],[{"s":22,"e":84,"c":"pl-s"}],[{"s":22,"e":93,"c":"pl-s"}],[{"s":22,"e":36,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"},{"s":28,"e":33,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":18,"e":41,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":82,"c":"pl-s"}],[{"s":22,"e":89,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":83,"c":"pl-s"}],[{"s":24,"e":82,"c":"pl-s"}],[{"s":24,"e":57,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":30,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":88,"c":"pl-s"}],[{"s":28,"e":82,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":27,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":87,"c":"pl-s"}],[{"s":28,"e":86,"c":"pl-s"}],[{"s":28,"e":84,"c":"pl-s"}],[{"s":28,"e":52,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":82,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":37,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":24,"e":41,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":81,"c":"pl-s"}],[{"s":28,"e":83,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":81,"c":"pl-s"}],[{"s":28,"e":78,"c":"pl-s"}],[{"s":26,"e":32,"c":"pl-ent"},{"s":34,"e":39,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":39,"c":"pl-s"}],[{"s":24,"e":29,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":86,"c":"pl-s"}],[{"s":28,"e":85,"c":"pl-s"}],[{"s":28,"e":60,"c":"pl-s"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":31,"c":"pl-s"}],[{"s":18,"e":40,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":86,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":66,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"}],[{"s":28,"e":48,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":90,"c":"pl-s"}],[{"s":30,"e":82,"c":"pl-s"}],[{"s":30,"e":88,"c":"pl-s"}],[{"s":30,"e":64,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":32,"c":"pl-ent"}],[{"s":28,"e":48,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":82,"c":"pl-s"}],[{"s":30,"e":83,"c":"pl-s"}],[{"s":30,"e":87,"c":"pl-s"}],[{"s":30,"e":85,"c":"pl-s"}],[{"s":30,"e":37,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":85,"c":"pl-s"}],[{"s":26,"e":36,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":41,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":81,"c":"pl-s"}],[{"s":30,"e":84,"c":"pl-s"}],[{"s":30,"e":81,"c":"pl-s"}],[{"s":30,"e":89,"c":"pl-s"}],[{"s":30,"e":94,"c":"pl-s"}],[{"s":30,"e":82,"c":"pl-s"}],[{"s":30,"e":77,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":47,"c":"pl-c1"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":38,"c":"pl-c1"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":41,"c":"pl-s"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":89,"c":"pl-s"}],[{"s":30,"e":55,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":81,"c":"pl-s"}],[{"s":34,"e":88,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":87,"c":"pl-s"}],[{"s":38,"e":81,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":59,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":40,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":83,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":83,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":84,"c":"pl-s"}],[{"s":34,"e":42,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":50,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":87,"c":"pl-s"}],[{"s":42,"e":60,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":84,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":96,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":58,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":74,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":63,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":85,"c":"pl-s"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":87,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":96,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":63,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":44,"e":65,"c":"pl-ent"},{"s":67,"e":73,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":49,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":86,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":90,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":84,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":87,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":65,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":69,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":87,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":91,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":71,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":95,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":79,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":53,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":91,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":86,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":93,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":90,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":84,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":87,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":65,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":69,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":87,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":91,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":71,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":95,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":90,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":94,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":79,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":88,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":85,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":80,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":82,"c":"pl-s"}],[{"s":40,"e":81,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":87,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"}],[{"s":44,"e":59,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":49,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":85,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":84,"c":"pl-s"}],[{"s":54,"e":98,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":85,"c":"pl-s"}],[{"s":54,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":48,"e":56,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":46,"e":72,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-s"}],[{"s":46,"e":68,"c":"pl-ent"},{"s":70,"e":73,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":34,"e":46,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":85,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"},{"s":41,"e":43,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"},{"s":82,"e":84,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"},{"s":89,"e":90,"c":"pl-pds"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":84,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"},{"s":41,"e":43,"c":"pl-cce"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":88,"e":89,"c":"pl-pds"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":51,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":43,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":89,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":77,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":82,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":69,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":83,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":42,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":55,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":83,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":76,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":29,"c":"pl-s"}],[{"s":22,"e":30,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":32,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":82,"c":"pl-s"}],[{"s":22,"e":82,"c":"pl-s"}],[{"s":22,"e":84,"c":"pl-s"}],[{"s":22,"e":65,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":27,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":133,"c":"pl-s"},{"s":56,"e":58,"c":"pl-cce"}],[{"s":0,"e":81,"c":"pl-s"},{"s":22,"e":24,"c":"pl-cce"}],[{"s":0,"e":43,"c":"pl-s"},{"s":42,"e":43,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":29,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":84,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":115,"c":"pl-s"},{"s":38,"e":40,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":22,"e":24,"c":"pl-cce"}],[{"s":0,"e":43,"c":"pl-s"},{"s":42,"e":43,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":34,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":88,"c":"pl-s"}],[{"s":22,"e":83,"c":"pl-s"}],[{"s":22,"e":35,"c":"pl-s"}],[{"s":20,"e":25,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":83,"c":"pl-s"}],[{"s":24,"e":90,"c":"pl-s"}],[{"s":22,"e":32,"c":"pl-ent"}],[{"s":24,"e":28,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"},{"s":39,"e":151,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":26,"e":30,"c":"pl-ent"},{"s":32,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":22,"e":43,"c":"pl-ent"},{"s":45,"e":51,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":31,"c":"pl-s"}],[{"s":18,"e":41,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":89,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":44,"e":46,"c":"pl-cce"},{"s":50,"e":52,"c":"pl-cce"}],[{"s":0,"e":39,"c":"pl-s"},{"s":38,"e":39,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":36,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"}],[{"s":22,"e":93,"c":"pl-s"}],[{"s":22,"e":83,"c":"pl-s"}],[{"s":22,"e":84,"c":"pl-s"}],[{"s":22,"e":89,"c":"pl-s"}],[{"s":22,"e":82,"c":"pl-s"}],[{"s":22,"e":60,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":24,"c":"pl-s"},{"s":22,"e":23,"c":"pl-pds"},{"s":23,"e":24,"c":"pl-pds"}],[{"s":22,"e":25,"c":"pl-s"}],[{"s":22,"e":25,"c":"pl-s"}],[{"s":22,"e":25,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-s"}],[{"s":22,"e":38,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":25,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":69,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":25,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":84,"c":"pl-s"}],[{"s":26,"e":32,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":43,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":61,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"},{"s":60,"e":61,"c":"pl-pds"}],[{"s":28,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":41,"c":"pl-s"}],[{"s":26,"e":41,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":54,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"},{"s":53,"e":54,"c":"pl-pds"}],[{"s":28,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":41,"c":"pl-s"}],[{"s":26,"e":40,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":57,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"},{"s":56,"e":57,"c":"pl-pds"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":150,"c":"pl-s"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":37,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":56,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":28,"e":32,"c":"pl-ent"}],[{"s":30,"e":35,"c":"pl-s"}],[{"s":30,"e":37,"c":"pl-s"}],[{"s":30,"e":35,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":33,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"}],[{"s":22,"e":88,"c":"pl-s"}],[{"s":22,"e":83,"c":"pl-s"}],[{"s":22,"e":84,"c":"pl-s"}],[{"s":22,"e":63,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"},{"s":28,"e":33,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":18,"e":36,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":88,"c":"pl-s"}],[{"s":22,"e":72,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":35,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":83,"c":"pl-s"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":124,"c":"pl-s"},{"s":123,"e":124,"c":"pl-pds"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":86,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":49,"c":"pl-s"},{"s":48,"e":49,"c":"pl-pds"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":26,"e":40,"c":"pl-ent"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":43,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":76,"c":"pl-s"},{"s":75,"e":76,"c":"pl-pds"}],[{"s":28,"e":54,"c":"pl-ent"},{"s":56,"e":60,"c":"pl-c1"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":86,"c":"pl-s"}],[{"s":26,"e":66,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":31,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":92,"c":"pl-s"}],[{"s":22,"e":66,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":82,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":96,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":22,"e":24,"c":"pl-cce"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":31,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":89,"c":"pl-s"}],[{"s":22,"e":82,"c":"pl-s"}],[{"s":22,"e":53,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":34,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":84,"c":"pl-s"}],[{"s":26,"e":42,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":73,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"}],[{"s":30,"e":86,"c":"pl-s"}],[{"s":30,"e":83,"c":"pl-s"}],[{"s":30,"e":61,"c":"pl-s"}],[{"s":28,"e":33,"c":"pl-ent"}],[{"s":30,"e":41,"c":"pl-ent"},{"s":43,"e":85,"c":"pl-s"}],[{"s":32,"e":87,"c":"pl-s"}],[{"s":32,"e":83,"c":"pl-s"}],[{"s":32,"e":55,"c":"pl-s"}],[{"s":30,"e":40,"c":"pl-ent"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":84,"c":"pl-s"}],[{"s":36,"e":61,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":52,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":87,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-s"}],[{"s":38,"e":43,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":49,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":45,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":88,"c":"pl-s"}],[{"s":46,"e":57,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":88,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":57,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":48,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":83,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":86,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":45,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":49,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":87,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-s"}],[{"s":38,"e":43,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":49,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":45,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":88,"c":"pl-s"}],[{"s":46,"e":57,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":88,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":57,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":48,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":83,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":86,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":45,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":49,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":34,"e":55,"c":"pl-ent"},{"s":57,"e":63,"c":"pl-s"}],[{"s":32,"e":38,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":82,"c":"pl-s"}],[{"s":36,"e":87,"c":"pl-s"}],[{"s":34,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":47,"c":"pl-s"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":42,"c":"pl-s"}],[{"s":32,"e":38,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":39,"c":"pl-s"}],[{"s":26,"e":72,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":83,"c":"pl-s"},{"s":41,"e":42,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":107,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":106,"c":"pl-s"}],[{"s":0,"e":107,"c":"pl-s"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":40,"c":"pl-s"},{"s":39,"e":40,"c":"pl-pds"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":47,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":85,"c":"pl-s"}],[{"s":34,"e":53,"c":"pl-s"}],[{"s":32,"e":37,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"},{"s":47,"e":81,"c":"pl-s"}],[{"s":36,"e":84,"c":"pl-s"}],[{"s":36,"e":83,"c":"pl-s"}],[{"s":36,"e":69,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":52,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":87,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-s"}],[{"s":38,"e":43,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":49,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":45,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":88,"c":"pl-s"}],[{"s":46,"e":57,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":88,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":57,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":48,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":83,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":86,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":45,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":49,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":87,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-s"}],[{"s":38,"e":43,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":83,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":42,"e":82,"c":"pl-s"}],[{"s":42,"e":49,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":45,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":88,"c":"pl-s"}],[{"s":46,"e":57,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":88,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":57,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":48,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":83,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":86,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":52,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":45,"c":"pl-s"}],[{"s":42,"e":50,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":49,"c":"pl-s"}],[{"s":34,"e":38,"c":"pl-ent"},{"s":40,"e":46,"c":"pl-s"}],[{"s":34,"e":55,"c":"pl-ent"},{"s":57,"e":63,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":43,"c":"pl-s"}],[{"s":28,"e":36,"c":"pl-ent"}],[{"s":30,"e":47,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":28,"e":49,"c":"pl-ent"},{"s":51,"e":57,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":33,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":81,"c":"pl-s"}],[{"s":22,"e":83,"c":"pl-s"}],[{"s":22,"e":77,"c":"pl-s"}],[{"s":20,"e":30,"c":"pl-ent"}],[{"s":22,"e":30,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":82,"c":"pl-s"}],[{"s":26,"e":67,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":37,"c":"pl-ent"}],[{"s":28,"e":48,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":90,"c":"pl-s"}],[{"s":30,"e":82,"c":"pl-s"}],[{"s":30,"e":88,"c":"pl-s"}],[{"s":30,"e":64,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":32,"c":"pl-ent"}],[{"s":28,"e":48,"c":"pl-ent"}],[{"s":30,"e":34,"c":"pl-ent"},{"s":36,"e":42,"c":"pl-s"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":82,"c":"pl-s"}],[{"s":30,"e":83,"c":"pl-s"}],[{"s":30,"e":87,"c":"pl-s"}],[{"s":30,"e":85,"c":"pl-s"}],[{"s":30,"e":37,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":35,"c":"pl-ent"},{"s":37,"e":87,"c":"pl-s"}],[{"s":24,"e":34,"c":"pl-ent"}],[{"s":26,"e":41,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":81,"c":"pl-s"}],[{"s":30,"e":85,"c":"pl-s"}],[{"s":30,"e":81,"c":"pl-s"}],[{"s":30,"e":89,"c":"pl-s"}],[{"s":30,"e":84,"c":"pl-s"}],[{"s":30,"e":83,"c":"pl-s"}],[{"s":30,"e":68,"c":"pl-s"}],[{"s":28,"e":34,"c":"pl-ent"},{"s":36,"e":41,"c":"pl-s"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":47,"c":"pl-c1"}],[{"s":28,"e":35,"c":"pl-ent"},{"s":37,"e":38,"c":"pl-c1"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":41,"c":"pl-s"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":82,"c":"pl-s"}],[{"s":30,"e":58,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":43,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":82,"c":"pl-s"}],[{"s":34,"e":81,"c":"pl-s"}],[{"s":34,"e":40,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":71,"c":"pl-s"},{"s":70,"e":71,"c":"pl-pds"}],[{"s":36,"e":62,"c":"pl-ent"},{"s":64,"e":68,"c":"pl-c1"}],[{"s":34,"e":48,"c":"pl-ent"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":51,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":81,"e":82,"c":"pl-pds"}],[{"s":36,"e":62,"c":"pl-ent"},{"s":64,"e":68,"c":"pl-c1"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":26,"e":34,"c":"pl-ent"}],[{"s":28,"e":39,"c":"pl-ent"},{"s":41,"e":84,"c":"pl-s"}],[{"s":30,"e":51,"c":"pl-s"}],[{"s":28,"e":38,"c":"pl-ent"}],[{"s":30,"e":38,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":81,"c":"pl-s"}],[{"s":34,"e":88,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":87,"c":"pl-s"}],[{"s":38,"e":81,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":59,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":40,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":83,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":83,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":30,"e":34,"c":"pl-ent"}],[{"s":32,"e":43,"c":"pl-ent"},{"s":45,"e":84,"c":"pl-s"}],[{"s":32,"e":42,"c":"pl-ent"}],[{"s":34,"e":42,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":95,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":72,"c":"pl-s"},{"s":71,"e":72,"c":"pl-pds"}],[{"s":36,"e":46,"c":"pl-ent"}],[{"s":38,"e":50,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":87,"c":"pl-s"}],[{"s":42,"e":60,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":84,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":96,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":58,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":74,"c":"pl-s"}],[{"s":44,"e":54,"c":"pl-ent"}],[{"s":46,"e":63,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":85,"c":"pl-s"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":87,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":96,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":87,"c":"pl-s"}],[{"s":56,"e":63,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":84,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":94,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":85,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":59,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":63,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":44,"e":65,"c":"pl-ent"},{"s":67,"e":73,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":49,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":86,"c":"pl-s"}],[{"s":42,"e":84,"c":"pl-s"}],[{"s":42,"e":81,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":90,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":84,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":87,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":65,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":69,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":87,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":91,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":71,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":95,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":89,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":79,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":38,"e":53,"c":"pl-ent"}],[{"s":40,"e":51,"c":"pl-ent"},{"s":53,"e":91,"c":"pl-s"}],[{"s":42,"e":83,"c":"pl-s"}],[{"s":42,"e":86,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":89,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":91,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":93,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":88,"c":"pl-s"}],[{"s":46,"e":90,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":84,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":87,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":59,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":65,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":69,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-s"}],[{"s":54,"e":64,"c":"pl-ent"}],[{"s":56,"e":72,"c":"pl-ent"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":87,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":63,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":89,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":84,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":86,"c":"pl-s"}],[{"s":66,"e":69,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":85,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":76,"c":"pl-s"}],[{"s":62,"e":68,"c":"pl-ent"}],[{"s":64,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":66,"e":87,"c":"pl-s"}],[{"s":66,"e":89,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":81,"c":"pl-s"}],[{"s":66,"e":92,"c":"pl-s"}],[{"s":66,"e":82,"c":"pl-s"}],[{"s":66,"e":85,"c":"pl-s"}],[{"s":66,"e":83,"c":"pl-s"}],[{"s":66,"e":84,"c":"pl-s"}],[{"s":66,"e":78,"c":"pl-s"}],[{"s":64,"e":69,"c":"pl-ent"}],[{"s":66,"e":70,"c":"pl-ent"},{"s":72,"e":78,"c":"pl-s"}],[{"s":64,"e":68,"c":"pl-ent"},{"s":70,"e":75,"c":"pl-s"}],[{"s":60,"e":68,"c":"pl-ent"}],[{"s":62,"e":65,"c":"pl-s"}],[{"s":62,"e":70,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":69,"c":"pl-s"}],[{"s":56,"e":67,"c":"pl-ent"}],[{"s":58,"e":78,"c":"pl-ent"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":69,"c":"pl-ent"},{"s":71,"e":82,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":82,"c":"pl-s"}],[{"s":60,"e":87,"c":"pl-s"}],[{"s":60,"e":86,"c":"pl-s"}],[{"s":60,"e":83,"c":"pl-s"}],[{"s":60,"e":81,"c":"pl-s"}],[{"s":60,"e":85,"c":"pl-s"}],[{"s":60,"e":90,"c":"pl-s"}],[{"s":60,"e":70,"c":"pl-s"}],[{"s":58,"e":62,"c":"pl-ent"},{"s":64,"e":70,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":54,"e":75,"c":"pl-ent"},{"s":77,"e":83,"c":"pl-s"}],[{"s":52,"e":62,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":87,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":91,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":82,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":84,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":82,"c":"pl-s"}],[{"s":56,"e":71,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":85,"c":"pl-s"}],[{"s":52,"e":95,"c":"pl-s"}],[{"s":52,"e":71,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":63,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":88,"c":"pl-ent"}],[{"s":44,"e":55,"c":"pl-ent"},{"s":57,"e":90,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":94,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":84,"c":"pl-s"}],[{"s":46,"e":82,"c":"pl-s"}],[{"s":46,"e":85,"c":"pl-s"}],[{"s":46,"e":81,"c":"pl-s"}],[{"s":46,"e":83,"c":"pl-s"}],[{"s":46,"e":79,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"}],[{"s":48,"e":89,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":81,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":88,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-s"}],[{"s":46,"e":56,"c":"pl-ent"}],[{"s":48,"e":61,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":65,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":88,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":74,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"},{"s":73,"e":74,"c":"pl-pds"},{"s":74,"e":84,"c":"pl-s"}],[{"s":52,"e":89,"c":"pl-s"}],[{"s":50,"e":60,"c":"pl-ent"}],[{"s":52,"e":68,"c":"pl-ent"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":59,"c":"pl-ent"}],[{"s":56,"e":67,"c":"pl-ent"},{"s":69,"e":85,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":81,"c":"pl-s"}],[{"s":58,"e":83,"c":"pl-s"}],[{"s":58,"e":85,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":83,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":73,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":81,"c":"pl-s"}],[{"s":62,"e":93,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":81,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":75,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":58,"e":64,"c":"pl-ent"}],[{"s":60,"e":71,"c":"pl-ent"},{"s":73,"e":82,"c":"pl-s"}],[{"s":62,"e":88,"c":"pl-s"}],[{"s":62,"e":83,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":86,"c":"pl-s"}],[{"s":62,"e":87,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":82,"c":"pl-s"}],[{"s":62,"e":89,"c":"pl-s"}],[{"s":62,"e":74,"c":"pl-s"}],[{"s":60,"e":65,"c":"pl-ent"}],[{"s":62,"e":66,"c":"pl-ent"},{"s":68,"e":74,"c":"pl-s"}],[{"s":60,"e":64,"c":"pl-ent"},{"s":66,"e":71,"c":"pl-s"}],[{"s":56,"e":64,"c":"pl-ent"}],[{"s":58,"e":61,"c":"pl-s"}],[{"s":58,"e":66,"c":"pl-s"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":65,"c":"pl-s"}],[{"s":52,"e":63,"c":"pl-ent"}],[{"s":54,"e":74,"c":"pl-ent"}],[{"s":56,"e":60,"c":"pl-ent"},{"s":62,"e":68,"c":"pl-s"}],[{"s":54,"e":65,"c":"pl-ent"},{"s":67,"e":81,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":83,"c":"pl-s"}],[{"s":56,"e":85,"c":"pl-s"}],[{"s":56,"e":90,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":81,"c":"pl-s"}],[{"s":56,"e":86,"c":"pl-s"}],[{"s":56,"e":66,"c":"pl-s"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":50,"e":71,"c":"pl-ent"},{"s":73,"e":79,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":82,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":94,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":50,"e":55,"c":"pl-ent"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":61,"c":"pl-s"}],[{"s":48,"e":59,"c":"pl-ent"}],[{"s":50,"e":61,"c":"pl-ent"},{"s":63,"e":81,"c":"pl-s"}],[{"s":52,"e":91,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":81,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":84,"c":"pl-s"}],[{"s":52,"e":86,"c":"pl-s"}],[{"s":52,"e":85,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":83,"c":"pl-s"}],[{"s":52,"e":79,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":46,"e":54,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":40,"e":44,"c":"pl-ent"},{"s":46,"e":52,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":44,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":90,"c":"pl-s"}],[{"s":38,"e":86,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":49,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":86,"c":"pl-s"}],[{"s":40,"e":61,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":87,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"}],[{"s":44,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":49,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":85,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":84,"c":"pl-s"}],[{"s":54,"e":98,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":85,"c":"pl-s"}],[{"s":54,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":48,"e":56,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":46,"e":72,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-s"}],[{"s":46,"e":68,"c":"pl-ent"},{"s":70,"e":73,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":34,"e":48,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"}],[{"s":38,"e":83,"c":"pl-s"}],[{"s":38,"e":85,"c":"pl-s"}],[{"s":38,"e":83,"c":"pl-s"}],[{"s":38,"e":77,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":82,"c":"pl-s"}],[{"s":40,"e":74,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":87,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":49,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"}],[{"s":44,"e":76,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":49,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":85,"c":"pl-s"}],[{"s":44,"e":88,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"},{"s":81,"e":83,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":85,"c":"pl-s"}],[{"s":50,"e":86,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":84,"c":"pl-s"}],[{"s":54,"e":98,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":85,"c":"pl-s"}],[{"s":54,"e":83,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":48,"e":56,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":46,"e":72,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-s"}],[{"s":46,"e":68,"c":"pl-ent"},{"s":70,"e":73,"c":"pl-s"}],[{"s":44,"e":50,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":88,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":44,"e":52,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":53,"c":"pl-ent"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":63,"c":"pl-s"}],[{"s":50,"e":54,"c":"pl-ent"},{"s":56,"e":62,"c":"pl-s"}],[{"s":48,"e":55,"c":"pl-ent"},{"s":57,"e":170,"c":"pl-s"}],[{"s":48,"e":74,"c":"pl-ent"},{"s":76,"e":80,"c":"pl-c1"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"},{"s":59,"e":60,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":138,"c":"pl-s"},{"s":137,"e":138,"c":"pl-pds"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":44,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":34,"e":46,"c":"pl-ent"}],[{"s":36,"e":56,"c":"pl-ent"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":82,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"}],[{"s":0,"e":82,"c":"pl-s"},{"s":41,"e":43,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"},{"s":82,"e":84,"c":"pl-cce"}],[{"s":0,"e":91,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"},{"s":87,"e":88,"c":"pl-pds"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":48,"c":"pl-s"}],[{"s":34,"e":63,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"}],[{"s":38,"e":89,"c":"pl-s"}],[{"s":38,"e":83,"c":"pl-s"}],[{"s":38,"e":88,"c":"pl-s"}],[{"s":38,"e":81,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":83,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":86,"c":"pl-s"}],[{"s":38,"e":82,"c":"pl-s"}],[{"s":38,"e":86,"c":"pl-s"}],[{"s":38,"e":86,"c":"pl-s"}],[{"s":38,"e":61,"c":"pl-s"}],[{"s":36,"e":42,"c":"pl-ent"},{"s":44,"e":49,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":49,"c":"pl-s"}],[{"s":34,"e":45,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":81,"c":"pl-s"},{"s":49,"e":50,"c":"pl-pds"},{"s":78,"e":80,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":75,"c":"pl-s"},{"s":74,"e":75,"c":"pl-pds"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":86,"c":"pl-s"}],[{"s":40,"e":51,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":46,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":43,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":89,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":77,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":48,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":82,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":69,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":83,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":42,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":55,"c":"pl-s"}],[{"s":40,"e":45,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":83,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":76,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":34,"e":59,"c":"pl-ent"}],[{"s":36,"e":47,"c":"pl-ent"},{"s":49,"e":84,"c":"pl-s"}],[{"s":38,"e":89,"c":"pl-s"}],[{"s":38,"e":84,"c":"pl-s"}],[{"s":38,"e":100,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-s"}],[{"s":36,"e":41,"c":"pl-ent"}],[{"s":38,"e":49,"c":"pl-ent"},{"s":51,"e":85,"c":"pl-s"}],[{"s":40,"e":83,"c":"pl-s"}],[{"s":40,"e":49,"c":"pl-s"}],[{"s":38,"e":48,"c":"pl-ent"}],[{"s":40,"e":53,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":60,"c":"pl-s"}],[{"s":42,"e":52,"c":"pl-ent"}],[{"s":44,"e":60,"c":"pl-ent"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":85,"c":"pl-s"}],[{"s":48,"e":83,"c":"pl-s"}],[{"s":48,"e":71,"c":"pl-s"}],[{"s":46,"e":51,"c":"pl-ent"}],[{"s":48,"e":59,"c":"pl-ent"},{"s":61,"e":89,"c":"pl-s"}],[{"s":50,"e":85,"c":"pl-s"}],[{"s":50,"e":85,"c":"pl-s"}],[{"s":50,"e":69,"c":"pl-s"}],[{"s":48,"e":58,"c":"pl-ent"}],[{"s":50,"e":53,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":81,"c":"pl-s"}],[{"s":54,"e":83,"c":"pl-s"}],[{"s":54,"e":57,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":84,"c":"pl-s"}],[{"s":54,"e":83,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":89,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":64,"c":"pl-s"}],[{"s":50,"e":56,"c":"pl-ent"}],[{"s":52,"e":63,"c":"pl-ent"},{"s":65,"e":83,"c":"pl-s"}],[{"s":54,"e":87,"c":"pl-s"}],[{"s":54,"e":86,"c":"pl-s"}],[{"s":54,"e":88,"c":"pl-s"}],[{"s":54,"e":84,"c":"pl-s"}],[{"s":54,"e":81,"c":"pl-s"}],[{"s":54,"e":83,"c":"pl-s"}],[{"s":54,"e":78,"c":"pl-s"}],[{"s":52,"e":57,"c":"pl-ent"}],[{"s":54,"e":58,"c":"pl-ent"},{"s":60,"e":66,"c":"pl-s"}],[{"s":52,"e":56,"c":"pl-ent"},{"s":58,"e":63,"c":"pl-s"}],[{"s":48,"e":56,"c":"pl-ent"}],[{"s":50,"e":53,"c":"pl-s"}],[{"s":50,"e":58,"c":"pl-s"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":57,"c":"pl-s"}],[{"s":44,"e":55,"c":"pl-ent"}],[{"s":46,"e":66,"c":"pl-ent"}],[{"s":48,"e":52,"c":"pl-ent"},{"s":54,"e":60,"c":"pl-s"}],[{"s":46,"e":57,"c":"pl-ent"},{"s":59,"e":82,"c":"pl-s"}],[{"s":48,"e":87,"c":"pl-s"}],[{"s":48,"e":84,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":86,"c":"pl-s"}],[{"s":48,"e":82,"c":"pl-s"}],[{"s":48,"e":54,"c":"pl-s"}],[{"s":46,"e":50,"c":"pl-ent"},{"s":52,"e":58,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":42,"e":63,"c":"pl-ent"},{"s":65,"e":71,"c":"pl-s"}],[{"s":40,"e":54,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":81,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":89,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":94,"c":"pl-s"}],[{"s":42,"e":47,"c":"pl-ent"}],[{"s":44,"e":48,"c":"pl-ent"},{"s":50,"e":56,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":53,"c":"pl-s"}],[{"s":42,"e":64,"c":"pl-ent"},{"s":66,"e":72,"c":"pl-s"}],[{"s":40,"e":47,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":99,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":53,"c":"pl-s"},{"s":52,"e":53,"c":"pl-pds"}],[{"s":42,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":55,"c":"pl-s"}],[{"s":40,"e":50,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":86,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":58,"e":60,"c":"pl-cce"},{"s":74,"e":76,"c":"pl-cce"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":67,"e":69,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":90,"c":"pl-s"},{"s":72,"e":74,"c":"pl-cce"},{"s":88,"e":90,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"},{"s":53,"e":55,"c":"pl-cce"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"},{"s":84,"e":85,"c":"pl-pds"}],[{"s":42,"e":48,"c":"pl-ent"},{"s":50,"e":55,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":55,"c":"pl-s"}],[{"s":40,"e":58,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":84,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":93,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":100,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":62,"e":64,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":105,"c":"pl-s"}],[{"s":0,"e":58,"c":"pl-s"},{"s":57,"e":58,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":56,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":82,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"},{"s":54,"e":56,"c":"pl-cce"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":88,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":58,"c":"pl-s"},{"s":57,"e":58,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":51,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":85,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":84,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":86,"c":"pl-s"}],[{"s":44,"e":87,"c":"pl-s"}],[{"s":44,"e":85,"c":"pl-s"}],[{"s":44,"e":82,"c":"pl-s"}],[{"s":44,"e":81,"c":"pl-s"}],[{"s":44,"e":89,"c":"pl-s"}],[{"s":44,"e":83,"c":"pl-s"}],[{"s":44,"e":66,"c":"pl-s"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-ent"}],[{"s":42,"e":53,"c":"pl-ent"},{"s":55,"e":83,"c":"pl-s"},{"s":55,"e":56,"c":"pl-pds"}],[{"s":0,"e":81,"c":"pl-s"},{"s":78,"e":80,"c":"pl-cce"}],[{"s":0,"e":90,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":89,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":82,"c":"pl-s"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":92,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":85,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"}],[{"s":0,"e":84,"c":"pl-s"},{"s":76,"e":78,"c":"pl-cce"}],[{"s":0,"e":82,"c":"pl-s"},{"s":68,"e":70,"c":"pl-cce"}],[{"s":0,"e":51,"c":"pl-s"},{"s":50,"e":51,"c":"pl-pds"}],[{"s":42,"e":46,"c":"pl-ent"},{"s":48,"e":54,"c":"pl-s"}],[{"s":38,"e":46,"c":"pl-ent"}],[{"s":40,"e":47,"c":"pl-s"}],[{"s":40,"e":51,"c":"pl-s"}],[{"s":40,"e":57,"c":"pl-s"}],[{"s":38,"e":42,"c":"pl-ent"},{"s":44,"e":50,"c":"pl-s"}],[{"s":36,"e":40,"c":"pl-ent"},{"s":42,"e":47,"c":"pl-s"}],[{"s":32,"e":36,"c":"pl-ent"},{"s":38,"e":44,"c":"pl-s"}],[{"s":28,"e":32,"c":"pl-ent"},{"s":34,"e":40,"c":"pl-s"}],[{"s":24,"e":28,"c":"pl-ent"},{"s":30,"e":36,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":18,"e":34,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"}],[{"s":22,"e":88,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"},{"s":28,"e":33,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":33,"c":"pl-s"}],[{"s":18,"e":25,"c":"pl-ent"}],[{"s":20,"e":31,"c":"pl-ent"},{"s":33,"e":83,"c":"pl-s"},{"s":33,"e":34,"c":"pl-pds"}],[{"s":0,"e":64,"c":"pl-s"},{"s":63,"e":64,"c":"pl-pds"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":28,"c":"pl-s"}],[{"s":22,"e":44,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"},{"s":26,"e":32,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":24,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":90,"c":"pl-s"}],[{"s":18,"e":51,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":88,"c":"pl-s"},{"s":31,"e":32,"c":"pl-pds"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":87,"c":"pl-s"}],[{"s":0,"e":81,"c":"pl-s"},{"s":20,"e":22,"c":"pl-cce"}],[{"s":0,"e":93,"c":"pl-s"},{"s":79,"e":81,"c":"pl-cce"},{"s":90,"e":92,"c":"pl-cce"}],[{"s":0,"e":100,"c":"pl-s"},{"s":20,"e":22,"c":"pl-cce"},{"s":33,"e":35,"c":"pl-cce"},{"s":41,"e":43,"c":"pl-cce"},{"s":51,"e":53,"c":"pl-cce"}],[{"s":0,"e":86,"c":"pl-s"}],[{"s":0,"e":97,"c":"pl-s"},{"s":26,"e":28,"c":"pl-cce"},{"s":48,"e":50,"c":"pl-cce"},{"s":65,"e":67,"c":"pl-cce"},{"s":72,"e":74,"c":"pl-cce"},{"s":89,"e":91,"c":"pl-cce"},{"s":95,"e":97,"c":"pl-cce"}],[{"s":0,"e":83,"c":"pl-s"},{"s":29,"e":31,"c":"pl-cce"},{"s":58,"e":60,"c":"pl-cce"},{"s":62,"e":64,"c":"pl-cce"},{"s":82,"e":83,"c":"pl-pds"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":38,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":84,"c":"pl-s"}],[{"s":24,"e":85,"c":"pl-s"}],[{"s":24,"e":80,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"},{"s":30,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":27,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":81,"c":"pl-s"}],[{"s":24,"e":82,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-ent"},{"s":33,"e":38,"c":"pl-c1"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":38,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":89,"c":"pl-s"}],[{"s":24,"e":100,"c":"pl-s"}],[{"s":24,"e":89,"c":"pl-s"}],[{"s":24,"e":86,"c":"pl-s"}],[{"s":24,"e":46,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"},{"s":30,"e":35,"c":"pl-s"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":32,"c":"pl-c1"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":87,"c":"pl-s"}],[{"s":24,"e":81,"c":"pl-s"}],[{"s":24,"e":82,"c":"pl-s"}],[{"s":24,"e":86,"c":"pl-s"}],[{"s":24,"e":81,"c":"pl-s"}],[{"s":24,"e":52,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-ent"},{"s":33,"e":37,"c":"pl-c1"}],[{"s":22,"e":31,"c":"pl-ent"},{"s":33,"e":34,"c":"pl-c1"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":71,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":88,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"}],[{"s":24,"e":30,"c":"pl-s"},{"s":24,"e":25,"c":"pl-pds"},{"s":29,"e":30,"c":"pl-pds"}],[{"s":24,"e":31,"c":"pl-s"},{"s":24,"e":25,"c":"pl-pds"},{"s":30,"e":31,"c":"pl-pds"}],[{"s":24,"e":31,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":98,"c":"pl-s"}],[{"s":24,"e":87,"c":"pl-s"}],[{"s":24,"e":86,"c":"pl-s"}],[{"s":24,"e":83,"c":"pl-s"}],[{"s":24,"e":100,"c":"pl-s"}],[{"s":22,"e":31,"c":"pl-ent"},{"s":33,"e":36,"c":"pl-c1"}],[{"s":22,"e":29,"c":"pl-ent"},{"s":31,"e":142,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":38,"c":"pl-s"}],[{"s":20,"e":27,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":86,"c":"pl-s"}],[{"s":18,"e":85,"c":"pl-s"}],[{"s":18,"e":44,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":14,"e":17,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":18,"e":87,"c":"pl-s"}],[{"s":18,"e":39,"c":"pl-s"}],[{"s":16,"e":22,"c":"pl-ent"},{"s":24,"e":29,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":29,"c":"pl-s"}],[{"s":14,"e":21,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":84,"c":"pl-s"}],[{"s":20,"e":59,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"}],[{"s":18,"e":24,"c":"pl-s"}],[{"s":18,"e":40,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":28,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":4,"e":16,"c":"pl-ent"}],[{"s":6,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[],[],[{"s":0,"e":57,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":35,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":30,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":13,"c":"pl-ent"}],[{"s":4,"e":41,"c":"pl-ent"},{"s":43,"e":50,"c":"pl-s"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":41,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":27,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":22,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":30,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":26,"c":"pl-s"}],[{"s":4,"e":12,"c":"pl-ent"},{"s":14,"e":26,"c":"pl-s"}],[{"s":2,"e":7,"c":"pl-ent"},{"s":9,"e":16,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":28,"c":"pl-ent"}],[{"s":6,"e":17,"c":"pl-ent"},{"s":19,"e":60,"c":"pl-s"}],[{"s":6,"e":14,"c":"pl-ent"},{"s":16,"e":65,"c":"pl-s"}],[{"s":6,"e":10,"c":"pl-ent"},{"s":12,"e":21,"c":"pl-s"}],[{"s":6,"e":10,"c":"pl-ent"},{"s":12,"e":18,"c":"pl-s"}],[{"s":6,"e":17,"c":"pl-ent"},{"s":19,"e":63,"c":"pl-s"}],[{"s":6,"e":14,"c":"pl-ent"},{"s":16,"e":67,"c":"pl-s"}],[{"s":6,"e":10,"c":"pl-ent"},{"s":12,"e":23,"c":"pl-s"}],[{"s":6,"e":10,"c":"pl-ent"},{"s":12,"e":18,"c":"pl-s"}],[{"s":6,"e":17,"c":"pl-ent"},{"s":19,"e":53,"c":"pl-s"}],[{"s":6,"e":14,"c":"pl-ent"},{"s":16,"e":64,"c":"pl-s"}],[{"s":6,"e":10,"c":"pl-ent"},{"s":12,"e":20,"c":"pl-s"}],[{"s":6,"e":10,"c":"pl-ent"},{"s":12,"e":18,"c":"pl-s"}],[{"s":6,"e":17,"c":"pl-ent"},{"s":19,"e":74,"c":"pl-s"}],[{"s":6,"e":14,"c":"pl-ent"},{"s":16,"e":77,"c":"pl-s"}],[{"s":6,"e":10,"c":"pl-ent"},{"s":12,"e":17,"c":"pl-s"}],[{"s":6,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-s"}],[{"s":4,"e":8,"c":"pl-ent"},{"s":10,"e":12,"c":"pl-c1"}],[{"s":4,"e":10,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-ent"}],[{"s":8,"e":19,"c":"pl-ent"},{"s":21,"e":82,"c":"pl-s"}],[{"s":10,"e":56,"c":"pl-s"}],[{"s":8,"e":18,"c":"pl-ent"}],[{"s":10,"e":20,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":88,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":83,"c":"pl-s"}],[{"s":0,"e":171,"c":"pl-s"},{"s":170,"e":171,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":84,"c":"pl-s"},{"s":25,"e":26,"c":"pl-pds"}],[{"s":0,"e":84,"c":"pl-s"}],[{"s":0,"e":175,"c":"pl-s"},{"s":174,"e":175,"c":"pl-pds"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":14,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":83,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":10,"e":16,"c":"pl-ent"}],[{"s":12,"e":23,"c":"pl-ent"},{"s":25,"e":86,"c":"pl-s"}],[{"s":12,"e":22,"c":"pl-ent"}],[{"s":14,"e":24,"c":"pl-ent"}],[{"s":16,"e":27,"c":"pl-ent"},{"s":29,"e":88,"c":"pl-s"}],[{"s":18,"e":82,"c":"pl-s"}],[{"s":18,"e":43,"c":"pl-s"}],[{"s":16,"e":21,"c":"pl-ent"}],[{"s":18,"e":29,"c":"pl-ent"},{"s":31,"e":84,"c":"pl-s"}],[{"s":20,"e":46,"c":"pl-s"}],[{"s":18,"e":28,"c":"pl-ent"}],[{"s":20,"e":38,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":39,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"},{"s":30,"e":39,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":27,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":86,"c":"pl-s"}],[{"s":24,"e":32,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":38,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":84,"c":"pl-s"}],[{"s":24,"e":85,"c":"pl-s"}],[{"s":24,"e":89,"c":"pl-s"}],[{"s":24,"e":86,"c":"pl-s"}],[{"s":24,"e":46,"c":"pl-s"}],[{"s":22,"e":28,"c":"pl-ent"},{"s":30,"e":35,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":35,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":75,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":83,"c":"pl-s"}],[{"s":24,"e":35,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-ent"}],[{"s":22,"e":33,"c":"pl-ent"},{"s":35,"e":88,"c":"pl-s"}],[{"s":24,"e":36,"c":"pl-s"}],[{"s":22,"e":26,"c":"pl-ent"},{"s":28,"e":34,"c":"pl-s"}],[{"s":18,"e":26,"c":"pl-ent"}],[{"s":20,"e":38,"c":"pl-s"}],[{"s":20,"e":26,"c":"pl-s"}],[{"s":20,"e":24,"c":"pl-s"}],[{"s":18,"e":22,"c":"pl-ent"},{"s":24,"e":30,"c":"pl-s"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":27,"c":"pl-s"}],[{"s":12,"e":20,"c":"pl-ent"}],[{"s":14,"e":24,"c":"pl-s"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":24,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":20,"c":"pl-s"}],[{"s":4,"e":10,"c":"pl-ent"},{"s":12,"e":16,"c":"pl-c1"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":17,"c":"pl-c1"}],[{"s":4,"e":16,"c":"pl-ent"}],[{"s":6,"e":12,"c":"pl-ent"},{"s":14,"e":16,"c":"pl-s"}],[],[],[{"s":0,"e":90,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":14,"c":"pl-c1"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":20,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":23,"c":"pl-s"}],[{"s":2,"e":11,"c":"pl-ent"},{"s":13,"e":28,"c":"pl-s"}],[{"s":0,"e":16,"c":"pl-ent"}],[{"s":2,"e":4,"c":"pl-s"}],[],[{"s":0,"e":80,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":70,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":40,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":17,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":23,"c":"pl-s"}],[{"s":0,"e":5,"c":"pl-ent"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":10,"c":"pl-s"},{"s":8,"e":9,"c":"pl-pds"},{"s":9,"e":10,"c":"pl-pds"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":20,"c":"pl-s"}],[{"s":8,"e":16,"c":"pl-s"}],[{"s":8,"e":17,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":18,"c":"pl-s"}],[{"s":8,"e":15,"c":"pl-s"}],[{"s":8,"e":23,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":10,"c":"pl-s"},{"s":8,"e":9,"c":"pl-pds"},{"s":9,"e":10,"c":"pl-pds"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":22,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":10,"c":"pl-s"},{"s":8,"e":9,"c":"pl-pds"},{"s":9,"e":10,"c":"pl-pds"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":22,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":17,"c":"pl-ent"}],[{"s":8,"e":28,"c":"pl-s"}],[{"s":8,"e":28,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":10,"c":"pl-s"},{"s":8,"e":9,"c":"pl-pds"},{"s":9,"e":10,"c":"pl-pds"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":6,"e":56,"c":"pl-c"},{"s":6,"e":7,"c":"pl-c"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":6,"e":42,"c":"pl-c"},{"s":6,"e":7,"c":"pl-c"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":33,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":20,"c":"pl-s"}],[{"s":8,"e":27,"c":"pl-s"}],[{"s":8,"e":20,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":16,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":19,"c":"pl-s"}],[{"s":8,"e":18,"c":"pl-s"}],[{"s":8,"e":20,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":4,"e":17,"c":"pl-ent"}],[{"s":8,"e":23,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":30,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":26,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":11,"c":"pl-s"},{"s":8,"e":9,"c":"pl-pds"},{"s":10,"e":11,"c":"pl-pds"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":6,"e":23,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":6,"e":21,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":6,"e":27,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":6,"e":25,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":6,"e":12,"c":"pl-s"}],[{"s":6,"e":11,"c":"pl-s"}],[{"s":6,"e":10,"c":"pl-s"}],[{"s":6,"e":9,"c":"pl-s"}],[{"s":6,"e":11,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":6,"e":27,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":6,"e":13,"c":"pl-s"}],[{"s":6,"e":35,"c":"pl-s"}],[{"s":6,"e":23,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":6,"e":9,"c":"pl-s"}],[{"s":6,"e":10,"c":"pl-s"}],[{"s":6,"e":11,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":25,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":23,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":28,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":30,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":19,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":2,"e":28,"c":"pl-c"},{"s":2,"e":3,"c":"pl-c"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":27,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":22,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":18,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":2,"e":55,"c":"pl-c"},{"s":2,"e":3,"c":"pl-c"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":27,"c":"pl-s"}],[{"s":4,"e":17,"c":"pl-ent"}],[{"s":8,"e":23,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":27,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":11,"c":"pl-s"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":8,"e":14,"c":"pl-s"}],[{"s":0,"e":113,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":27,"c":"pl-s"}],[{"s":4,"e":13,"c":"pl-ent"}],[{"s":8,"e":34,"c":"pl-s"}],[{"s":4,"e":9,"c":"pl-ent"}],[{"s":8,"e":12,"c":"pl-s"}],[{"s":8,"e":13,"c":"pl-s"}],[],[{"s":0,"e":87,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":24,"c":"pl-s"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":40,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":23,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":22,"c":"pl-s"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":23,"c":"pl-s"}],[{"s":2,"e":11,"c":"pl-ent"},{"s":13,"e":28,"c":"pl-s"}],[{"s":0,"e":7,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":19,"c":"pl-s"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":23,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"},{"s":12,"e":37,"c":"pl-s"}],[],[{"s":0,"e":75,"c":"pl-c"},{"s":0,"e":1,"c":"pl-c"}],[{"s":0,"e":10,"c":"pl-ent"},{"s":12,"e":19,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"},{"s":6,"e":16,"c":"pl-s"}],[{"s":0,"e":8,"c":"pl-ent"}],[{"s":2,"e":6,"c":"pl-ent"},{"s":8,"e":23,"c":"pl-s"}],[{"s":2,"e":11,"c":"pl-ent"},{"s":13,"e":28,"c":"pl-s"}],[{"s":2,"e":8,"c":"pl-ent"}],[{"s":4,"e":11,"c":"pl-ent"},{"s":13,"e":28,"c":"pl-s"}],[{"s":0,"e":4,"c":"pl-ent"}],[{"s":2,"e":10,"c":"pl-ent"},{"s":12,"e":13,"c":"pl-c1"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":15,"c":"pl-ent"}],[{"s":6,"e":10,"c":"pl-ent"},{"s":12,"e":27,"c":"pl-s"}],[{"s":2,"e":10,"c":"pl-ent"}],[{"s":4,"e":12,"c":"pl-ent"}],[{"s":6,"e":12,"c":"pl-ent"}],[{"s":8,"e":12,"c":"pl-ent"},{"s":14,"e":29,"c":"pl-s"}],[{"s":8,"e":15,"c":"pl-ent"},{"s":17,"e":32,"c":"pl-s"}],[{"s":4,"e":8,"c":"pl-ent"}],[{"s":6,"e":18,"c":"pl-ent"}],[{"s":8,"e":24,"c":"pl-ent"},{"s":26,"e":31,"c":"pl-s"}],[{"s":6,"e":17,"c":"pl-ent"}],[{"s":10,"e":16,"c":"pl-ent"},{"s":18,"e":27,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"},{"s":20,"e":26,"c":"pl-s"}],[{"s":10,"e":16,"c":"pl-ent"},{"s":18,"e":28,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"},{"s":20,"e":26,"c":"pl-s"}],[{"s":6,"e":24,"c":"pl-ent"},{"s":26,"e":41,"c":"pl-s"}],[{"s":6,"e":17,"c":"pl-ent"},{"s":19,"e":23,"c":"pl-c1"}],[{"s":6,"e":92,"c":"pl-c"},{"s":6,"e":7,"c":"pl-c"}],[{"s":6,"e":15,"c":"pl-ent"},{"s":17,"e":40,"c":"pl-s"}],[{"s":6,"e":16,"c":"pl-ent"}],[{"s":10,"e":14,"c":"pl-ent"},{"s":16,"e":31,"c":"pl-s"}],[{"s":10,"e":15,"c":"pl-ent"},{"s":17,"e":49,"c":"pl-s"}],[{"s":10,"e":25,"c":"pl-ent"},{"s":27,"e":39,"c":"pl-s"}],[{"s":10,"e":17,"c":"pl-ent"}],[{"s":14,"e":22,"c":"pl-s"}],[{"s":10,"e":22,"c":"pl-ent"}],[{"s":14,"e":18,"c":"pl-ent"},{"s":20,"e":34,"c":"pl-s"}],[{"s":14,"e":22,"c":"pl-ent"},{"s":24,"e":28,"c":"pl-c1"}],[{"s":14,"e":23,"c":"pl-ent"},{"s":25,"e":40,"c":"pl-s"}],[{"s":10,"e":13,"c":"pl-ent"}],[{"s":14,"e":18,"c":"pl-ent"},{"s":20,"e":35,"c":"pl-s"}],[{"s":14,"e":19,"c":"pl-ent"},{"s":21,"e":23,"c":"pl-s"},{"s":21,"e":22,"c":"pl-pds"},{"s":22,"e":23,"c":"pl-pds"}],[{"s":14,"e":18,"c":"pl-ent"},{"s":20,"e":28,"c":"pl-s"}],[{"s":14,"e":23,"c":"pl-ent"}],[{"s":16,"e":24,"c":"pl-ent"}],[{"s":18,"e":27,"c":"pl-ent"},{"s":29,"e":42,"c":"pl-s"}],[{"s":14,"e":18,"c":"pl-ent"},{"s":20,"e":33,"c":"pl-s"}],[{"s":14,"e":19,"c":"pl-ent"},{"s":21,"e":38,"c":"pl-s"},{"s":21,"e":22,"c":"pl-pds"},{"s":37,"e":38,"c":"pl-pds"}],[{"s":14,"e":18,"c":"pl-ent"},{"s":20,"e":54,"c":"pl-s"}],[{"s":14,"e":19,"c":"pl-ent"},{"s":21,"e":29,"c":"pl-s"}],[{"s":10,"e":17,"c":"pl-ent"}],[{"s":14,"e":26,"c":"pl-ent"}],[{"s":16,"e":20,"c":"pl-ent"},{"s":22,"e":50,"c":"pl-s"}],[{"s":16,"e":24,"c":"pl-ent"},{"s":26,"e":30,"c":"pl-c1"}],[{"s":6,"e":13,"c":"pl-ent"}],[{"s":10,"e":14,"c":"pl-ent"},{"s":16,"e":30,"c":"pl-s"}],[{"s":10,"e":18,"c":"pl-ent"}],[{"s":12,"e":16,"c":"pl-ent"},{"s":18,"e":33,"c":"pl-s"}]],"colorizedLines":null,"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/projectcalico/calico/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null},"displayName":"tigera-operator.yaml","displayUrl":"https://github.com/projectcalico/calico/blob/release-v3.26/manifests/tigera-operator.yaml?raw=true","headerInfo":{"blobSize":"1.46 MB","deleteTooltip":"You must be signed in to make or propose changes","editTooltip":"You must be signed in to make or propose changes","ghDesktopPath":"https://desktop.github.com","isGitLfs":false,"onBranch":true,"shortPath":"51dfec4","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Fprojectcalico%2Fcalico%2Fblob%2Frelease-v3.26%2Fmanifests%2Ftigera-operator.yaml","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"22234","truncatedSloc":"22212"},"mode":"file"},"image":false,"isCodeownersFile":null,"isPlain":false,"isValidLegacyIssueTemplate":false,"issueTemplate":null,"discussionTemplate":null,"language":"YAML","languageID":407,"large":false,"planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/projectcalico/calico/blob/release-v3.26/manifests/tigera-operator.yaml","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","releasePath":"/projectcalico/calico/releases/new?marketplace=true","showPublishActionBanner":false},"rawBlobUrl":"https://github.com/projectcalico/calico/raw/refs/heads/release-v3.26/manifests/tigera-operator.yaml","renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"shortPath":null,"symbolsEnabled":true,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timed_out":false,"not_analyzed":true,"symbols":[]}},"copilotInfo":null,"copilotAccessAllowed":false,"csrf_tokens":{"/projectcalico/calico/branches":{"post":"xf-x7AVaU7Ykx3wag_yuLchFECMnT7_mvB9L2Z5zXdJgQeLOYZM9yXJCydVJzoG6DLbs8LyvORB2gT9ADCX4uQ"},"/repos/preferences":{"post":"X6HsiA1lYK6BkxNbmsUWDOQqX0JR5al6-3K7GJCR-F58FNy--w9IYbdp1qokgKDtqwzYgK9NREddyHP30W53vQ"}}},"title":"calico/manifests/tigera-operator.yaml at release-v3.26 · projectcalico/calico","appPayload":{"helpUrl":"https://docs.github.com","findFileWorkerPath":"/assets-cdn/worker/find-file-worker-9f8a877aa99f.js","findInFileWorkerPath":"/assets-cdn/worker/find-in-file-worker-eb3d353f90ce.js","githubDevUrl":null,"enabled_features":{"code_nav_ui_events":false,"overview_shared_code_dropdown_button":false,"react_blob_overlay":false,"copilot_conversational_ux_embedding_update":false,"copilot_smell_icebreaker_ux":true,"copilot_workspace":false,"accessible_code_button":true,"github_models_prompt_link":false}}}</script>
  <div data-target="react-app.reactRoot"></div>
</react-app>
</turbo-frame>



  </div>

</turbo-frame>

    </main>
  </div>

  </div>

          <footer class="footer pt-8 pb-6 f6 color-fg-muted p-responsive" role="contentinfo" >
  <h2 class='sr-only'>Footer</h2>

  


  <div class="d-flex flex-justify-center flex-items-center flex-column-reverse flex-lg-row flex-wrap flex-lg-nowrap">
    <div class="d-flex flex-items-center flex-shrink-0 mx-2">
      <a aria-label="Homepage" title="GitHub" class="footer-octicon mr-2" href="https://github.com">
        <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-mark-github">
    <path d="M12.5.75C6.146.75 1 5.896 1 12.25c0 5.089 3.292 9.387 7.863 10.91.575.101.79-.244.79-.546 0-.273-.014-1.178-.014-2.142-2.889.532-3.636-.704-3.866-1.35-.13-.331-.69-1.352-1.18-1.625-.402-.216-.977-.748-.014-.762.906-.014 1.553.834 1.769 1.179 1.035 1.74 2.688 1.25 3.349.948.1-.747.402-1.25.733-1.538-2.559-.287-5.232-1.279-5.232-5.678 0-1.25.445-2.285 1.178-3.09-.115-.288-.517-1.467.115-3.048 0 0 .963-.302 3.163 1.179.92-.259 1.897-.388 2.875-.388.977 0 1.955.13 2.875.388 2.2-1.495 3.162-1.179 3.162-1.179.633 1.581.23 2.76.115 3.048.733.805 1.179 1.825 1.179 3.09 0 4.413-2.688 5.39-5.247 5.678.417.36.776 1.05.776 2.128 0 1.538-.014 2.774-.014 3.162 0 .302.216.662.79.547C20.709 21.637 24 17.324 24 12.25 24 5.896 18.854.75 12.5.75Z"></path>
</svg>
</a>
      <span>
        &copy; 2024 GitHub,&nbsp;Inc.
      </span>
    </div>

    <nav aria-label="Footer">
      <h3 class="sr-only" id="sr-footer-heading">Footer navigation</h3>

      <ul class="list-style-none d-flex flex-justify-center flex-wrap mb-2 mb-lg-0" aria-labelledby="sr-footer-heading">

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to Terms&quot;,&quot;label&quot;:&quot;text:terms&quot;}" href="https://docs.github.com/site-policy/github-terms/github-terms-of-service" data-view-component="true" class="Link--secondary Link">Terms</a>
          </li>

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to privacy&quot;,&quot;label&quot;:&quot;text:privacy&quot;}" href="https://docs.github.com/site-policy/privacy-policies/github-privacy-statement" data-view-component="true" class="Link--secondary Link">Privacy</a>
          </li>

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to security&quot;,&quot;label&quot;:&quot;text:security&quot;}" href="https://github.com/security" data-view-component="true" class="Link--secondary Link">Security</a>
          </li>

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to status&quot;,&quot;label&quot;:&quot;text:status&quot;}" href="https://www.githubstatus.com/" data-view-component="true" class="Link--secondary Link">Status</a>
          </li>

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to docs&quot;,&quot;label&quot;:&quot;text:docs&quot;}" href="https://docs.github.com/" data-view-component="true" class="Link--secondary Link">Docs</a>
          </li>

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to contact&quot;,&quot;label&quot;:&quot;text:contact&quot;}" href="https://support.github.com?tags=dotcom-footer" data-view-component="true" class="Link--secondary Link">Contact</a>
          </li>

          <li class="mx-2" >
  <cookie-consent-link>
    <button
      type="button"
      class="Link--secondary underline-on-hover border-0 p-0 color-bg-transparent"
      data-action="click:cookie-consent-link#showConsentManagement"
      data-analytics-event="{&quot;location&quot;:&quot;footer&quot;,&quot;action&quot;:&quot;cookies&quot;,&quot;context&quot;:&quot;subfooter&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;cookies_link_subfooter_footer&quot;}"
    >
      Manage cookies
    </button>
  </cookie-consent-link>
</li>

<li class="mx-2">
  <cookie-consent-link>
    <button
      type="button"
      class="Link--secondary underline-on-hover border-0 p-0 color-bg-transparent"
      data-action="click:cookie-consent-link#showConsentManagement"
      data-analytics-event="{&quot;location&quot;:&quot;footer&quot;,&quot;action&quot;:&quot;dont_share_info&quot;,&quot;context&quot;:&quot;subfooter&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;dont_share_info_link_subfooter_footer&quot;}"
    >
      Do not share my personal information
    </button>
  </cookie-consent-link>
</li>

      </ul>
    </nav>
  </div>
</footer>




    <ghcc-consent id="ghcc" class="position-fixed bottom-0 left-0" style="z-index: 999999" data-initial-cookie-consent-allowed="" data-cookie-consent-required="true"></ghcc-consent>


  <div id="ajax-error-message" class="ajax-error-message flash flash-error" hidden>
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
    </button>
    You can’t perform that action at this time.
  </div>

    <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm" open>
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog>
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

    <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box color-shadow-large" style="width:360px;">
  </div>
</div>

    <template id="snippet-clipboard-copy-button">
  <div class="zeroclipboard-container position-absolute right-0 top-0">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn js-clipboard-copy m-2 p-0" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon m-2">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>
<template id="snippet-clipboard-copy-button-unpositioned">
  <div class="zeroclipboard-container">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 d-flex flex-justify-center flex-items-center" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>




    </div>

    <div id="js-global-screen-reader-notice" class="sr-only mt-n1" aria-live="polite" aria-atomic="true" ></div>
    <div id="js-global-screen-reader-notice-assertive" class="sr-only mt-n1" aria-live="assertive" aria-atomic="true"></div>
  </body>
</html>

